(function($t,j){typeof exports=="object"&&typeof module!="undefined"?module.exports=j():typeof define=="function"&&define.amd?define(j):($t=typeof globalThis!="undefined"?globalThis:$t||self,$t.app=j())})(this,function(){"use strict";const $t=window.customElements.define.bind(window.customElements);window.customElements.define=(r,...e)=>{if(!customElements.get(r))return $t(r,...e)};function j(){}function $(r,e){for(const t in e)r[t]=e[t];return r}function Hr(r){return r()}function en(){return Object.create(null)}function et(r){r.forEach(Hr)}function er(r){return typeof r=="function"}function He(r,e){return r!=r?e==e:r!==e||r&&typeof r=="object"||typeof r=="function"}function _r(r,e){return r!=r?e==e:r!==e}function tn(r){return Object.keys(r).length===0}function rn(r,...e){if(r==null)return j;const t=r.subscribe(...e);return t.unsubscribe?()=>t.unsubscribe():t}function pr(r,e,t){r.$$.on_destroy.push(rn(e,t))}function pe(r){const e={};for(const t in r)t[0]!=="$"&&(e[t]=r[t]);return e}let gr=!1;function Yi(){gr=!0}function Vi(){gr=!1}function Xi(r,e,t,n){for(;r<e;){const i=r+(e-r>>1);t(i)<=n?r=i+1:e=i}return r}function Ki(r){if(r.hydrate_init)return;r.hydrate_init=!0;let e=r.childNodes;if(r.nodeName==="HEAD"){const o=[];for(let a=0;a<e.length;a++){const f=e[a];f.claim_order!==void 0&&o.push(f)}e=o}const t=new Int32Array(e.length+1),n=new Int32Array(e.length);t[0]=-1;let i=0;for(let o=0;o<e.length;o++){const a=e[o].claim_order,f=(i>0&&e[t[i]].claim_order<=a?i+1:Xi(1,i,g=>e[t[g]].claim_order,a))-1;n[o]=t[f]+1;const u=f+1;t[u]=o,i=Math.max(u,i)}const l=[],s=[];let c=e.length-1;for(let o=t[i]+1;o!=0;o=n[o-1]){for(l.push(e[o-1]);c>=o;c--)s.push(e[c]);c--}for(;c>=0;c--)s.push(e[c]);l.reverse(),s.sort((o,a)=>o.claim_order-a.claim_order);for(let o=0,a=0;o<s.length;o++){for(;a<l.length&&s[o].claim_order>=l[a].claim_order;)a++;const f=a<l.length?l[a]:null;r.insertBefore(s[o],f)}}function p(r,e){r.appendChild(e)}function T(r,e){if(gr){for(Ki(r),(r.actual_end_child===void 0||r.actual_end_child!==null&&r.actual_end_child.parentElement!==r)&&(r.actual_end_child=r.firstChild);r.actual_end_child!==null&&r.actual_end_child.claim_order===void 0;)r.actual_end_child=r.actual_end_child.nextSibling;e!==r.actual_end_child?(e.claim_order!==void 0||e.parentNode!==r)&&r.insertBefore(e,r.actual_end_child):r.actual_end_child=e.nextSibling}else(e.parentNode!==r||e.nextSibling!==null)&&r.appendChild(e)}function x(r,e,t){r.insertBefore(e,t||null)}function Ve(r,e,t){gr&&!t?T(r,e):(e.parentNode!==r||e.nextSibling!=t)&&r.insertBefore(e,t||null)}function h(r){r.parentNode.removeChild(r)}function jr(r,e){for(let t=0;t<r.length;t+=1)r[t]&&r[t].d(e)}function w(r){return document.createElement(r)}function E(r){return document.createElementNS("http://www.w3.org/2000/svg",r)}function te(r){return document.createTextNode(r)}function H(){return te(" ")}function st(){return te("")}function he(r,e,t,n){return r.addEventListener(e,t,n),()=>r.removeEventListener(e,t,n)}function Qi(r){return function(e){return e.preventDefault(),r.call(this,e)}}function qi(r){return function(e){return e.stopPropagation(),r.call(this,e)}}function d(r,e,t){t==null?r.removeAttribute(e):r.getAttribute(e)!==t&&r.setAttribute(e,t)}function ye(r,e){for(const t in e)d(r,t,e[t])}function q(r,e,t){e in r?r[e]=typeof r[e]=="boolean"&&t===""?!0:t:d(r,e,t)}function C(r){return Array.from(r.childNodes)}function $i(r){r.claim_info===void 0&&(r.claim_info={last_index:0,total_claimed:0})}function nn(r,e,t,n,i=!1){$i(r);const l=(()=>{for(let s=r.claim_info.last_index;s<r.length;s++){const c=r[s];if(e(c)){const o=t(c);return o===void 0?r.splice(s,1):r[s]=o,i||(r.claim_info.last_index=s),c}}for(let s=r.claim_info.last_index-1;s>=0;s--){const c=r[s];if(e(c)){const o=t(c);return o===void 0?r.splice(s,1):r[s]=o,i?o===void 0&&r.claim_info.last_index--:r.claim_info.last_index=s,c}}return n()})();return l.claim_order=r.claim_info.total_claimed,r.claim_info.total_claimed+=1,l}function eo(r,e,t,n){return nn(r,i=>i.nodeName===e,i=>{const l=[];for(let s=0;s<i.attributes.length;s++){const c=i.attributes[s];t[c.name]||l.push(c.name)}l.forEach(s=>i.removeAttribute(s))},()=>n(e))}function S(r,e,t){return eo(r,e,t,E)}function vt(r,e){return nn(r,t=>t.nodeType===3,t=>{const n=""+e;if(t.data.startsWith(n)){if(t.data.length!==n.length)return t.splitText(n.length)}else t.data=n},()=>te(e),!0)}function Ae(r,e){e=""+e,r.wholeText!==e&&(r.data=e)}function on(r,e){r.value=e==null?"":e}function br(r,e){for(let t=0;t<r.options.length;t+=1){const n=r.options[t];if(n.__value===e){n.selected=!0;return}}r.selectedIndex=-1}function Fe(r,e,t){r.classList[t?"add":"remove"](e)}function Et(r){const e={};for(const t of r)e[t.name]=t.value;return e}let tr;function rr(r){tr=r}function ln(){if(!tr)throw new Error("Function called outside component initialization");return tr}function to(r){ln().$$.on_mount.push(r)}const nr=[],Ct=[],vr=[],sn=[],an=Promise.resolve();let Br=!1;function cn(){Br||(Br=!0,an.then(z))}function wr(){return cn(),an}function yr(r){vr.push(r)}const Ur=new Set;let kr=0;function z(){const r=tr;do{for(;kr<nr.length;){const e=nr[kr];kr++,rr(e),ro(e.$$)}for(rr(null),nr.length=0,kr=0;Ct.length;)Ct.pop()();for(let e=0;e<vr.length;e+=1){const t=vr[e];Ur.has(t)||(Ur.add(t),t())}vr.length=0}while(nr.length);for(;sn.length;)sn.pop()();Br=!1,Ur.clear(),rr(r)}function ro(r){if(r.fragment!==null){r.update(),et(r.before_update);const e=r.dirty;r.dirty=[-1],r.fragment&&r.fragment.p(r.ctx,e),r.after_update.forEach(yr)}}const xr=new Set;let zt;function We(){zt={r:0,c:[],p:zt}}function Ze(){zt.r||et(zt.c),zt=zt.p}function W(r,e){r&&r.i&&(xr.delete(r),r.i(e))}function re(r,e,t,n){if(r&&r.o){if(xr.has(r))return;xr.add(r),zt.c.push(()=>{xr.delete(r),n&&(t&&r.d(1),n())}),r.o(e)}}function Er(r,e){r.d(1),e.delete(r.key)}function Cr(r,e,t,n,i,l,s,c,o,a,f,u){let g=r.length,b=l.length,v=g;const A={};for(;v--;)A[r[v].key]=v;const y=[],O=new Map,R=new Map;for(v=b;v--;){const P=u(i,l,v),M=t(P);let U=s.get(M);U?n&&U.p(P,e):(U=a(M,P),U.c()),O.set(M,y[v]=U),M in A&&R.set(M,Math.abs(v-A[M]))}const G=new Set,le=new Set;function ee(P){W(P,1),P.m(c,f),s.set(P.key,P),f=P.first,b--}for(;g&&b;){const P=y[b-1],M=r[g-1],U=P.key,fe=M.key;P===M?(f=P.first,g--,b--):O.has(fe)?!s.has(U)||G.has(U)?ee(P):le.has(fe)?g--:R.get(U)>R.get(fe)?(le.add(U),ee(P)):(G.add(fe),g--):(o(M,s),g--)}for(;g--;){const P=r[g];O.has(P.key)||o(P,s)}for(;b;)ee(y[b-1]);return y}function Xe(r,e){const t={},n={},i={$$scope:1};let l=r.length;for(;l--;){const s=r[l],c=e[l];if(c){for(const o in s)o in c||(n[o]=1);for(const o in c)i[o]||(t[o]=c[o],i[o]=1);r[l]=c}else for(const o in s)i[o]=1}for(const s in n)s in t||(t[s]=void 0);return t}function nt(r){r&&r.c()}function rt(r,e,t,n){const{fragment:i,on_mount:l,on_destroy:s,after_update:c}=r.$$;i&&i.m(e,t),n||yr(()=>{const o=l.map(Hr).filter(er);s?s.push(...o):et(o),r.$$.on_mount=[]}),c.forEach(yr)}function tt(r,e){const t=r.$$;t.fragment!==null&&(et(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function no(r,e){r.$$.dirty[0]===-1&&(nr.push(r),cn(),r.$$.dirty.fill(0)),r.$$.dirty[e/31|0]|=1<<e%31}function Me(r,e,t,n,i,l,s,c=[-1]){const o=tr;rr(r);const a=r.$$={fragment:null,ctx:null,props:l,update:j,not_equal:i,bound:en(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(o?o.$$.context:[])),callbacks:en(),dirty:c,skip_bound:!1,root:e.target||o.$$.root};s&&s(a.root);let f=!1;if(a.ctx=t?t(r,e.props||{},(u,g,...b)=>{const v=b.length?b[0]:g;return a.ctx&&i(a.ctx[u],a.ctx[u]=v)&&(!a.skip_bound&&a.bound[u]&&a.bound[u](v),f&&no(r,u)),g}):[],a.update(),f=!0,et(a.before_update),a.fragment=n?n(a.ctx):!1,e.target){if(e.hydrate){Yi();const u=C(e.target);a.fragment&&a.fragment.l(u),u.forEach(h)}else a.fragment&&a.fragment.c();e.intro&&W(r.$$.fragment),rt(r,e.target,e.anchor,e.customElement),Vi(),z()}rr(o)}let wt;typeof HTMLElement=="function"&&(wt=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:r}=this.$$;this.$$.on_disconnect=r.map(Hr).filter(er);for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(r,e,t){this[r]=t}disconnectedCallback(){et(this.$$.on_disconnect)}$destroy(){tt(this,1),this.$destroy=j}$on(r,e){const t=this.$$.callbacks[r]||(this.$$.callbacks[r]=[]);return t.push(e),()=>{const n=t.indexOf(e);n!==-1&&t.splice(n,1)}}$set(r){this.$$set&&!tn(r)&&(this.$$.skip_bound=!0,this.$$set(r),this.$$.skip_bound=!1)}});class Ke{$destroy(){tt(this,1),this.$destroy=j}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const i=n.indexOf(t);i!==-1&&n.splice(i,1)}}$set(e){this.$$set&&!tn(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function io(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-bold-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-bold-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M128.159574,256 C143.489362,256 157.12234,254.037978 169.058511,250.113933 C180.994681,246.189888 191.029255,240.743079 199.162234,233.773507 C207.295213,226.803935 213.468085,218.633722 217.680851,209.262869 C221.893617,199.892016 224,189.75978 224,178.866163 C224,164.341341 219.962766,152.510638 211.888298,143.374056 C203.81383,134.237474 191.351064,127.619309 174.5,123.519561 C182.223404,120.708305 188.835106,117.369938 194.335106,113.504461 C199.835106,109.638984 204.340426,105.392816 207.851064,100.765957 C211.361702,96.1390986 213.93617,91.1608328 215.574468,85.8311599 C217.212766,80.5014871 218.031915,74.9668268 218.031915,69.2271791 C218.031915,58.6849691 216.24734,49.1384123 212.678191,40.5875086 C209.109043,32.0366049 203.404255,24.7741935 195.56383,18.8002745 C187.723404,12.8263555 177.601064,8.19949668 165.196809,4.91969801 C152.792553,1.63989934 137.755319,0 120.085106,0 L120.085106,0 L26,0 L26,256 L128.159574,256 Z M116.736842,108 L86,108 L86,45 L120.578947,45 C127.215311,45 132.949362,45.525 137.7811,46.575 C142.612839,47.625 146.600478,49.375 149.744019,51.825 C152.88756,54.275 155.216108,57.5125 156.729665,61.5375 C158.243222,65.5625 159,70.6083333 159,76.675 C159,82.8583333 158.039474,87.9916667 156.118421,92.075 C154.197368,96.1583333 151.40311,99.3666667 147.735646,101.7 C144.068182,104.033333 139.614833,105.666667 134.375598,106.6 C129.136364,107.533333 123.256778,108 116.736842,108 L116.736842,108 Z M126.754386,211 L85,211 L85,147 L126.403509,147 C133.888889,147 140.087719,147.705234 145,149.115702 C149.912281,150.526171 153.859649,152.524334 156.842105,155.110193 C159.824561,157.696051 161.929825,160.869605 163.157895,164.630854 C164.385965,168.392103 165,172.623508 165,177.325069 C165,181.438935 164.473684,185.494031 163.421053,189.490358 C162.368421,193.486685 160.438596,197.071625 157.631579,200.245179 C154.824561,203.418733 150.935673,206.004591 145.964912,208.002755 C140.994152,210.000918 134.590643,211 126.754386,211 L126.754386,211 Z"),d(l,"id","B"),d(l,"fill-rule","nonzero"),d(i,"id","icon-bold-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function oo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class lo extends Ke{constructor(e){super();Me(this,e,oo,io,He,{})}}function so(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-italic-complete"),i=E("g"),l=E("polygon"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-italic-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"polygon",{id:!0,"fill-rule":!0,points:!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"id","I"),d(l,"fill-rule","nonzero"),d(l,"points","141.0907 256 172.399 -1.13686838e-13 114.7073 -1.13686838e-13 83.399 256"),d(i,"id","icon-italic-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function ao(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class co extends Ke{constructor(e){super();Me(this,e,ao,so,He,{})}}function fo(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-underline-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-underline-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M218,232.537 L218,255.861 L39,255.861 L39,232.537 L218,232.537 Z M85.0543131,0.199 L85.0543131,123.091057 L85.0584142,123.932008 C85.1267664,130.910932 86.0495208,137.164899 87.8266773,142.693908 C89.6749201,148.444078 92.3525027,153.338851 95.8594249,157.378226 C99.3663472,161.417601 103.655218,164.506536 108.726038,166.645029 C113.796858,168.783521 119.554846,169.852768 126,169.852768 C132.445154,169.852768 138.203142,168.783521 143.273962,166.645029 C148.344782,164.506536 152.633653,161.441363 156.140575,157.449509 C159.647497,153.457656 162.32508,148.586644 164.173323,142.836475 C166.021565,137.086305 166.945687,130.552021 166.945687,123.233623 L166.945687,123.233623 L166.945687,0.199 L215,0.199 L215,123.233623 L214.995482,124.263974 C214.887062,136.600688 212.827066,147.947665 208.815495,158.304906 C204.692492,168.949849 198.792332,178.121607 191.115016,185.820181 C183.4377,193.518756 174.101704,199.506536 163.107029,203.783521 C152.112354,208.060507 139.743344,210.199 126,210.199 C112.161874,210.199 99.7454739,208.060507 88.7507987,203.783521 C77.7561235,199.506536 68.4201278,193.518756 60.7428115,185.820181 C53.0654952,178.121607 47.1890309,168.949849 43.1134185,158.304906 C39.0378062,147.659964 37,135.969536 37,123.233623 L37,123.233623 L37,0.199 L85.0543131,0.199 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(i,"id","icon-underline-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function uo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class ho extends Ke{constructor(e){super();Me(this,e,uo,fo,He,{})}}function mo(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-list-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-list-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M15.9026369,188 C18.5422583,188 20.8248817,188.27794 22.7505071,188.833819 C24.6761325,189.389699 26.2555781,190.159378 27.4888438,191.142857 C28.7221095,192.126336 29.6308316,193.280855 30.2150101,194.606414 C30.7991886,195.931973 31.0912779,197.364431 31.0912779,198.90379 C31.0912779,201.469388 30.5179175,203.511176 29.3711968,205.029155 C28.224476,206.547133 26.8505747,207.733722 25.2494929,208.588921 C27.1534821,209.358601 28.7545639,210.51312 30.0527383,212.052478 C31.3509128,213.591837 32,215.665695 32,218.274052 C32,220.326531 31.6538201,222.186589 30.9614604,223.854227 C30.2691007,225.521866 29.2305612,226.965015 27.8458418,228.183673 C26.4611224,229.402332 24.7085869,230.343052 22.5882353,231.005831 C20.4678837,231.66861 17.9580798,232 15.0588235,232 C11.8999324,232 9.40094659,231.72206 7.56186613,231.166181 C5.72278567,230.610301 4.21906694,230.011662 3.05070994,229.370262 C2.14198783,228.899903 1.42799189,228.290573 0.90872211,227.542274 C0.389452333,226.793975 0.129817444,226.056365 0.129817444,225.329446 C0.129817444,224.474247 0.346179851,223.512148 0.778904665,222.443149 C1.21162948,221.37415 2.07707911,219.856171 3.37525355,217.889213 C4.63015551,219.000972 6.1663286,220.005831 7.98377282,220.90379 C9.80121704,221.801749 11.8133874,222.250729 14.020284,222.250729 C15.4915483,222.250729 16.6707235,221.876579 17.5578093,221.12828 C18.4448952,220.379981 18.8884381,219.278912 18.8884381,217.825073 C18.8884381,216.884354 18.7261663,216.136054 18.4016227,215.580175 C18.0770791,215.024295 17.6768087,214.596696 17.2008114,214.297376 C16.7248141,213.998056 16.1947262,213.794947 15.6105477,213.688047 C15.0263692,213.581147 14.4530088,213.527697 13.8904665,213.527697 L13.8904665,213.527697 L9.28194726,213.527697 L9.28194726,204.676385 L13.8255578,204.676385 L14.0831643,204.669704 C15.020284,204.620708 15.8755916,204.302235 16.6490872,203.714286 C17.4929006,203.072886 17.9148073,202.153547 17.9148073,200.956268 C17.9148073,199.758989 17.525355,198.90379 16.7464503,198.390671 C15.9675456,197.877551 14.9506423,197.620991 13.6957404,197.620991 C12.0513861,197.620991 10.4719405,197.941691 8.95740365,198.58309 C7.4428668,199.22449 5.71196755,200.229349 3.76470588,201.597668 C2.59634888,200.272109 1.67680865,199.09621 1.00608519,198.069971 C0.335361731,197.043732 0,196.060253 0,195.119534 C0,194.307094 0.227180527,193.622935 0.681541582,193.067055 C1.13590264,192.511176 1.66599053,192.019436 2.27180527,191.591837 C3.52670723,190.736638 5.29006085,189.924198 7.56186613,189.154519 C9.8336714,188.38484 12.6139283,188 15.9026369,188 Z M256,191 L256,231 L58,231 L58,191 L256,191 Z M256,110 L256,150 L58,150 L58,110 L256,110 Z M17.0752475,106 C19.1663366,106 21.1485149,106.224292 23.0217822,106.672876 C24.8950495,107.121461 26.539604,107.85842 27.9554455,108.883756 C29.3712871,109.909091 30.4930693,111.244163 31.3207921,112.888972 C32.1485149,114.53378 32.5623762,116.531048 32.5623762,118.880775 C32.5623762,120.418778 32.3445545,121.903378 31.9089109,123.334575 C31.4732673,124.765772 30.8742574,126.143567 30.1118812,127.467958 C29.349505,128.79235 28.4673267,130.074019 27.4653465,131.312966 C26.4633663,132.551913 25.3960396,133.726776 24.2633663,134.837556 C23.4792079,135.606557 22.6950495,136.364878 21.9108911,137.112519 C21.1267327,137.860159 20.3207921,138.575758 19.4930693,139.259314 L19.4930693,139.259314 L27.0079208,139.259314 L27.3805372,139.263765 C29.4640295,139.314201 31.0715072,139.793343 32.2029703,140.701192 C33.4009901,141.662444 34,143.147044 34,145.154993 C34,145.753105 33.9891089,146.276453 33.9673267,146.725037 C33.9455446,147.173621 33.9346535,147.568803 33.9346535,147.910581 C33.8910891,148.337804 33.8693069,148.700944 33.8693069,149 L33.8693069,149 L2.11089109,149 L2.11089109,140.4769 L2.48896747,140.195064 C3.25445545,139.617005 4.07595474,138.952629 4.95346535,138.201937 C5.97722772,137.32613 7.04455446,136.39692 8.15544554,135.414307 C9.26633663,134.431694 10.3772277,133.395678 11.4881188,132.306259 C12.5990099,131.216841 13.6772277,130.138102 14.7227723,129.070045 C16.2039604,127.532042 17.3584158,126.090164 18.1861386,124.744411 C19.0138614,123.398659 19.4277228,121.956781 19.4277228,120.418778 C19.4277228,119.564332 19.2861386,118.859414 19.0029703,118.304024 C18.719802,117.748634 18.349505,117.30005 17.8920792,116.958271 C17.4346535,116.616493 16.9118812,116.37084 16.3237624,116.221311 C15.7356436,116.071783 15.1584158,115.997019 14.5920792,115.997019 C12.849505,115.997019 11.1613861,116.402881 9.52772277,117.214605 C7.89405941,118.026329 6.42376238,118.96622 5.11683168,120.034277 C3.94059406,118.709886 2.96039604,117.460258 2.17623762,116.285395 C1.39207921,115.110532 1,114.095877 1,113.241431 C1,112.557874 1.18514851,111.959762 1.55544554,111.447094 C1.92574257,110.934426 2.43762376,110.44312 3.09108911,109.973174 C3.7009901,109.545951 4.44158416,109.097367 5.31287129,108.627422 C6.18415842,108.157476 7.1970297,107.730253 8.35148515,107.345753 C9.50594059,106.961252 10.8019802,106.640835 12.239604,106.384501 C13.6772277,106.128167 15.2891089,106 17.0752475,106 Z M256,28 L256,68 L58,68 L58,28 L256,28 Z M22.9369863,25 C24.1643836,25 25.1945205,25.1401003 26.0273973,25.4203008 C26.860274,25.7005013 27.5178082,25.9914787 28,26.2932331 L28,26.2932331 L28,68 L15.0465753,68 L15.0465753,40.0015038 L7.41917808,43.6225564 L6.9260274,42.8686015 C6.27726027,41.8581554 5.66356164,40.8270175 5.08493151,39.775188 C4.36164384,38.460401 4,37.2426065 4,36.1218045 C4,35.0010025 4.23013699,34.1496241 4.69041096,33.5676692 C5.15068493,32.9857143 6.03835616,32.3498747 7.35342466,31.6601504 L7.35342466,31.6601504 L17.1506849,26.6165414 L17.6091324,26.3866332 C18.3701674,26.0154275 19.1159817,25.7040936 19.8465753,25.4526316 C20.7232877,25.1508772 21.7534247,25 22.9369863,25 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(i,"id","icon-list-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function _o(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class po extends Ke{constructor(e){super();Me(this,e,_o,mo,He,{})}}function go(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-bullet-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-bullet-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M256,188 L256,227 L67,227 L67,188 L256,188 Z M41,188 L41,227 L0,227 L0,188 L41,188 Z M256,109 L256,148 L67,148 L67,109 L256,109 Z M41,109 L41,148 L0,148 L0,109 L41,109 Z M256,30 L256,69 L67,69 L67,30 L256,30 Z M41,30 L41,69 L0,69 L0,30 L41,30 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(i,"id","icon-bullet-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function bo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class vo extends Ke{constructor(e){super();Me(this,e,bo,go,He,{})}}function wo(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-aligned-left-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-aligned-left-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M256,190 L256,232 L0,232 L0,190 L256,190 Z M162,107 L162,149 L0,149 L0,107 L162,107 Z M256,24 L256,66 L0,66 L0,24 L256,24 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(i,"id","icon-aligned-left-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function yo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class ko extends Ke{constructor(e){super();Me(this,e,yo,wo,He,{})}}function xo(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-aligned-right-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-aligned-right-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0,transform:!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M256,190 L256,232 L0,232 L0,190 L256,190 Z M162,107 L162,149 L0,149 L0,107 L162,107 Z M256,24 L256,66 L0,66 L0,24 L256,24 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(l,"transform","translate(128.000000, 128.000000) scale(-1, 1) translate(-128.000000, -128.000000) "),d(i,"id","icon-aligned-right-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function Eo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Co extends Ke{constructor(e){super();Me(this,e,Eo,xo,He,{})}}function So(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-centered-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-centered-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M204,186 L204,224 L52,224 L52,186 L204,186 Z M257,110 L257,148 L0,148 L0,110 L257,110 Z M204,32 L204,70 L52,70 L52,32 L204,32 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(i,"id","icon-centered-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function To(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Lo extends Ke{constructor(e){super();Me(this,e,To,So,He,{})}}function Ao(r){let e,t,n,i,l,s=[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},r[0]],c={};for(let o=0;o<s.length;o+=1)c=$(c,s[o]);return{c(){e=E("svg"),t=E("title"),n=te("icon-justified-complete"),i=E("g"),l=E("path"),this.h()},l(o){e=S(o,"svg",{width:!0,height:!0,viewBox:!0,version:!0,xmlns:!0,"xmlns:xlink":!0});var a=C(e);t=S(a,"title",{});var f=C(t);n=vt(f,"icon-justified-complete"),f.forEach(h),i=S(a,"g",{id:!0,stroke:!0,"stroke-width":!0,"fill-rule":!0});var u=C(i);l=S(u,"path",{d:!0,id:!0,"fill-rule":!0}),C(l).forEach(h),u.forEach(h),a.forEach(h),this.h()},h(){d(l,"d","M257,186 L257,224 L0,224 L0,186 L257,186 Z M257,110 L257,148 L0,148 L0,110 L257,110 Z M256,32 L256,70 L0,70 L0,32 L256,32 Z"),d(l,"id","Combined-Shape"),d(l,"fill-rule","nonzero"),d(i,"id","icon-justified-complete"),d(i,"stroke","none"),d(i,"stroke-width","1"),d(i,"fill-rule","evenodd"),ye(e,c)},m(o,a){Ve(o,e,a),T(e,t),T(t,n),T(e,i),T(i,l)},p(o,[a]){ye(e,c=Xe(s,[{width:"256px"},{height:"256px"},{viewBox:"0 0 256 256"},{version:"1.1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},a&1&&o[0]]))},i:j,o:j,d(o){o&&h(e)}}}function Oo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Mo extends Ke{constructor(e){super();Me(this,e,Oo,Ao,He,{})}}function No(r){let e,t,n,i,l,s,c=[{version:"1.1"},{id:"Capa_1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{viewBox:"0 0 511.997 511.997"},{style:"enable-background:new 0 0 511.997 511.997;"},{"xml:space":"preserve"},r[0]],o={};for(let a=0;a<c.length;a+=1)o=$(o,c[a]);return{c(){e=E("svg"),t=E("g"),n=E("g"),i=E("g"),l=E("path"),s=E("path"),this.h()},l(a){e=S(a,"svg",{version:!0,id:!0,xmlns:!0,"xmlns:xlink":!0,x:!0,y:!0,viewBox:!0,style:!0,"xml:space":!0});var f=C(e);t=S(f,"g",{transform:!0});var u=C(t);n=S(u,"g",{});var g=C(n);i=S(g,"g",{});var b=C(i);l=S(b,"path",{d:!0}),C(l).forEach(h),s=S(b,"path",{d:!0}),C(s).forEach(h),b.forEach(h),g.forEach(h),u.forEach(h),f.forEach(h),this.h()},h(){d(l,"d",`M211.26,389.24l-60.331,60.331c-25.012,25.012-65.517,25.012-90.508,0.005c-24.996-24.996-24.996-65.505-0.005-90.496
				l120.683-120.683c24.991-24.992,65.5-24.992,90.491,0c8.331,8.331,21.839,8.331,30.17,0c8.331-8.331,8.331-21.839,0-30.17
				c-41.654-41.654-109.177-41.654-150.831,0L30.247,328.909c-41.654,41.654-41.654,109.177,0,150.831
				c41.649,41.676,109.177,41.676,150.853,0l60.331-60.331c8.331-8.331,8.331-21.839,0-30.17S219.591,380.909,211.26,389.24z`),d(s,"d",`M479.751,30.24c-41.654-41.654-109.199-41.654-150.853,0l-72.384,72.384c-8.331,8.331-8.331,21.839,0,30.17
				c8.331,8.331,21.839,8.331,30.17,0l72.384-72.384c24.991-24.992,65.521-24.992,90.513,0c24.991,24.991,24.991,65.5,0,90.491
				L316.845,283.638c-24.992,24.992-65.5,24.992-90.491,0c-8.331-8.331-21.839-8.331-30.17,0s-8.331,21.839,0,30.17
				c41.654,41.654,109.177,41.654,150.831,0l132.736-132.736C521.405,139.418,521.405,71.894,479.751,30.24z`),d(t,"transform","translate(1 1)"),ye(e,o)},m(a,f){Ve(a,e,f),T(e,t),T(t,n),T(n,i),T(i,l),T(i,s)},p(a,[f]){ye(e,o=Xe(c,[{version:"1.1"},{id:"Capa_1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{viewBox:"0 0 511.997 511.997"},{style:"enable-background:new 0 0 511.997 511.997;"},{"xml:space":"preserve"},f&1&&a[0]]))},i:j,o:j,d(a){a&&h(e)}}}function Do(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class zo extends Ke{constructor(e){super();Me(this,e,Do,No,He,{})}}const Rt=r=>document.queryCommandState(r),ht=(r,e)=>document.execCommand(r,!1,e),Ro=[{title:"Bold",state:()=>Rt("bold"),result:()=>ht("bold"),icon:lo},{title:"Italic",state:()=>Rt("italic"),result:()=>ht("italic"),icon:co},{title:"Underline",state:()=>Rt("underline"),result:()=>ht("underline"),icon:ho},{title:"Justify Left",state:()=>Rt("justifyLeft"),result:()=>ht("justifyLeft"),icon:ko},{title:"Justify Right",state:()=>Rt("justifyRight"),result:()=>ht("justifyRight"),icon:Co},{title:"Justify Center",state:()=>Rt("justifyCenter"),result:()=>ht("justifyCenter"),icon:Lo},{title:"Justify Full",state:()=>Rt("justifyFull"),result:()=>ht("justifyFull"),icon:Mo},{title:"Ordered List",result:()=>ht("insertOrderedList"),icon:po},{title:"Unordered List",result:()=>ht("insertUnorderedList"),icon:vo},{title:"Link",result:()=>{const r=prompt("Enter a URL:","http://");return ht("createLink",r||"")},icon:zo}];function fn(r,e,t){const n=r.slice();return n[13]=e[t],n}function un(r){let e,t,n=r[3],i=[];for(let s=0;s<n.length;s+=1)i[s]=dn(fn(r,n,s));const l=s=>re(i[s],1,1,()=>{i[s]=null});return{c(){e=w("div");for(let s=0;s<i.length;s+=1)i[s].c();d(e,"class","toolbar")},m(s,c){x(s,e,c);for(let o=0;o<i.length;o+=1)i[o].m(e,null);t=!0},p(s,c){if(c&24){n=s[3];let o;for(o=0;o<n.length;o+=1){const a=fn(s,n,o);i[o]?(i[o].p(a,c),W(i[o],1)):(i[o]=dn(a),i[o].c(),W(i[o],1),i[o].m(e,null))}for(We(),o=n.length;o<i.length;o+=1)l(o);Ze()}},i(s){if(!t){for(let c=0;c<n.length;c+=1)W(i[c]);t=!0}},o(s){i=i.filter(Boolean);for(let c=0;c<i.length;c+=1)re(i[c]);t=!1},d(s){s&&h(e),jr(i,s)}}}function Fo(r){let e=r[13].title.charAt(0)+"",t;return{c(){t=te(e)},m(n,i){x(n,t,i)},p(n,i){i&8&&e!==(e=n[13].title.charAt(0)+"")&&Ae(t,e)},i:j,o:j,d(n){n&&h(t)}}}function Io(r){let e,t,n;var i=r[13].icon;function l(s){return{props:{class:"icon",style:"fill: var(--composer-icons-color, #666774) !important; width: 12px; height: 12px;"}}}return i&&(e=new i(l())),{c(){e&&nt(e.$$.fragment),t=st()},m(s,c){e&&rt(e,s,c),x(s,t,c),n=!0},p(s,c){if(i!==(i=s[13].icon)){if(e){We();const o=e;re(o.$$.fragment,1,0,()=>{tt(o,1)}),Ze()}i?(e=new i(l()),nt(e.$$.fragment),W(e.$$.fragment,1),rt(e,t.parentNode,t)):e=null}},i(s){n||(e&&W(e.$$.fragment,s),n=!0)},o(s){e&&re(e.$$.fragment,s),n=!1},d(s){s&&h(t),e&&tt(e,s)}}}function dn(r){let e,t,n,i,l,s,c,o,a;const f=[Io,Fo],u=[];function g(b,v){return b[13].icon?0:1}return t=g(r),n=u[t]=f[t](r),{c(){e=w("button"),n.c(),i=H(),d(e,"title",l=r[13].title),d(e,"class",s=r[13].state&&r[13].state()?"active":"")},m(b,v){x(b,e,v),u[t].m(e,null),p(e,i),c=!0,o||(a=he(e,"click",qi(function(){er(r[4](r[13]))&&r[4](r[13]).apply(this,arguments)}),!0),o=!0)},p(b,v){r=b;let A=t;t=g(r),t===A?u[t].p(r,v):(We(),re(u[A],1,1,()=>{u[A]=null}),Ze(),n=u[t],n?n.p(r,v):(n=u[t]=f[t](r),n.c()),W(n,1),n.m(e,i)),(!c||v&8&&l!==(l=r[13].title))&&d(e,"title",l),(!c||v&8&&s!==(s=r[13].state&&r[13].state()?"active":""))&&d(e,"class",s)},i(b){c||(W(n),c=!0)},o(b){re(n),c=!1},d(b){b&&h(e),u[t].d(),o=!1,a()}}}function Po(r){let e,t,n,i,l,s,c,o=r[1]&&un(r);return{c(){e=w("div"),o&&o.c(),t=H(),n=H(),i=w("div"),this.c=j,d(i,"contenteditable","true"),d(i,"class","html-editor-content"),d(i,"role","textbox"),d(i,"aria-label","HTML Editor"),r[0]===void 0&&yr(()=>r[11].call(i)),d(e,"class","html-editor")},m(a,f){x(a,e,f),o&&o.m(e,null),p(e,t),p(e,n),p(e,i),r[10](i),r[0]!==void 0&&(i.innerHTML=r[0]),l=!0,s||(c=[he(i,"input",r[11]),he(i,"focus",r[6]),he(i,"keyup",r[5]),he(i,"mouseup",r[5])],s=!0)},p(a,[f]){a[1]?o?(o.p(a,f),f&2&&W(o,1)):(o=un(a),o.c(),W(o,1),o.m(e,t)):o&&(We(),re(o,1,1,()=>{o=null}),Ze()),f&1&&a[0]!==i.innerHTML&&(i.innerHTML=a[0])},i(a){l||(W(o),l=!0)},o(a){re(o),l=!1},d(a){a&&h(e),o&&o.d(),r[10](null),s=!1,et(c)}}}function hn(r,e){const t=document.createRange(),n=window.getSelection();t.selectNode(r),t.setStart(r,e),t.collapse(!0),t.detach(),n==null||n.removeAllRanges(),n==null||n.addRange(t)}function Ho(r,e,t){let{onchange:n=y=>Promise.resolve({})}=e,{html:i=""}=e,{show_editor_toolbar:l=!0}=e,{replace_fields:s=null}=e,{focus_body_onload:c=!1}=e,o,a=Ro;const f=y=>()=>{y.result&&(o&&o.focus(),y.result()),u()};function u(){t(3,a=a.map(y=>(y.state&&(y.active=y.state()),y)))}let g=!1;const b=()=>{if(g?g=!1:(g=!0,setTimeout(()=>{o.blur(),o.focus()},0)),o.innerHTML===""){t(2,o.innerHTML="\xA0",o);const y=window.getSelection(),O=document.createRange();O.selectNodeContents(o),O.collapse(!1),y.removeAllRanges(),y.addRange(O)}};function v(y){Ct[y?"unshift":"push"](()=>{o=y,t(2,o)})}function A(){i=this.innerHTML,t(0,i),t(7,s),t(8,n)}return r.$$set=y=>{"onchange"in y&&t(8,n=y.onchange),"html"in y&&t(0,i=y.html),"show_editor_toolbar"in y&&t(1,l=y.show_editor_toolbar),"replace_fields"in y&&t(7,s=y.replace_fields),"focus_body_onload"in y&&t(9,c=y.focus_body_onload)},r.$$.update=()=>{if(r.$$.dirty&516&&c&&o&&(o.focus(),b()),r.$$.dirty&385&&i){const y=window.getSelection();if(typeof s=="string"&&t(7,s=JSON.parse(s)),y&&Array.isArray(s))for(const O of s){t(0,i=i.replaceAll(O.from,O.to));const R=y.focusNode,G=y.focusOffset;if(R&&R.textContent&&R.textContent.includes(O.from)){const le=R.textContent.split(O.from).length-1,ee=document.createTextNode(R.textContent.replaceAll(O.from,O.to));R.replaceWith(ee),y.focusNode&&y.focusNode.nodeType===Node.TEXT_NODE&&(le>1?hn(ee,G+(O.to.length-O.from.length)+(le-1)):hn(ee,G+O.to.length-O.from.length))}}n&&n(i)}},[i,l,o,a,f,u,b,s,n,c,v,A]}class jo extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>.html-editor{min-height:var(--composer-editor-min-height, 220px);max-height:var(--composer-editor-max-height, 480px)}.html-editor *:focus{outline:5px auto var(--composer-primary-color, #5c77ff)}.html-editor-content{min-height:var(--composer-editor-min-height, 220px);max-height:var(--composer-editor-max-height, 480px)}a{color:var(--composer-primary-color, #5c77ff)}a:hover{color:var(--composer-primary-dark-color, #294dff)}[contenteditable]{padding:var(--composer-outer-padding, 15px) var(--composer-outer-padding, 15px);margin:0;outline:0;line-height:1.3;color:var(--composer-text-color, black);overflow-y:auto}.toolbar{display:flex;font-size:10px;align-items:center;justify-content:flex-start;border-bottom:1px solid var(--composer-border-color, #f7f7f7);padding:0 calc(var(--composer-outer-padding, 15px) / 2)}.toolbar button{color:var(--composer-text-light-color, #6e6e7a);background:none;border:0;cursor:pointer;display:flex;padding:8px;margin:2px;outline:0;border-radius:calc(var(--composer-border-radius, 6px) / 2);transition:background-color 0.3s}.toolbar button.active{background:var(--composer-background-muted-color, #f0f2ff)}.toolbar button:first-child{margin-left:0}.toolbar button:hover{background:var(--composer-background-muted-color, #f0f2ff)}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},Ho,Po,He,{onchange:8,html:0,show_editor_toolbar:1,replace_fields:7,focus_body_onload:9},null),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["onchange","html","show_editor_toolbar","replace_fields","focus_body_onload"]}get onchange(){return this.$$.ctx[8]}set onchange(e){this.$$set({onchange:e}),z()}get html(){return this.$$.ctx[0]}set html(e){this.$$set({html:e}),z()}get show_editor_toolbar(){return this.$$.ctx[1]}set show_editor_toolbar(e){this.$$set({show_editor_toolbar:e}),z()}get replace_fields(){return this.$$.ctx[7]}set replace_fields(e){this.$$set({replace_fields:e}),z()}get focus_body_onload(){return this.$$.ctx[9]}set focus_body_onload(e){this.$$set({focus_body_onload:e}),z()}}customElements.define("nylas-html-editor",jo);function mn(r){let e,t,n,i,l=r[2]&&_n(r);return{c(){e=w("div"),t=w("div"),n=w("div"),n.innerHTML="<slot></slot>",i=H(),l&&l.c(),d(n,"class","alert-bar__text"),d(t,"class","alert-bar__container"),d(e,"class","alert-bar"),Fe(e,"success",r[1]==="success"),Fe(e,"warning",r[1]==="warning"),Fe(e,"danger",r[1]==="danger"),Fe(e,"primary",r[1]==="primary"),Fe(e,"info",r[1]==="info")},m(s,c){x(s,e,c),p(e,t),p(t,n),p(t,i),l&&l.m(t,null)},p(s,c){s[2]?l?l.p(s,c):(l=_n(s),l.c(),l.m(t,null)):l&&(l.d(1),l=null),c&2&&Fe(e,"success",s[1]==="success"),c&2&&Fe(e,"warning",s[1]==="warning"),c&2&&Fe(e,"danger",s[1]==="danger"),c&2&&Fe(e,"primary",s[1]==="primary"),c&2&&Fe(e,"info",s[1]==="info")},d(s){s&&h(e),l&&l.d()}}}function _n(r){let e,t,n;return{c(){e=w("button"),e.textContent="\xD7",d(e,"class","alert-bar__close")},m(i,l){x(i,e,l),t||(n=he(e,"click",r[3]),t=!0)},p:j,d(i){i&&h(e),t=!1,n()}}}function Bo(r){let e,t=r[0]&&mn(r);return{c(){t&&t.c(),e=st(),this.c=j},m(n,i){t&&t.m(n,i),x(n,e,i)},p(n,[i]){n[0]?t?t.p(n,i):(t=mn(n),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},i:j,o:j,d(n){t&&t.d(n),n&&h(e)}}}function Uo(r,e,t){let{type:n="primary"}=e,{dismissible:i=!0}=e,{visible:l=!0}=e,{ondismiss:s=null}=e;const c=()=>{s&&s(),t(0,l=!1)};return r.$$set=o=>{"type"in o&&t(1,n=o.type),"dismissible"in o&&t(2,i=o.dismissible),"visible"in o&&t(0,l=o.visible),"ondismiss"in o&&t(4,s=o.ondismiss)},[l,n,i,c,s]}class Go extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>.alert-bar{padding:var(--composer-outer-padding, 15px);text-align:center;font-size:var(--composer-font-size-small, 12px);border-bottom-left-radius:var(--composer-border-color, #f7f7f7-radius);border-bottom-right-radius:var(--composer-border-radius, 6px)}.alert-bar__container{display:flex;align-items:center;justify-content:between}.alert-bar__text{flex-grow:1}.alert-bar__close{outline:0;border:0;background:none;font-size:18px;opacity:0.8;cursor:pointer}.alert-bar__close:hover{opacity:1}.alert-bar *:focus{outline:5px auto Highlight;outline:5px auto -webkit-focus-ring-color}.alert-bar.success{background:var(--composer-success-light-color, var(--composer-primary-color, #5c77ff));color:var(--composer-success-color, var(--composer-background-color, white))}.alert-bar.success .alert-bar__close{color:var(--composer-success-color, var(--composer-background-color, white))}.alert-bar.danger{background:var(--composer-danger-light-color, #ffe3e3);color:var(--composer-danger-color, #ff5c5c)}.alert-bar.danger .alert-bar__close{color:var(--composer-danger-color, #ff5c5c)}.alert-bar.info{background:var(--composer-info-light-color, var(--composer-primary-light-color, #f0f2ff));color:var(--composer-info-color, var(--composer-primary-color, #5c77ff))}.alert-bar.info .alert-bar__close{color:var(--composer-info-color, var(--composer-primary-color, #5c77ff))}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},Uo,Bo,He,{type:1,dismissible:2,visible:0,ondismiss:4},null),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["type","dismissible","visible","ondismiss"]}get type(){return this.$$.ctx[1]}set type(e){this.$$set({type:e}),z()}get dismissible(){return this.$$.ctx[2]}set dismissible(e){this.$$set({dismissible:e}),z()}get visible(){return this.$$.ctx[0]}set visible(e){this.$$set({visible:e}),z()}get ondismiss(){return this.$$.ctx[4]}set ondismiss(e){this.$$set({ondismiss:e}),z()}}customElements.define("nylas-composer-alert-bar",Go);function Jo(r){let e,t,n=[{height:"10"},{viewBox:"0 0 329.26933 329"},{width:"10"},{xmlns:"http://www.w3.org/2000/svg"},r[0]],i={};for(let l=0;l<n.length;l+=1)i=$(i,n[l]);return{c(){e=E("svg"),t=E("path"),this.h()},l(l){e=S(l,"svg",{height:!0,viewBox:!0,width:!0,xmlns:!0});var s=C(e);t=S(s,"path",{d:!0}),C(t).forEach(h),s.forEach(h),this.h()},h(){d(t,"d","m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844 8.34375-21.824219 0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063 0l-128.214844 128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063 0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938 128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844 128.214844 128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921874-2.089844 15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0"),ye(e,i)},m(l,s){Ve(l,e,s),T(e,t)},p(l,[s]){ye(e,i=Xe(n,[{height:"10"},{viewBox:"0 0 329.26933 329"},{width:"10"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&l[0]]))},i:j,o:j,d(l){l&&h(e)}}}function Wo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class ir extends Ke{constructor(e){super();Me(this,e,Wo,Jo,He,{})}}function Zo(r){let e,t,n,i,l,s,c,o,a,f,u,g=[{id:"Capa_1"},{"enable-background":"new 0 0 497 497"},{height:"512"},{viewBox:"0 0 497 497"},{width:"512"},{xmlns:"http://www.w3.org/2000/svg"},r[0]],b={};for(let v=0;v<g.length;v+=1)b=$(b,g[v]);return{c(){e=E("svg"),t=E("g"),n=E("circle"),i=E("circle"),l=E("circle"),s=E("ellipse"),c=E("ellipse"),o=E("ellipse"),a=E("ellipse"),f=E("ellipse"),u=E("circle"),this.h()},l(v){e=S(v,"svg",{id:!0,"enable-background":!0,height:!0,viewBox:!0,width:!0,xmlns:!0});var A=C(e);t=S(A,"g",{});var y=C(t);n=S(y,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),C(n).forEach(h),i=S(y,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),C(i).forEach(h),l=S(y,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),C(l).forEach(h),s=S(y,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),C(s).forEach(h),c=S(y,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),C(c).forEach(h),o=S(y,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),C(o).forEach(h),a=S(y,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),C(a).forEach(h),f=S(y,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),C(f).forEach(h),u=S(y,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),C(u).forEach(h),y.forEach(h),A.forEach(h),this.h()},h(){d(n,"cx","98"),d(n,"cy","376"),d(n,"fill","#909ba6"),d(n,"r","53"),d(i,"cx","439"),d(i,"cy","336"),d(i,"fill","#c8d2dc"),d(i,"r","46"),d(l,"cx","397"),d(l,"cy","112"),d(l,"fill","#e9edf1"),d(l,"r","38"),d(s,"cx","56.245"),d(s,"cy","244.754"),d(s,"fill","#7e8b96"),d(s,"rx","56.245"),d(s,"ry","54.874"),d(c,"cx","217.821"),d(c,"cy","447.175"),d(c,"fill","#a2abb8"),d(c,"rx","51.132"),d(c,"ry","49.825"),d(o,"cx","349.229"),d(o,"cy","427.873"),d(o,"fill","#b9c3cd"),d(o,"rx","48.575"),d(o,"ry","47.297"),d(a,"cx","117.092"),d(a,"cy","114.794"),d(a,"fill","#5f6c75"),d(a,"rx","58.801"),d(a,"ry","57.397"),d(f,"cx","453.538"),d(f,"cy","216.477"),d(f,"fill","#dce6eb"),d(f,"rx","43.462"),d(f,"ry","42.656"),d(u,"cx","263"),d(u,"cy","62"),d(u,"fill","#4e5a61"),d(u,"r","62"),ye(e,b)},m(v,A){Ve(v,e,A),T(e,t),T(t,n),T(t,i),T(t,l),T(t,s),T(t,c),T(t,o),T(t,a),T(t,f),T(t,u)},p(v,[A]){ye(e,b=Xe(g,[{id:"Capa_1"},{"enable-background":"new 0 0 497 497"},{height:"512"},{viewBox:"0 0 497 497"},{width:"512"},{xmlns:"http://www.w3.org/2000/svg"},A&1&&v[0]]))},i:j,o:j,d(v){v&&h(e)}}}function Yo(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class pn extends Ke{constructor(e){super();Me(this,e,Yo,Zo,He,{})}}function gn(r){let e,t,n,i,l,s,c,o,a=!r[0].error&&bn(r),f=r[0].loading&&vn(),u=r[0].error&&wn(r),g=!r[0].loading&&yn(r);return{c(){e=w("div"),t=w("div"),n=w("div"),a&&a.c(),i=H(),l=w("div"),f&&f.c(),s=H(),u&&u.c(),c=H(),g&&g.c(),d(n,"class","file-info"),d(l,"class","file-info__right"),d(t,"class","file-item"),d(e,"class","wrapper")},m(b,v){x(b,e,v),p(e,t),p(t,n),a&&a.m(n,null),p(t,i),p(t,l),f&&f.m(l,null),p(l,s),u&&u.m(l,null),p(l,c),g&&g.m(l,null),o=!0},p(b,v){b[0].error?a&&(a.d(1),a=null):a?a.p(b,v):(a=bn(b),a.c(),a.m(n,null)),b[0].loading?f?v&1&&W(f,1):(f=vn(),f.c(),W(f,1),f.m(l,s)):f&&(We(),re(f,1,1,()=>{f=null}),Ze()),b[0].error?u?u.p(b,v):(u=wn(b),u.c(),u.m(l,c)):u&&(u.d(1),u=null),b[0].loading?g&&(We(),re(g,1,1,()=>{g=null}),Ze()):g?(g.p(b,v),v&1&&W(g,1)):(g=yn(b),g.c(),W(g,1),g.m(l,null))},i(b){o||(W(f),W(g),o=!0)},o(b){re(f),re(g),o=!1},d(b){b&&h(e),a&&a.d(),f&&f.d(),u&&u.d(),g&&g.d()}}}function bn(r){let e,t=r[0].filename+"",n,i,l,s=r[2](r[0].size)+"",c;return{c(){e=w("div"),n=te(t),i=H(),l=w("span"),c=te(s),d(l,"class","file-item__size")},m(o,a){x(o,e,a),p(e,n),x(o,i,a),x(o,l,a),p(l,c)},p(o,a){a&1&&t!==(t=o[0].filename+"")&&Ae(n,t),a&1&&s!==(s=o[2](o[0].size)+"")&&Ae(c,s)},d(o){o&&h(e),o&&h(i),o&&h(l)}}}function vn(r){let e,t;return e=new pn({props:{style:"fill: var(--composer-icons-color, #666774); width: 15px; height: 15px; animation: rotate 0.5s infinite linear;"}}),{c(){nt(e.$$.fragment)},m(n,i){rt(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){re(e.$$.fragment,n),t=!1},d(n){tt(e,n)}}}function wn(r){var i;let e,t=((i=r[0].errorMessage)!=null?i:"Error: Please try attaching the file again.")+"",n;return{c(){e=w("span"),n=te(t),d(e,"class","file-info__error")},m(l,s){x(l,e,s),p(e,n)},p(l,s){var c;s&1&&t!==(t=((c=l[0].errorMessage)!=null?c:"Error: Please try attaching the file again.")+"")&&Ae(n,t)},d(l){l&&h(e)}}}function yn(r){let e,t,n,i,l;return t=new ir({props:{class:"CloseIcon"}}),{c(){e=w("button"),nt(t.$$.fragment),d(e,"class","close-btn")},m(s,c){x(s,e,c),rt(t,e,null),n=!0,i||(l=he(e,"click",r[3]),i=!0)},p:j,i(s){n||(W(t.$$.fragment,s),n=!0)},o(s){re(t.$$.fragment,s),n=!1},d(s){s&&h(e),tt(t),i=!1,l()}}}function Vo(r){let e,t,n=r[0]&&gn(r);return{c(){n&&n.c(),e=st(),this.c=j},m(i,l){n&&n.m(i,l),x(i,e,l),t=!0},p(i,[l]){i[0]?n?(n.p(i,l),l&1&&W(n,1)):(n=gn(i),n.c(),W(n,1),n.m(e.parentNode,e)):n&&(We(),re(n,1,1,()=>{n=null}),Ze())},i(i){t||(W(n),t=!0)},o(i){re(n),t=!1},d(i){n&&n.d(i),i&&h(e)}}}function Xo(r,e,t){let{attachment:n}=e,{remove:i}=e;const l=c=>{const o=Math.floor(Math.log(c)/Math.log(1024));return`${(c/Math.pow(1024,o)).toFixed(2)*1}
      ${["B","kB","MB","GB","TB"][o]}`},s=()=>i(n);return r.$$set=c=>{"attachment"in c&&t(0,n=c.attachment),"remove"in c&&t(1,i=c.remove)},[n,i,l,s]}class Ko extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>.wrapper{padding:0.3rem 0}.file-item{display:flex;align-items:center;justify-content:space-between;padding:0.8rem;color:var(--composer-text-color, black);font-weight:700;background:var(--composer-background-muted-color, #f0f2ff);border-radius:var(--composer-border-radius, 6px)}.close-btn{background:none;border:none;cursor:pointer;margin-left:10px;flex-shrink:0}.file-info{display:flex;color:var(--composer-text-color, black);flex-direction:column}.file-info__error{color:var(--composer-danger-color, #ff5c5c);font-size:var(--composer-font-size-small, 12px);margin-right:5px}.file-info__right{display:flex;align-items:center;justify-content:flex-end;flex-shrink:0;margin-left:10px}.file-item__size{flex-shrink:0;word-break:keep-all;color:var(--composer-text-light-color, #6e6e7a);margin-top:10px;font-size:var(--composer-font-size-small, 12px)}@keyframes rotate{to{transform:rotate(360deg)}}@media(min-width: 640px){.file-info{flex-direction:row;align-items:center;max-width:90%}.file-item__size{margin:0 0 0 5px}}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},Xo,Vo,He,{attachment:0,remove:1},null),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["attachment","remove"]}get attachment(){return this.$$.ctx[0]}set attachment(e){this.$$set({attachment:e}),z()}get remove(){return this.$$.ctx[1]}set remove(e){this.$$set({remove:e}),z()}}customElements.define("nylas-composer-attachment",Ko);function kn(r,e,t){const n=r.slice();return n[41]=e[t],n}function xn(r,e,t){const n=r.slice();return n[44]=e[t],n}function En(r,e,t){const n=r.slice();return n[47]=e[t],n}function Cn(r,e){let t,n,i=e[47].day+"",l,s,c,o,a;function f(){return e[24](e[47])}return{key:r,first:null,c(){t=w("div"),n=w("button"),l=te(i),c=H(),n.disabled=s=e[47].isDisabled,Fe(n,"label",!e[47].activeMonth),Fe(n,"current",e[47].activeMonth),Fe(n,"selected",e[47].isSelected),this.first=t},m(u,g){x(u,t,g),p(t,n),p(n,l),p(t,c),o||(a=he(n,"click",f),o=!0)},p(u,g){e=u,g[0]&4&&i!==(i=e[47].day+"")&&Ae(l,i),g[0]&4&&s!==(s=e[47].isDisabled)&&(n.disabled=s),g[0]&4&&Fe(n,"label",!e[47].activeMonth),g[0]&4&&Fe(n,"current",e[47].activeMonth),g[0]&4&&Fe(n,"selected",e[47].isSelected)},d(u){u&&h(t),o=!1,a()}}}function Sn(r){let e,t,n,i,l,s=[],c=new Map,o,a,f,u=[],g=new Map,b,v,A,y,O,R,G,le,ee,P,M,U,fe,B,ve=r[3];const me=J=>J[44];for(let J=0;J<ve.length;J+=1){let V=xn(r,ve,J),ue=me(V);c.set(ue,s[J]=Tn(ue,V))}let we=r[4];const Ne=J=>J[41];for(let J=0;J<we.length;J+=1){let V=kn(r,we,J),ue=Ne(V);g.set(ue,u[J]=Ln(ue,V))}return{c(){e=w("div"),t=w("p"),t.textContent="Set time",n=H(),i=w("div"),l=w("select");for(let J=0;J<s.length;J+=1)s[J].c();a=H(),f=w("select");for(let J=0;J<u.length;J+=1)u[J].c();v=H(),A=w("div"),y=w("button"),O=te("AM"),le=H(),ee=w("button"),P=te("PM"),d(l,"class","picker"),d(f,"class","picker"),d(i,"class","time"),d(y,"class",R=r[1].getHours()<12?"clock-button clock-button-active":"clock-button"),y.disabled=G=r[8](),d(ee,"class",M=r[1].getHours()>=12?"clock-button clock-button-active":"clock-button"),ee.disabled=U=r[7](),d(A,"class","clock"),d(e,"class","timepicker")},m(J,V){x(J,e,V),p(e,t),p(e,n),p(e,i),p(i,l);for(let ue=0;ue<s.length;ue+=1)s[ue].m(l,null);br(l,r[1].getHours()),r[25](l),p(i,a),p(i,f);for(let ue=0;ue<u.length;ue+=1)u[ue].m(f,null);br(f,r[1].getMinutes()),r[27](f),p(e,v),p(e,A),p(A,y),p(y,O),p(A,le),p(A,ee),p(ee,P),fe||(B=[he(l,"blur",r[26]),he(f,"blur",r[28]),he(y,"click",r[29]),he(ee,"click",r[30])],fe=!0)},p(J,V){V[0]&10&&(ve=J[3],s=Cr(s,V,me,1,J,ve,c,l,Er,Tn,null,xn)),V[0]&2&&o!==(o=J[1].getHours())&&br(l,J[1].getHours()),V[0]&16&&(we=J[4],u=Cr(u,V,Ne,1,J,we,g,f,Er,Ln,null,kn)),V[0]&2&&b!==(b=J[1].getMinutes())&&br(f,J[1].getMinutes()),V[0]&2&&R!==(R=J[1].getHours()<12?"clock-button clock-button-active":"clock-button")&&d(y,"class",R),V[0]&256&&G!==(G=J[8]())&&(y.disabled=G),V[0]&2&&M!==(M=J[1].getHours()>=12?"clock-button clock-button-active":"clock-button")&&d(ee,"class",M),V[0]&128&&U!==(U=J[7]())&&(ee.disabled=U)},d(J){J&&h(e);for(let V=0;V<s.length;V+=1)s[V].d();r[25](null);for(let V=0;V<u.length;V+=1)u[V].d();r[27](null),fe=!1,et(B)}}}function Qo(r){let e,t=r[44].text+"",n,i,l,s;return{c(){e=w("option"),n=te(t),i=H(),e.__value=l=r[44].value,e.value=e.__value,e.disabled=s=r[44].disabled},m(c,o){x(c,e,o),p(e,n),p(e,i)},p(c,o){o[0]&8&&t!==(t=c[44].text+"")&&Ae(n,t),o[0]&8&&l!==(l=c[44].value)&&(e.__value=l,e.value=e.__value),o[0]&8&&s!==(s=c[44].disabled)&&(e.disabled=s)},d(c){c&&h(e)}}}function qo(r){let e,t=r[44].text+"",n,i,l,s;return{c(){e=w("option"),n=te(t),i=H(),e.__value=l=r[44].value,e.value=e.__value,e.disabled=s=r[44].disabled},m(c,o){x(c,e,o),p(e,n),p(e,i)},p(c,o){o[0]&8&&t!==(t=c[44].text+"")&&Ae(n,t),o[0]&8&&l!==(l=c[44].value)&&(e.__value=l,e.value=e.__value),o[0]&8&&s!==(s=c[44].disabled)&&(e.disabled=s)},d(c){c&&h(e)}}}function Tn(r,e){let t,n,i,l;function s(a,f){if(f[0]&10&&(n=null),f[0]&10&&(i=null),n==null&&(n=a[1].getHours()>=12&&a[44].value>=12),n)return qo;if(i==null&&(i=a[1].getHours()<12&&a[44].value<12),i)return Qo}let c=s(e,[-1,-1]),o=c&&c(e);return{key:r,first:null,c(){t=st(),o&&o.c(),l=st(),this.first=t},m(a,f){x(a,t,f),o&&o.m(a,f),x(a,l,f)},p(a,f){e=a,c===(c=s(e,f))&&o?o.p(e,f):(o&&o.d(1),o=c&&c(e),o&&(o.c(),o.m(l.parentNode,l)))},d(a){a&&h(t),o&&o.d(a),a&&h(l)}}}function Ln(r,e){let t,n=e[41].text+"",i,l,s,c;return{key:r,first:null,c(){t=w("option"),i=te(n),l=H(),t.__value=s=e[41].value,t.value=t.__value,t.disabled=c=e[41].disabled,this.first=t},m(o,a){x(o,t,a),p(t,i),p(t,l)},p(o,a){e=o,a[0]&16&&n!==(n=e[41].text+"")&&Ae(i,n),a[0]&16&&s!==(s=e[41].value)&&(t.__value=s,t.value=t.__value),a[0]&16&&c!==(c=e[41].disabled)&&(t.disabled=c)},d(o){o&&h(t)}}}function $o(r){let e,t,n,i,l,s=(r[0]?" and time":"")+"",c,o,a,f,u,g=r[11][r[10]]+"",b,v,A,y,O,R,G,le,ee,P,M,U,fe,B,ve,me,we,Ne,J,V=[],ue=new Map,Ue,ze,I,_e=r[2];const ke=oe=>oe[47];for(let oe=0;oe<_e.length;oe+=1){let se=En(r,_e,oe),Re=ke(se);ue.set(Re,V[oe]=Cn(Re,se))}let ce=r[0]&&Sn(r);return{c(){e=w("div"),t=w("div"),n=w("div"),i=w("h2"),l=te(`Pick a date
        `),c=te(s),o=H(),a=w("div"),f=w("div"),u=w("h3"),b=te(g),v=H(),A=te(r[9]),y=H(),O=w("div"),R=w("div"),G=w("button"),G.textContent="\u2039",le=H(),ee=w("span"),ee.textContent="Previous month",P=H(),M=w("div"),U=w("button"),U.textContent="\u203A",fe=H(),B=w("span"),B.textContent="Next month",ve=H(),me=w("div"),we=w("div"),we.innerHTML=`<div class="day label">SUN</div> 
          <div class="day label">MON</div> 
          <div class="day label">TUE</div> 
          <div class="day label">WED</div> 
          <div class="day label">THU</div> 
          <div class="day label">FRI</div> 
          <div class="day label">SAT</div>`,Ne=H(),J=w("div");for(let oe=0;oe<V.length;oe+=1)V[oe].c();Ue=H(),ce&&ce.c(),this.c=j,d(i,"class","datepicker-header"),d(f,"class","current-month"),d(G,"class","datepicker-btn"),d(ee,"class","tooltiptext"),d(R,"class","tooltip"),d(U,"class","datepicker-btn"),d(B,"class","tooltiptext"),d(M,"class","tooltip"),d(a,"class","datepicker-controls"),d(we,"class","label-days"),d(J,"id","calendarDays"),d(J,"class","days"),d(me,"class","datepicker-dates"),d(n,"class","datepicker-wrapper"),d(t,"class","datepicker"),d(t,"id","datepicker")},m(oe,se){x(oe,e,se),p(e,t),p(t,n),p(n,i),p(i,l),p(i,c),p(n,o),p(n,a),p(a,f),p(f,u),p(u,b),p(u,v),p(u,A),p(a,y),p(a,O),p(O,R),p(R,G),p(R,le),p(R,ee),p(O,P),p(O,M),p(M,U),p(M,fe),p(M,B),p(n,ve),p(n,me),p(me,we),p(me,Ne),p(me,J);for(let Re=0;Re<V.length;Re+=1)V[Re].m(J,null);p(me,Ue),ce&&ce.m(me,null),ze||(I=[he(G,"click",r[22]),he(U,"click",r[23])],ze=!0)},p(oe,se){se[0]&1&&s!==(s=(oe[0]?" and time":"")+"")&&Ae(c,s),se[0]&1024&&g!==(g=oe[11][oe[10]]+"")&&Ae(b,g),se[0]&512&&Ae(A,oe[9]),se[0]&8196&&(_e=oe[2],V=Cr(V,se,ke,1,oe,_e,ue,J,Er,Cn,null,En)),oe[0]?ce?ce.p(oe,se):(ce=Sn(oe),ce.c(),ce.m(me,null)):ce&&(ce.d(1),ce=null)},i:j,o:j,d(oe){oe&&h(e);for(let se=0;se<V.length;se+=1)V[se].d();ce&&ce.d(),ze=!1,et(I)}}}const An=8634e4;function ge(r){let e=""+(r.getMonth()+1),t=""+r.getDate(),n=r.getFullYear();return e.length<2&&(e="0"+e),t.length<2&&(t="0"+t),[n,e,t].join("-")}function el(r,e,t){let n,i,l,s;const c=["January","February","March","April","May","June","July","August","September","October","November","December"];let{value:o=new Date}=e,{min:a}=e,{max:f}=e,{timepicker:u=!1}=e,{change:g}=e,b=new Date,v=new Date,A=[],y=[],O=[],R,G;const le=()=>{o&&t(1,v=o),u&&(me(),Ne())},ee=(L,ae,Te=1)=>new Date(L,ae+Te,0).getDate(),P=L=>{t(21,b=new Date(b.setMonth(b.getMonth()+L))),ue()},M=L=>{const ae=new Date(L);u&&(ae.setHours(parseInt(R.value)),ae.setMinutes(parseInt(G.value))),t(1,v=new Date(ae)),a&&ge(a)===ge(L)&&t(1,v=new Date(a)),f&&ge(f)===ge(L)&&t(1,v=new Date(f)),V(),u&&(we(),J())},U=()=>{t(1,v=new Date(v.setHours(parseInt(R.value)))),a&&!f?ge(a)===ge(v)&&t(1,v=new Date(v.setMinutes(a.getMinutes()))):f&&!a?ge(f)===ge(v)&&t(1,v=new Date(v.setMinutes(f.getMinutes()))):f&&a&&(ge(a)===ge(v)?t(1,v=new Date(v.setMinutes(a.getMinutes()))):ge(f)===ge(v)&&t(1,v=new Date(v.setMinutes(f.getMinutes())))),J()},fe=()=>{t(1,v=new Date(v.setMinutes(parseInt(G.value))))},B=L=>{t(1,v=new Date(v.setHours(v.getHours()+L)))},ve=L=>(L=L>12?L-12:L===0?12:L,`${L}`.length<2?`0${L}`:`${L}`),me=()=>{const L=[];for(let ae=0;ae<24;ae++)L.push({value:ae,text:ve(ae),disabled:!1});t(3,y=L),we()},we=()=>t(3,y=y.map(L=>(L.disabled=!1,a&&!f?ge(a)===ge(v)&&(L.disabled=L.value<a.getHours()):f&&!a?ge(f)===ge(v)&&(L.disabled=L.value>f.getHours()):f&&a&&(ge(a)===ge(v)?L.disabled=L.value<a.getHours():ge(f)===ge(v)&&(L.disabled=L.value>f.getHours())),L))),Ne=()=>{const L=[];for(let ae=0;ae<60;ae++)L.push({value:ae,text:`${ae}`.length<2?`0${ae}`:`${ae}`,disabled:!1});t(4,O=L),J()},J=()=>t(4,O=O.map(L=>(L.disabled=!1,a&&!f?ge(a)===ge(v)&&v.getHours()===a.getHours()&&(L.disabled=L.value<a.getMinutes()):f&&!a?ge(f)===ge(v)&&v.getHours()===f.getHours()&&(L.disabled=L.value>f.getMinutes()):f&&a&&(ge(a)===ge(v)&&v.getHours()===a.getHours()?L.disabled=L.value<a.getMinutes():ge(f)===ge(v)&&v.getHours()===f.getHours()&&(L.disabled=L.value>f.getMinutes())),L))),V=()=>t(2,A=A.map(L=>(a&&!f&&(L.isDisabled=L.date.getTime()+An<a.getTime()),f&&!a&&(L.isDisabled=L.date.getTime()>f.getTime()),f&&a&&(L.isDisabled=L.date.getTime()+An<a.getTime()||L.date.getTime()>f.getTime()),L.isSelected=ge(L.date)===ge(v)&&!L.isDisabled,L))),ue=()=>{t(2,A=[]),t(21,b=new Date(b.setDate(1)));const L=ee(b.getFullYear(),b.getMonth()),ae=ee(b.getFullYear(),b.getMonth(),0);for(let ne=b.getDay();ne>0;ne--)t(2,A=[...A,{day:ae-ne+1,activeMonth:!1,date:new Date(b.getFullYear(),b.getMonth()-1,ae-ne+1)}]);for(let ne=1;ne<=L;ne++)t(2,A=[...A,{day:ne,activeMonth:!0,date:new Date(b.getFullYear(),b.getMonth(),ne)}]);const Te=42-A.length;for(let ne=1;ne<=Te;ne++)t(2,A=[...A,{day:ne,activeMonth:!1,date:new Date(b.getFullYear(),b.getMonth()+1,ne)}]);V()};ue();const Ue=()=>P(-1),ze=()=>P(1),I=L=>M(L.date);function _e(L){Ct[L?"unshift":"push"](()=>{R=L,t(5,R),t(3,y)})}const ke=()=>U();function ce(L){Ct[L?"unshift":"push"](()=>{G=L,t(6,G),t(4,O)})}const oe=()=>fe(),se=()=>v.getHours()>=12&&B(-12),Re=()=>v.getHours()<12&&B(12);return r.$$set=L=>{"value"in L&&t(17,o=L.value),"min"in L&&t(18,a=L.min),"max"in L&&t(19,f=L.max),"timepicker"in L&&t(0,u=L.timepicker),"change"in L&&t(20,g=L.change)},r.$$.update=()=>{r.$$.dirty[0]&1048578&&v&&g&&wr().then(()=>{g(v)}),r.$$.dirty[0]&2097152&&t(10,n=b.getMonth()),r.$$.dirty[0]&2097152&&t(9,i=b.getFullYear()),r.$$.dirty[0]&4&&A.filter(L=>L.activeMonth&&!L.isDisabled).length,r.$$.dirty[0]&917505&&(o||a||f||u)&&(le(),V()),r.$$.dirty[0]&262146&&t(8,l=()=>{if(a)return ge(a)===ge(v)?a.getHours()>=12:!1}),r.$$.dirty[0]&524290&&t(7,s=()=>{if(f)return ge(f)===ge(v)?f.getHours()<12:!1})},[u,v,A,y,O,R,G,s,l,i,n,c,P,M,U,fe,B,o,a,f,g,b,Ue,ze,I,_e,ke,ce,oe,se,Re]}class tl extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>.datepicker{font-family:var(--font);width:100%;font-size:var(--font-size);background:var(--background);font-family:sans-serif;font-size:14px}.datepicker-wrapper{padding:1rem}.datepicker-dates{display:flex;flex-direction:column}.label-days{flex:1;display:flex;flex-wrap:wrap}.datepicker-header{padding:10px;color:var(--text);margin:0px}.datepicker-controls{display:flex;align-items:center;justify-content:space-between;padding:10px}.datepicker-btn{height:31px;width:31px;background:var(--background);font-size:18px;cursor:pointer;font-weight:700;border-radius:50px;border:none;color:var(--text)}.datepicker-btn:hover{background:var(--primary-dark) !important;color:var(--button-active-text)}.datepicker-btn:focus{outline:none}.label-days>div{flex-basis:14.2857142857%;text-align:center}.days{width:100%;display:flex;flex-wrap:wrap}.label{color:var(--text-light);font-size:10px}.current{font-weight:700}.current-month h3{color:var(--text);margin:0px}.selected{background:var(--primary) !important;color:var(--button-active-text) !important;font-weight:700}.days div{flex-basis:14.2857142857%;text-align:center;margin-top:3px;box-sizing:border-box;margin-bottom:3px}.days div button{border-radius:50px;background:var(--background);color:var(--text);width:30px;font-size:12px;font-weight:500;height:30px;padding:0;text-align:center;cursor:pointer;border:none}.days div button:focus{outline:0}.days div button:hover{background:var(--primary-dark);color:var(--button-active-text) !important}.days div button:disabled{color:var(--text-light);opacity:0.6;cursor:not-allowed}.timepicker{display:flex;justify-content:space-between;align-items:center;padding:10px 10px}.timepicker div{display:flex}.timepicker p{margin:0;color:var(--text-light)}.picker{border-radius:4px;border:none;color:var(--text);padding:5px 0px;background:var(--background);margin:0px 3px;width:100%}.clock{border-radius:4px;display:flex;width:75px;background:var(--background)}.time{flex:1}.clock-button{border-radius:4px;color:#a4aaad;background:none;cursor:pointer;flex:1;padding:5px 0px;border:none;outline:0}.clock-button:disabled{cursor:not-allowed}.clock-button-active{color:#fff;background:var(--primary)}.tooltip{position:relative;display:inline-block}.tooltip .tooltiptext{opacity:0;visibility:hidden;width:120px;background-color:white;color:#000;text-align:center;border-radius:6px;padding:5px 0;box-shadow:0 1px 10px rgba(0, 0, 0, 0.11), 0 3px 10px rgba(0, 0, 0, 0.12);position:absolute;z-index:1;top:110%;left:50%;margin-left:-60px;transition:opacity 0.3s;transition-delay:1s}.tooltip:hover .tooltiptext{opacity:1;visibility:visible}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},el,$o,_r,{value:17,min:18,max:19,timepicker:0,change:20},null,[-1,-1]),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["value","min","max","timepicker","change"]}get value(){return this.$$.ctx[17]}set value(e){this.$$set({value:e}),z()}get min(){return this.$$.ctx[18]}set min(e){this.$$set({min:e}),z()}get max(){return this.$$.ctx[19]}set max(e){this.$$set({max:e}),z()}get timepicker(){return this.$$.ctx[0]}set timepicker(e){this.$$set({timepicker:e}),z()}get change(){return this.$$.ctx[20]}set change(e){this.$$set({change:e}),z()}}customElements.define("nylas-datepicker",tl);function rl(r){let e,t,n,i,l,s,c,o,a,f,u;return i=new ir({props:{class:"CloseIcon"}}),{c(){e=w("div"),t=w("div"),n=w("span"),nt(i.$$.fragment),l=H(),s=w("nylas-datepicker"),c=H(),o=w("button"),o.textContent="Schedule send",this.c=j,d(n,"class","close"),q(s,"change",r[1]),q(s,"timepicker",!0),q(s,"min",new Date),d(o,"class","save-btn"),d(t,"class","modal-content"),d(e,"class","datepicker-modal")},m(g,b){x(g,e,b),p(e,t),p(t,n),rt(i,n,null),p(t,l),p(t,s),p(t,c),p(t,o),a=!0,f||(u=[he(n,"click",function(){er(r[0])&&r[0].apply(this,arguments)}),he(o,"click",r[2])],f=!0)},p(g,[b]){r=g},i(g){a||(W(i.$$.fragment,g),a=!0)},o(g){re(i.$$.fragment,g),a=!1},d(g){g&&h(e),tt(i),f=!1,et(u)}}}function nl(r,e,t){let n,{schedule:i}=e,{close:l}=e;const s=o=>{n=o},c=()=>{i(Math.trunc(n.getTime()/1e3))};return r.$$set=o=>{"schedule"in o&&t(3,i=o.schedule),"close"in o&&t(0,l=o.close)},[l,s,c,i]}class il extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>.modal-content{display:block;box-shadow:var(--composer-shadow, 0 1px 10px rgba(0, 0, 0, 0.11), 0 3px 36px rgba(0, 0, 0, 0.12));border-radius:var(--composer-border-radius, 6px)}.close{color:var(--composer-text-light-color, #6e6e7a);float:right;padding-right:10px;font-size:28px;font-weight:bold}.close:hover,.close:focus{color:var(--composer-text-color, black);text-decoration:none;cursor:pointer}.save-btn{border:0;background:var(--composer-primary-color, #5c77ff);width:100%;color:white;cursor:pointer;padding:10px 25px;font-weight:bold;border-radius:0 0 var(--composer-border-radius, 6px) var(--composer-border-radius, 6px);font-family:var(--composer-font, sans-serif)}.save-btn:disabled{opacity:0.5}.save-btn:hover{background:var(--composer-primary-dark-color, #294dff)}.datepicker-modal{position:absolute;bottom:calc(var(--composer-outer-padding, 15px) * 0.85);right:calc(var(--composer-outer-padding, 15px) * 0.85);left:calc(var(--composer-outer-padding, 15px) * 0.85)}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},nl,rl,He,{schedule:3,close:0},null),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["schedule","close"]}get schedule(){return this.$$.ctx[3]}set schedule(e){this.$$set({schedule:e}),z()}get close(){return this.$$.ctx[0]}set close(e){this.$$set({close:e}),z()}}customElements.define("nylas-composer-datepicker-modal",il);var ol=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function ll(r,e,t){return t={path:e,exports:{},require:function(n,i){return sl(n,i==null?t.path:i)}},r(t,t.exports),t.exports}function sl(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var al=ll(function(r,e){/*! @license DOMPurify 2.3.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.5/LICENSE */(function(t,n){r.exports=n()})(ol,function(){function t(D){if(Array.isArray(D)){for(var F=0,Y=Array(D.length);F<D.length;F++)Y[F]=D[F];return Y}else return Array.from(D)}var n=Object.hasOwnProperty,i=Object.setPrototypeOf,l=Object.isFrozen,s=Object.getPrototypeOf,c=Object.getOwnPropertyDescriptor,o=Object.freeze,a=Object.seal,f=Object.create,u=typeof Reflect!="undefined"&&Reflect,g=u.apply,b=u.construct;g||(g=function(F,Y,ie){return F.apply(Y,ie)}),o||(o=function(F){return F}),a||(a=function(F){return F}),b||(b=function(F,Y){return new(Function.prototype.bind.apply(F,[null].concat(t(Y))))});var v=U(Array.prototype.forEach),A=U(Array.prototype.pop),y=U(Array.prototype.push),O=U(String.prototype.toLowerCase),R=U(String.prototype.match),G=U(String.prototype.replace),le=U(String.prototype.indexOf),ee=U(String.prototype.trim),P=U(RegExp.prototype.test),M=fe(TypeError);function U(D){return function(F){for(var Y=arguments.length,ie=Array(Y>1?Y-1:0),be=1;be<Y;be++)ie[be-1]=arguments[be];return g(D,F,ie)}}function fe(D){return function(){for(var F=arguments.length,Y=Array(F),ie=0;ie<F;ie++)Y[ie]=arguments[ie];return b(D,Y)}}function B(D,F){i&&i(D,null);for(var Y=F.length;Y--;){var ie=F[Y];if(typeof ie=="string"){var be=O(ie);be!==ie&&(l(F)||(F[Y]=be),ie=be)}D[ie]=!0}return D}function ve(D){var F=f(null),Y=void 0;for(Y in D)g(n,D,[Y])&&(F[Y]=D[Y]);return F}function me(D,F){for(;D!==null;){var Y=c(D,F);if(Y){if(Y.get)return U(Y.get);if(typeof Y.value=="function")return U(Y.value)}D=s(D)}function ie(be){return console.warn("fallback value for",be),null}return ie}var we=o(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),Ne=o(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),J=o(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),V=o(["animate","color-profile","cursor","discard","fedropshadow","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),ue=o(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),Ue=o(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),ze=o(["#text"]),I=o(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),_e=o(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),ke=o(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),ce=o(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),oe=a(/\{\{[\s\S]*|[\s\S]*\}\}/gm),se=a(/<%[\s\S]*|[\s\S]*%>/gm),Re=a(/^data-[\-\w.\u00B7-\uFFFF]/),L=a(/^aria-[\-\w]+$/),ae=a(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),Te=a(/^(?:\w+script|data):/i),ne=a(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),xe=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(D){return typeof D}:function(D){return D&&typeof Symbol=="function"&&D.constructor===Symbol&&D!==Symbol.prototype?"symbol":typeof D};function Ce(D){if(Array.isArray(D)){for(var F=0,Y=Array(D.length);F<D.length;F++)Y[F]=D[F];return Y}else return Array.from(D)}var Ge=function(){return typeof window=="undefined"?null:window},Oe=function(F,Y){if((typeof F=="undefined"?"undefined":xe(F))!=="object"||typeof F.createPolicy!="function")return null;var ie=null,be="data-tt-policy-suffix";Y.currentScript&&Y.currentScript.hasAttribute(be)&&(ie=Y.currentScript.getAttribute(be));var k="dompurify"+(ie?"#"+ie:"");try{return F.createPolicy(k,{createHTML:function(ct){return ct}})}catch(K){return console.warn("TrustedTypes policy "+k+" could not be created."),null}};function Le(){var D=arguments.length>0&&arguments[0]!==void 0?arguments[0]:Ge(),F=function(m){return Le(m)};if(F.version="2.3.5",F.removed=[],!D||!D.document||D.document.nodeType!==9)return F.isSupported=!1,F;var Y=D.document,ie=D.document,be=D.DocumentFragment,k=D.HTMLTemplateElement,K=D.Node,ct=D.Element,Qe=D.NodeFilter,Lr=D.NamedNodeMap,Wr=Lr===void 0?D.NamedNodeMap||D.MozNamedAttrMap:Lr,or=D.HTMLFormElement,de=D.DOMParser,St=D.trustedTypes,Tt=ct.prototype,Zt=me(Tt,"cloneNode"),lr=me(Tt,"nextSibling"),Ar=me(Tt,"childNodes"),ft=me(Tt,"parentNode");if(typeof k=="function"){var mt=ie.createElement("template");mt.content&&mt.content.ownerDocument&&(ie=mt.content.ownerDocument)}var _t=Oe(St,Y),Or=_t?_t.createHTML(""):"",Yt=ie,sr=Yt.implementation,Zr=Yt.createNodeIterator,Yr=Yt.createDocumentFragment,Vr=Yt.getElementsByTagName,Xr=Y.importNode,Vt={};try{Vt=ve(ie).documentMode?ie.documentMode:{}}catch(X){}var Je={};F.isSupported=typeof ft=="function"&&sr&&typeof sr.createHTMLDocument!="undefined"&&Vt!==9;var Lt=oe,pt=se,Mr=Re,gt=L,ar=Te,yt=ne,cr=ae,Ie=null,Xt=B({},[].concat(Ce(we),Ce(Ne),Ce(J),Ce(ue),Ce(ze))),Pe=null,Ht=B({},[].concat(Ce(I),Ce(_e),Ce(ke),Ce(ce))),De=Object.seal(Object.create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),jt=null,fr=null,Nr=!0,ur=!0,Dr=!1,At=!1,Ot=!1,dr=!1,hr=!1,Mt=!1,Kt=!1,_=!1,Q=!0,Ee=!0,Be=!1,Nt={},ut=null,Bt=B({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]),zr=null,Rr=B({},["audio","video","img","source","image","track"]),Ut=null,bt=B({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),Gt="http://www.w3.org/1998/Math/MathML",Kr="http://www.w3.org/2000/svg",Dt="http://www.w3.org/1999/xhtml",Fr=Dt,Qr=!1,Qt=void 0,Vs=["application/xhtml+xml","text/html"],Xs="text/html",Jt=void 0,qt=null,Ks=ie.createElement("form"),Fi=function(m){return m instanceof RegExp||m instanceof Function},qr=function(m){qt&&qt===m||((!m||(typeof m=="undefined"?"undefined":xe(m))!=="object")&&(m={}),m=ve(m),Ie="ALLOWED_TAGS"in m?B({},m.ALLOWED_TAGS):Xt,Pe="ALLOWED_ATTR"in m?B({},m.ALLOWED_ATTR):Ht,Ut="ADD_URI_SAFE_ATTR"in m?B(ve(bt),m.ADD_URI_SAFE_ATTR):bt,zr="ADD_DATA_URI_TAGS"in m?B(ve(Rr),m.ADD_DATA_URI_TAGS):Rr,ut="FORBID_CONTENTS"in m?B({},m.FORBID_CONTENTS):Bt,jt="FORBID_TAGS"in m?B({},m.FORBID_TAGS):{},fr="FORBID_ATTR"in m?B({},m.FORBID_ATTR):{},Nt="USE_PROFILES"in m?m.USE_PROFILES:!1,Nr=m.ALLOW_ARIA_ATTR!==!1,ur=m.ALLOW_DATA_ATTR!==!1,Dr=m.ALLOW_UNKNOWN_PROTOCOLS||!1,At=m.SAFE_FOR_TEMPLATES||!1,Ot=m.WHOLE_DOCUMENT||!1,Mt=m.RETURN_DOM||!1,Kt=m.RETURN_DOM_FRAGMENT||!1,_=m.RETURN_TRUSTED_TYPE||!1,hr=m.FORCE_BODY||!1,Q=m.SANITIZE_DOM!==!1,Ee=m.KEEP_CONTENT!==!1,Be=m.IN_PLACE||!1,cr=m.ALLOWED_URI_REGEXP||cr,Fr=m.NAMESPACE||Dt,m.CUSTOM_ELEMENT_HANDLING&&Fi(m.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(De.tagNameCheck=m.CUSTOM_ELEMENT_HANDLING.tagNameCheck),m.CUSTOM_ELEMENT_HANDLING&&Fi(m.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(De.attributeNameCheck=m.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),m.CUSTOM_ELEMENT_HANDLING&&typeof m.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements=="boolean"&&(De.allowCustomizedBuiltInElements=m.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),Qt=Vs.indexOf(m.PARSER_MEDIA_TYPE)===-1?Qt=Xs:Qt=m.PARSER_MEDIA_TYPE,Jt=Qt==="application/xhtml+xml"?function(N){return N}:O,At&&(ur=!1),Kt&&(Mt=!0),Nt&&(Ie=B({},[].concat(Ce(ze))),Pe=[],Nt.html===!0&&(B(Ie,we),B(Pe,I)),Nt.svg===!0&&(B(Ie,Ne),B(Pe,_e),B(Pe,ce)),Nt.svgFilters===!0&&(B(Ie,J),B(Pe,_e),B(Pe,ce)),Nt.mathMl===!0&&(B(Ie,ue),B(Pe,ke),B(Pe,ce))),m.ADD_TAGS&&(Ie===Xt&&(Ie=ve(Ie)),B(Ie,m.ADD_TAGS)),m.ADD_ATTR&&(Pe===Ht&&(Pe=ve(Pe)),B(Pe,m.ADD_ATTR)),m.ADD_URI_SAFE_ATTR&&B(Ut,m.ADD_URI_SAFE_ATTR),m.FORBID_CONTENTS&&(ut===Bt&&(ut=ve(ut)),B(ut,m.FORBID_CONTENTS)),Ee&&(Ie["#text"]=!0),Ot&&B(Ie,["html","head","body"]),Ie.table&&(B(Ie,["tbody"]),delete jt.tbody),o&&o(m),qt=m)},Ii=B({},["mi","mo","mn","ms","mtext"]),Pi=B({},["foreignobject","desc","title","annotation-xml"]),Ir=B({},Ne);B(Ir,J),B(Ir,V);var $r=B({},ue);B($r,Ue);var Qs=function(m){var N=ft(m);(!N||!N.tagName)&&(N={namespaceURI:Dt,tagName:"template"});var Z=O(m.tagName),Se=O(N.tagName);if(m.namespaceURI===Kr)return N.namespaceURI===Dt?Z==="svg":N.namespaceURI===Gt?Z==="svg"&&(Se==="annotation-xml"||Ii[Se]):Boolean(Ir[Z]);if(m.namespaceURI===Gt)return N.namespaceURI===Dt?Z==="math":N.namespaceURI===Kr?Z==="math"&&Pi[Se]:Boolean($r[Z]);if(m.namespaceURI===Dt){if(N.namespaceURI===Kr&&!Pi[Se]||N.namespaceURI===Gt&&!Ii[Se])return!1;var qe=B({},["title","style","font","a","script"]);return!$r[Z]&&(qe[Z]||!Ir[Z])}return!1},kt=function(m){y(F.removed,{element:m});try{m.parentNode.removeChild(m)}catch(N){try{m.outerHTML=Or}catch(Z){m.remove()}}},Hi=function(m,N){try{y(F.removed,{attribute:N.getAttributeNode(m),from:N})}catch(Z){y(F.removed,{attribute:null,from:N})}if(N.removeAttribute(m),m==="is"&&!Pe[m])if(Mt||Kt)try{kt(N)}catch(Z){}else try{N.setAttribute(m,"")}catch(Z){}},ji=function(m){var N=void 0,Z=void 0;if(hr)m="<remove></remove>"+m;else{var Se=R(m,/^[\r\n\t ]+/);Z=Se&&Se[0]}Qt==="application/xhtml+xml"&&(m='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+m+"</body></html>");var qe=_t?_t.createHTML(m):m;if(Fr===Dt)try{N=new de().parseFromString(qe,Qt)}catch(Ye){}if(!N||!N.documentElement){N=sr.createDocument(Fr,"template",null);try{N.documentElement.innerHTML=Qr?"":qe}catch(Ye){}}var $e=N.body||N.documentElement;return m&&Z&&$e.insertBefore(ie.createTextNode(Z),$e.childNodes[0]||null),Fr===Dt?Vr.call(N,Ot?"html":"body")[0]:Ot?N.documentElement:$e},Bi=function(m){return Zr.call(m.ownerDocument||m,m,Qe.SHOW_ELEMENT|Qe.SHOW_COMMENT|Qe.SHOW_TEXT,null,!1)},qs=function(m){return m instanceof or&&(typeof m.nodeName!="string"||typeof m.textContent!="string"||typeof m.removeChild!="function"||!(m.attributes instanceof Wr)||typeof m.removeAttribute!="function"||typeof m.setAttribute!="function"||typeof m.namespaceURI!="string"||typeof m.insertBefore!="function")},mr=function(m){return(typeof K=="undefined"?"undefined":xe(K))==="object"?m instanceof K:m&&(typeof m=="undefined"?"undefined":xe(m))==="object"&&typeof m.nodeType=="number"&&typeof m.nodeName=="string"},xt=function(m,N,Z){!Je[m]||v(Je[m],function(Se){Se.call(F,N,Z,qt)})},Ui=function(m){var N=void 0;if(xt("beforeSanitizeElements",m,null),qs(m)||R(m.nodeName,/[\u0080-\uFFFF]/))return kt(m),!0;var Z=Jt(m.nodeName);if(xt("uponSanitizeElement",m,{tagName:Z,allowedTags:Ie}),!mr(m.firstElementChild)&&(!mr(m.content)||!mr(m.content.firstElementChild))&&P(/<[/\w]/g,m.innerHTML)&&P(/<[/\w]/g,m.textContent)||Z==="select"&&P(/<template/i,m.innerHTML))return kt(m),!0;if(!Ie[Z]||jt[Z]){if(Ee&&!ut[Z]){var Se=ft(m)||m.parentNode,qe=Ar(m)||m.childNodes;if(qe&&Se)for(var $e=qe.length,Ye=$e-1;Ye>=0;--Ye)Se.insertBefore(Zt(qe[Ye],!0),lr(m))}return!jt[Z]&&Ji(Z)&&(De.tagNameCheck instanceof RegExp&&P(De.tagNameCheck,Z)||De.tagNameCheck instanceof Function&&De.tagNameCheck(Z))?!1:(kt(m),!0)}return m instanceof ct&&!Qs(m)||(Z==="noscript"||Z==="noembed")&&P(/<\/no(script|embed)/i,m.innerHTML)?(kt(m),!0):(At&&m.nodeType===3&&(N=m.textContent,N=G(N,Lt," "),N=G(N,pt," "),m.textContent!==N&&(y(F.removed,{element:m.cloneNode()}),m.textContent=N)),xt("afterSanitizeElements",m,null),!1)},Gi=function(m,N,Z){if(Q&&(N==="id"||N==="name")&&(Z in ie||Z in Ks))return!1;if(!(ur&&!fr[N]&&P(Mr,N))){if(!(Nr&&P(gt,N))){if(!Pe[N]||fr[N]){if(!(Ji(m)&&(De.tagNameCheck instanceof RegExp&&P(De.tagNameCheck,m)||De.tagNameCheck instanceof Function&&De.tagNameCheck(m))&&(De.attributeNameCheck instanceof RegExp&&P(De.attributeNameCheck,N)||De.attributeNameCheck instanceof Function&&De.attributeNameCheck(N))||N==="is"&&De.allowCustomizedBuiltInElements&&(De.tagNameCheck instanceof RegExp&&P(De.tagNameCheck,Z)||De.tagNameCheck instanceof Function&&De.tagNameCheck(Z))))return!1}else if(!Ut[N]){if(!P(cr,G(Z,yt,""))){if(!((N==="src"||N==="xlink:href"||N==="href")&&m!=="script"&&le(Z,"data:")===0&&zr[m])){if(!(Dr&&!P(ar,G(Z,yt,"")))){if(Z)return!1}}}}}}return!0},Ji=function(m){return m.indexOf("-")>0},Wi=function(m){var N=void 0,Z=void 0,Se=void 0,qe=void 0;xt("beforeSanitizeAttributes",m,null);var $e=m.attributes;if(!!$e){var Ye={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:Pe};for(qe=$e.length;qe--;){N=$e[qe];var Pr=N,dt=Pr.name,Zi=Pr.namespaceURI;if(Z=ee(N.value),Se=Jt(dt),Ye.attrName=Se,Ye.attrValue=Z,Ye.keepAttr=!0,Ye.forceKeepAttr=void 0,xt("uponSanitizeAttribute",m,Ye),Z=Ye.attrValue,!Ye.forceKeepAttr&&(Hi(dt,m),!!Ye.keepAttr)){if(P(/\/>/i,Z)){Hi(dt,m);continue}At&&(Z=G(Z,Lt," "),Z=G(Z,pt," "));var ea=Jt(m.nodeName);if(!!Gi(ea,Se,Z))try{Zi?m.setAttributeNS(Zi,dt,Z):m.setAttribute(dt,Z),A(F.removed)}catch(ta){}}}xt("afterSanitizeAttributes",m,null)}},$s=function X(m){var N=void 0,Z=Bi(m);for(xt("beforeSanitizeShadowDOM",m,null);N=Z.nextNode();)xt("uponSanitizeShadowNode",N,null),!Ui(N)&&(N.content instanceof be&&X(N.content),Wi(N));xt("afterSanitizeShadowDOM",m,null)};return F.sanitize=function(X,m){var N=void 0,Z=void 0,Se=void 0,qe=void 0,$e=void 0;if(Qr=!X,Qr&&(X="<!-->"),typeof X!="string"&&!mr(X)){if(typeof X.toString!="function")throw M("toString is not a function");if(X=X.toString(),typeof X!="string")throw M("dirty is not a string, aborting")}if(!F.isSupported){if(xe(D.toStaticHTML)==="object"||typeof D.toStaticHTML=="function"){if(typeof X=="string")return D.toStaticHTML(X);if(mr(X))return D.toStaticHTML(X.outerHTML)}return X}if(dr||qr(m),F.removed=[],typeof X=="string"&&(Be=!1),Be){if(X.nodeName){var Ye=Jt(X.nodeName);if(!Ie[Ye]||jt[Ye])throw M("root node is forbidden and cannot be sanitized in-place")}}else if(X instanceof K)N=ji("<!---->"),Z=N.ownerDocument.importNode(X,!0),Z.nodeType===1&&Z.nodeName==="BODY"||Z.nodeName==="HTML"?N=Z:N.appendChild(Z);else{if(!Mt&&!At&&!Ot&&X.indexOf("<")===-1)return _t&&_?_t.createHTML(X):X;if(N=ji(X),!N)return Mt?null:_?Or:""}N&&hr&&kt(N.firstChild);for(var Pr=Bi(Be?X:N);Se=Pr.nextNode();)Se.nodeType===3&&Se===qe||Ui(Se)||(Se.content instanceof be&&$s(Se.content),Wi(Se),qe=Se);if(qe=null,Be)return X;if(Mt){if(Kt)for($e=Yr.call(N.ownerDocument);N.firstChild;)$e.appendChild(N.firstChild);else $e=N;return Pe.shadowroot&&($e=Xr.call(Y,$e,!0)),$e}var dt=Ot?N.outerHTML:N.innerHTML;return At&&(dt=G(dt,Lt," "),dt=G(dt,pt," ")),_t&&_?_t.createHTML(dt):dt},F.setConfig=function(X){qr(X),dr=!0},F.clearConfig=function(){qt=null,dr=!1},F.isValidAttribute=function(X,m,N){qt||qr({});var Z=Jt(X),Se=Jt(m);return Gi(Z,Se,N)},F.addHook=function(X,m){typeof m=="function"&&(Je[X]=Je[X]||[],y(Je[X],m))},F.removeHook=function(X){Je[X]&&A(Je[X])},F.removeHooks=function(X){Je[X]&&(Je[X]=[])},F.removeAllHooks=function(){Je={}},F}var je=Le();return je})});const cl=(r,e)=>{let t;return function(...i){const l=()=>{clearTimeout(t),r(...i)};clearTimeout(t),t=setTimeout(l,e)}},fl=r=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r),ul=r=>{var e,t,n,i;return r?((i=(n=(t=(e=al.sanitize(r,{ALLOWED_TAGS:[],KEEP_CONTENT:!0}))==null?void 0:e.replace(/(&.+?;)/g,""))==null?void 0:t.replace(/\s+/g," "))==null?void 0:n.trim())==null?void 0:i.substring(0,190))+(r.length>190?"...":""):""},dl=r=>"email"in r&&"name"in r,On=r=>r.reduce((t,n)=>{var i,l,s;return dl(n)?t.push(n):"emails"in n&&((i=n.emails)==null?void 0:i.length)>0&&t.push({name:`${(l=n.given_name)!=null?l:""} ${(s=n.surname)!=null?s:""}`,email:n.emails[0].email,contact:n}),t},[]);function Mn(r,e,t){const n=r.slice();return n[33]=e[t],n[35]=t,n}function Nn(r,e,t){const n=r.slice();return n[33]=e[t],n}function hl(r){let e=r[33].email+"",t;return{c(){t=te(e)},m(n,i){x(n,t,i)},p(n,i){i[0]&8&&e!==(e=n[33].email+"")&&Ae(t,e)},d(n){n&&h(t)}}}function ml(r){let e,t=r[33].name+"",n,i,l=`<${r[33].email}>`,s;return{c(){e=w("strong"),n=te(t),i=H(),s=te(l)},m(c,o){x(c,e,o),p(e,n),x(c,i,o),x(c,s,o)},p(c,o){o[0]&8&&t!==(t=c[33].name+"")&&Ae(n,t),o[0]&8&&l!==(l=`<${c[33].email}>`)&&Ae(s,l)},d(c){c&&h(e),c&&h(i),c&&h(s)}}}function Dn(r,e){let t,n,i,l,s,c,o;function a(b,v){return b[33].name?ml:hl}let f=a(e),u=f(e);function g(){return e[22](e[33])}return{key:r,first:null,c(){t=w("div"),n=w("span"),u.c(),i=H(),l=w("button"),l.textContent="\xD7",s=H(),d(n,"class","contact-item__name"),d(l,"type","button"),d(l,"name","term"),d(t,"class","contact-item"),this.first=t},m(b,v){x(b,t,v),p(t,n),u.m(n,null),p(t,i),p(t,l),p(t,s),c||(o=he(l,"click",g),c=!0)},p(b,v){e=b,f===(f=a(e))&&u?u.p(e,v):(u.d(1),u=f(e),u&&(u.c(),u.m(n,null)))},d(b){b&&h(t),u.d(),c=!1,o()}}}function zn(r){let e,t,n,i;return{c(){e=w("form"),t=w("input"),d(t,"data-cy","contacts-search-field"),d(t,"type","text"),d(t,"name","email"),d(t,"autocomplete","off"),d(t,"class","search-field"),d(e,"class","search-form")},m(l,s){x(l,e,s),p(e,t),r[23](t),on(t,r[4]),n||(i=[he(t,"keydown",r[14]),he(t,"blur",r[24]),he(t,"input",r[25]),he(e,"submit",Qi(r[16]))],n=!0)},p(l,s){s[0]&16&&t.value!==l[4]&&on(t,l[4])},d(l){l&&h(e),r[23](null),n=!1,et(i)}}}function Rn(r){let e;function t(l,s){if(l[9]&&!l[7].length)return pl;if(l[7].length)return _l}let n=t(r),i=n&&n(r);return{c(){e=w("div"),i&&i.c(),d(e,"class","dropdown-content")},m(l,s){x(l,e,s),i&&i.m(e,null)},p(l,s){n===(n=t(l))&&i?i.p(l,s):(i&&i.d(1),i=n&&n(l),i&&(i.c(),i.m(e,null)))},d(l){l&&h(e),i&&i.d()}}}function _l(r){let e,t=r[7],n=[];for(let i=0;i<t.length;i+=1)n[i]=Fn(Mn(r,t,i));return{c(){for(let i=0;i<n.length;i+=1)n[i].c();e=st()},m(i,l){for(let s=0;s<n.length;s+=1)n[s].m(i,l);x(i,e,l)},p(i,l){if(l[0]&166272){t=i[7];let s;for(s=0;s<t.length;s+=1){const c=Mn(i,t,s);n[s]?n[s].p(c,l):(n[s]=Fn(c),n[s].c(),n[s].m(e.parentNode,e))}for(;s<n.length;s+=1)n[s].d(1);n.length=t.length}},d(i){jr(n,i),i&&h(e)}}}function pl(r){let e;return{c(){e=w("p"),e.textContent="Loading...",d(e,"class","dropdown-item")},m(t,n){x(t,e,n)},p:j,d(t){t&&h(e)}}}function gl(r){let e,t=r[33].email+"",n;return{c(){e=w("div"),n=te(t),d(e,"class","dropdown-item__name")},m(i,l){x(i,e,l),p(e,n)},p(i,l){l[0]&128&&t!==(t=i[33].email+"")&&Ae(n,t)},d(i){i&&h(e)}}}function bl(r){let e,t=r[33].name+"",n,i,l,s=r[33].email+"",c;return{c(){e=w("div"),n=te(t),i=H(),l=w("div"),c=te(s),d(e,"class","dropdown-item__name"),d(l,"class","dropdown-item__email")},m(o,a){x(o,e,a),p(e,n),x(o,i,a),x(o,l,a),p(l,c)},p(o,a){a[0]&128&&t!==(t=o[33].name+"")&&Ae(n,t),a[0]&128&&s!==(s=o[33].email+"")&&Ae(c,s)},d(o){o&&h(e),o&&h(i),o&&h(l)}}}function Fn(r){let e,t,n,i;function l(f,u){return f[33].name?bl:gl}let s=l(r),c=s(r);function o(){return r[26](r[33])}function a(){return r[27](r[35])}return{c(){e=w("div"),c.c(),t=H(),d(e,"class","dropdown-item"),Fe(e,"active",r[8]===r[35]),Fe(e,"selected",r[17](r[33].email))},m(f,u){x(f,e,u),c.m(e,null),p(e,t),n||(i=[he(e,"mousedown",o),he(e,"mouseenter",a)],n=!0)},p(f,u){r=f,s===(s=l(r))&&c?c.p(r,u):(c.d(1),c=s(r),c&&(c.c(),c.m(e,t))),u[0]&256&&Fe(e,"active",r[8]===r[35]),u[0]&131200&&Fe(e,"selected",r[17](r[33].email))},d(f){f&&h(e),c.d(),n=!1,et(i)}}}function vl(r){let e,t,n,i,l,s,c,o=[],a=new Map,f,u,g,b,v=r[3];const A=R=>R[33].email;for(let R=0;R<v.length;R+=1){let G=Nn(r,v,R),le=A(G);a.set(le,o[R]=Dn(le,G))}let y=(r[1]&&!r[3].length||!r[1])&&zn(r),O=r[6]&&r[2]&&Rn(r);return{c(){e=w("div"),t=w("div"),n=w("div"),i=w("div"),l=te(r[0]),s=H(),c=w("div");for(let R=0;R<o.length;R+=1)o[R].c();f=H(),y&&y.c(),u=H(),O&&O.c(),this.c=j,d(i,"class","contacts-placeholder"),d(c,"class","contacts-results-inner"),d(n,"class","contacts-results"),d(t,"class","contacts-container"),d(e,"class","dropdown")},m(R,G){x(R,e,G),p(e,t),p(t,n),p(n,i),p(i,l),p(n,s),p(n,c);for(let le=0;le<o.length;le+=1)o[le].m(c,null);p(t,f),y&&y.m(t,null),p(e,u),O&&O.m(e,null),g||(b=he(t,"click",r[12]),g=!0)},p(R,G){G[0]&1&&Ae(l,R[0]),G[0]&1032&&(v=R[3],o=Cr(o,G,A,1,R,v,a,c,Er,Dn,null,Nn)),R[1]&&!R[3].length||!R[1]?y?y.p(R,G):(y=zn(R),y.c(),y.m(t,null)):y&&(y.d(1),y=null),R[6]&&R[2]?O?O.p(R,G):(O=Rn(R),O.c(),O.m(e,null)):O&&(O.d(1),O=null)},i:j,o:j,d(R){R&&h(e);for(let G=0;G<o.length;G+=1)o[G].d();y&&y.d(),O&&O.d(),g=!1,b()}}}function wl(r,e,t){let n;var i=this&&this.__awaiter||function(I,_e,ke,ce){function oe(se){return se instanceof ke?se:new ke(function(Re){Re(se)})}return new(ke||(ke=Promise))(function(se,Re){function L(ne){try{Te(ce.next(ne))}catch(xe){Re(xe)}}function ae(ne){try{Te(ce.throw(ne))}catch(xe){Re(xe)}}function Te(ne){ne.done?se(ne.value):oe(ne.value).then(L,ae)}Te((ce=ce.apply(I,_e||[])).next())})};let{contacts:l}=e,{value:s=[]}=e,{placeholder:c="To"}=e,{single:o=!1}=e,{change:a}=e,{show_dropdown:f=!0}=e,u=[],g="",b=0,v=!1,A,y=[],O=!1;const R=()=>{Array.isArray(l)&&t(21,y=On(l)),Array.isArray(s)&&t(3,u=s)},G=()=>[],le=I=>{t(9,v=!0),t(21,y=[]),ee(I)},ee=cl(I=>i(void 0,void 0,void 0,function*(){t(9,v=!0);const _e=typeof l=="function"?l:G;try{const ke=yield _e(I);Array.isArray(ke)&&t(21,y=On(ke)),t(9,v=!1)}catch(ke){t(9,v=!1)}}),350),P=I=>{t(3,u=u.filter(_e=>_e.email!==I)),U()},M=I=>{if(o&&u.length===1){t(3,u=[I]),t(6,O=!1);return}we(I.email)||t(3,u=[...u,I]),U()},U=I=>{(I==null?void 0:I.target)&&A&&(!o||!u.length)&&(I.target.tagName!=="INPUT"&&A.focus(),t(6,O=!0))},fe=(I={})=>{setTimeout(()=>{I.addContact&&!n.length&&g&&me(),t(6,O=!1),t(4,g=""),A&&A.blur()},I.blurIn||250)},B=I=>{U(),I.key==="Backspace"&&u.length&&!g&&t(3,u=u.slice(0,u.length-1)),I.key==="Tab"&&me(),I.key==="ArrowDown"&&y.length&&b<=y.length&&t(8,b+=1),I.key==="ArrowUp"&&y.length&&b!=0&&t(8,b-=1),I.key==="Escape"&&y.length&&fe()},ve=I=>{t(8,b=I)},me=()=>{o&&u.length===1||(n.length&&(we(n[b].email)||(t(3,u=[...u,n[b]]),t(8,b=0),fe({blurIn:0}))),!we(g)&&g&&fl(g)&&(t(3,u=[...u,{email:g}]),t(8,b=0),fe({blurIn:0})))},we=I=>u.map(_e=>_e.email).includes(I),Ne=I=>P(I.email);function J(I){Ct[I?"unshift":"push"](()=>{A=I,t(5,A)})}const V=()=>{fe({addContact:!0})};function ue(){g=this.value,t(4,g)}const Ue=I=>M(I),ze=I=>ve(I);return r.$$set=I=>{"contacts"in I&&t(18,l=I.contacts),"value"in I&&t(19,s=I.value),"placeholder"in I&&t(0,c=I.placeholder),"single"in I&&t(1,o=I.single),"change"in I&&t(20,a=I.change),"show_dropdown"in I&&t(2,f=I.show_dropdown)},r.$$.update=()=>{r.$$.dirty[0]&32&&A&&(A.setAttribute("tabindex","-1"),A.focus(),A.removeAttribute("tabindex")),r.$$.dirty[0]&1048584&&u&&a&&wr().then(()=>{a(u)}),r.$$.dirty[0]&786432&&(l||s)&&R(),r.$$.dirty[0]&262224&&O&&typeof l=="function"&&le(g),r.$$.dirty[0]&2097168&&t(7,n=y.filter(I=>{const _e=g?g.toLowerCase():"",ke=I.name?I.name.toLowerCase():"",ce=I.email?I.email.toLowerCase():"",oe=ke.includes(_e),se=ce.includes(_e);return(oe||se)&&!we(I.email)})),r.$$.dirty[0]&128&&n&&t(8,b=0)},[c,o,f,u,g,A,O,n,b,v,P,M,U,fe,B,ve,me,we,l,s,a,y,Ne,J,V,ue,Ue,ze]}class yl extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>:root{font-family:sans-serif}.contacts-container{display:flex;align-items:center;flex-wrap:wrap;padding:0.4rem var(--outer-padding);border-bottom:1px solid var(--border)}.contacts-container *:focus{outline:5px auto var(--primary)}.contacts-container>div{padding-bottom:0.1rem;padding-right:0.1rem}.contact-item{display:inline-flex;background:var(--primary-light);color:var(--primary);align-items:center;border-radius:calc(var(--border-radius) / 2);padding:0.2rem 0.8rem;margin-right:0.25rem;margin-top:2px;margin-bottom:2px}.contact-item>button{color:var(--text-secondary);border:none;background:none;padding:2px 4px;font-weight:bold;font-size:13px;cursor:pointer}.contact-item__name{color:var(--text-secondary);font-size:12px;padding-right:0.75rem}.dropdown{width:100%;position:relative;display:inline-block}.dropdown-content{display:block;position:absolute;max-height:350px;background:var(--background);left:calc(var(--outer-padding) / 2);right:calc(var(--outer-padding) / 2);overflow-y:auto;color:var(--text);box-shadow:var(--shadow);z-index:1;border-radius:calc(var(--border-radius) / 2)}.dropdown-item{cursor:pointer;padding:var(--outer-padding);font-size:var(--font-size-small);background:var(--primary-light)}.dropdown-item.active{background-color:var(--primary);color:white}.dropdown-item.active .dropdown-item__email{color:var(--bg) !important}.dropdown-item.selected{opacity:0.3}.dropdown-item__name{font-weight:bold;display:inline-flex}.dropdown-item__email{color:var(--text-light);display:inline-flex;margin-left:0.25rem}.search-field{border:none;color:var(--text);background:var(--bg);min-width:100%}.search-field:focus{width:100px}.search-form{display:flex;padding-top:0.5rem;padding-bottom:0.5rem;align-items:center;min-width:320px}.contacts-results{display:flex;align-items:center}.contacts-placeholder{font-size:var(--font-size-small);margin-right:10px;min-width:30px;display:flex;color:var(--text-light)}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},wl,vl,_r,{contacts:18,value:19,placeholder:0,single:1,change:20,show_dropdown:2},null,[-1,-1]),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["contacts","value","placeholder","single","change","show_dropdown"]}get contacts(){return this.$$.ctx[18]}set contacts(e){this.$$set({contacts:e}),z()}get value(){return this.$$.ctx[19]}set value(e){this.$$set({value:e}),z()}get placeholder(){return this.$$.ctx[0]}set placeholder(e){this.$$set({placeholder:e}),z()}get single(){return this.$$.ctx[1]}set single(e){this.$$set({single:e}),z()}get change(){return this.$$.ctx[20]}set change(e){this.$$set({change:e}),z()}get show_dropdown(){return this.$$.ctx[2]}set show_dropdown(e){this.$$set({show_dropdown:e}),z()}}customElements.define("nylas-contacts-search",yl);const kl=["message/delivery-status","message/rfc822"],xl=r=>r.content_disposition==="attachment"&&!!r.filename&&!kl.includes(r.content_type),Wt=[];function El(r,e){return{subscribe:Ft(r,e).subscribe}}function Ft(r,e=j){let t;const n=new Set;function i(c){if(He(r,c)&&(r=c,t)){const o=!Wt.length;for(const a of n)a[1](),Wt.push(a,r);if(o){for(let a=0;a<Wt.length;a+=2)Wt[a][0](Wt[a+1]);Wt.length=0}}}function l(c){i(c(r))}function s(c,o=j){const a=[c,o];return n.add(a),n.size===1&&(t=e(i)||j),c(r),()=>{n.delete(a),n.size===0&&(t(),t=null)}}return{set:i,update:l,subscribe:s}}function Cl(r,e,t){const n=!Array.isArray(r),i=n?[r]:r,l=e.length<2;return El(t,s=>{let c=!1;const o=[];let a=0,f=j;const u=()=>{if(a)return;f();const b=e(n?o[0]:o,s);l?s(b):f=er(b)?b:j},g=i.map((b,v)=>rn(b,A=>{o[v]=A,a&=~(1<<v),c&&u()},()=>{a|=1<<v}));return c=!0,u(),function(){et(g),f()}})}function Sl(){return Ft({})}const Gr=Sl();var Tl=Object.defineProperty,Ll=Object.defineProperties,Al=Object.getOwnPropertyDescriptors,In=Object.getOwnPropertySymbols,Ol=Object.prototype.hasOwnProperty,Ml=Object.prototype.propertyIsEnumerable,Pn=(r,e,t)=>e in r?Tl(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Nl=(r,e)=>{for(var t in e||(e={}))Ol.call(e,t)&&Pn(r,t,e[t]);if(In)for(var t of In(e))Ml.call(e,t)&&Pn(r,t,e[t]);return r},Dl=(r,e)=>Ll(r,Al(e));async function it(r){var e;if(!r.ok){const t=await r.json().then(l=>l),n=((e=t==null?void 0:t.response)==null?void 0:e.error)||(t==null?void 0:t.message),i=new Error(n);return i.name=t.name,Promise.reject({message:i,statusCode:r.status})}return r.json()}function ot(r={component_id:""}){return{method:r.method||"GET",headers:{Accept:"application/json","Content-Type":"application/json","X-Component-Id":r.component_id||"","X-Access-Token":r.access_token||""},body:r.body?JSON.stringify(r.body):void 0}}function at(r,e){throw console.error(e),Gr.update(t=>Dl(Nl({},t),{[r]:e})),e}const Hn={"001":"","002":"ireland-","003":"canada-"};function lt(r){let e="";if(r.substring(3,4)==="-"){const n=r.substring(0,3);typeof Hn[n]!="undefined"&&(e=Hn[n])}return`https://${e}web-components.nylas.com/middleware`}function It(r){}var zl=Object.defineProperty,Rl=Object.defineProperties,Fl=Object.getOwnPropertyDescriptors,jn=Object.getOwnPropertySymbols,Il=Object.prototype.hasOwnProperty,Pl=Object.prototype.propertyIsEnumerable,Bn=(r,e,t)=>e in r?zl(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Un=(r,e)=>{for(var t in e||(e={}))Il.call(e,t)&&Bn(r,t,e[t]);if(jn)for(var t of jn(e))Pl.call(e,t)&&Bn(r,t,e[t]);return r},Gn=(r,e)=>Rl(r,Fl(e));const Jn=(r,e,t)=>{if(r.thread_ids){const i=r.thread_ids.slice(t,t+e);return Promise.all(i.map(async l=>{const s=`${lt(r.component_id)}/threads/${l}?view=expanded`;return await fetch(s,ot(r)).then(c=>it(c)).then(c=>c.response).then(c=>Gn(Un({},c),{messages:c.messages.filter(o=>o.from.length!==0||o.to.length!==0)})).catch(c=>at(r.component_id,c))}))}let n=`${lt(r.component_id)}/threads?view=expanded&not_in=trash&limit=${e}&offset=${t}`;return r.query&&Object.entries(r.query).forEach(i=>n=n.concat(`&${i[0]}=${i[1]}`)),fetch(n,ot(r)).then(i=>it(i)).then(i=>i.response).then(i=>i.map(l=>Gn(Un({},l),{messages:l.messages.filter(s=>s.from.length!==0||s.to.length!==0)}))).catch(i=>at(r.component_id,i))};function Wn(r){let e=`${lt(r.component_id)}/threads?view=expanded&not_in=trash&view=count`;return r.query&&Object.entries(r.query).forEach(t=>e=e.concat(`&${t[0]}=${t[1]}`)),r.keywordToSearch&&(e+=`&q=${r.keywordToSearch}`),fetch(e,ot(r)).then(t=>it(t)).then(t=>t.response.count)}const Hl=r=>{const e=`${lt(r.component_id)}/threads/search?q=${r.keywordToSearch}&view=expanded&limit=${r.query.limit}&offset=${r.query.offset}`;return fetch(e,ot(r)).then(async t=>it(t)).then(t=>t.response).catch(t=>at(r.component_id,t))},jl=(r,e)=>fetch(`${lt(r.component_id)}/threads/${e.id}`,ot({method:"PUT",component_id:r.component_id,access_token:r.access_token,body:{unread:e.unread,starred:e.starred,folder_id:e.folder_id,label_ids:e.label_ids}})).then(t=>it(t)).then(t=>t.response).catch(t=>at(r.component_id,t)),Bl=async(r,e)=>await fetch(`${lt(r)}/manifest`,ot({access_token:e,component_id:r})).then(it).then(t=>t.component.theming).catch(t=>at(r,t)),Ul=async(r,e,t)=>await fetch(`${lt(r)}/send`,ot({method:"POST",component_id:r,access_token:t,body:e})).then(n=>it(n)).then(n=>n.response).catch(n=>at(r,n)),Gl=async(r,e,t)=>{const n=ot({method:"POST",component_id:r,access_token:t}),i=new FormData;return i.append("file",e),typeof n.headers!="undefined"&&"Content-Type"in n.headers&&delete n.headers["Content-Type"],n.body=i,await fetch(`${lt(r)}/files`,n).then(l=>it(l)).then(l=>Array.isArray(l.response)?l.response[0]:l.response).catch(at.bind(0,r))},Jl=async(r,e,t)=>await fetch(`${lt(r)}/drafts`,ot({method:"POST",component_id:r,access_token:t,body:e})).then(n=>it(n)).then(n=>n.response).catch(n=>at(r,n)),Zn=async(r,e,t)=>await fetch(`${lt(r)}/drafts/${e.id}`,ot({method:"PUT",component_id:r,access_token:t,body:e})).then(n=>it(n)).then(n=>n.response).catch(n=>at(r,n)),Wl=async r=>await fetch(`${lt(r.component_id)}/account`,ot(r)).then(t=>it(t)).then(t=>t.response).catch(t=>at(r.component_id,t));var Zl=Object.defineProperty,Yn=Object.getOwnPropertySymbols,Yl=Object.prototype.hasOwnProperty,Vl=Object.prototype.propertyIsEnumerable,Vn=(r,e,t)=>e in r?Zl(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Xn=(r,e)=>{for(var t in e||(e={}))Yl.call(e,t)&&Vn(r,t,e[t]);if(Yn)for(var t of Yn(e))Vl.call(e,t)&&Vn(r,t,e[t]);return r};const Xl=async r=>fetch(`${lt(r.component_id)}/calendars/availability`,ot({method:"POST",component_id:r.component_id,access_token:r.access_token,body:r.body})).then(async e=>{const t=await it(e);return t.response.time_slots=t.response.time_slots.map(n=>(n.start_time=n.start||0,n.end_time=n.end||0,delete n.start,delete n.end,n)),t.response}).catch(e=>at(r.component_id,e)),Kl=async r=>fetch(`${lt(r.component_id)}/calendars/availability/consecutive`,ot({method:"POST",component_id:r.component_id,access_token:r.access_token,body:r.body})).then(async e=>{var t;const i=((t=(await it(e)).response)==null?void 0:t.map(c=>(c=c.map(o=>(o.start_time=new Date(o.start_time*1e3),o.end_time=new Date(o.end_time*1e3),o)),c)))||[],l=Ql(i,r.body.events);return ql(l)}).catch(e=>at(r.component_id,e));function Ql(r,e){return r.map(t=>t.map(n=>Xn(Xn({},n),e.find(i=>i.participantEmails.length===n.emails.length&&i.participantEmails.every(l=>n.emails.includes(l))))))}function ql(r){const e=new Set;return r.filter(t=>{const n=`${t[0].start_time}_${t[t.length-1].end_time}`;return e.has(n)?!1:(e.add(n),!0)})}var $l=Object.defineProperty,Kn=Object.getOwnPropertySymbols,es=Object.prototype.hasOwnProperty,ts=Object.prototype.propertyIsEnumerable,Qn=(r,e,t)=>e in r?$l(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,rs=(r,e)=>{for(var t in e||(e={}))es.call(e,t)&&Qn(r,t,e[t]);if(Kn)for(var t of Kn(e))ts.call(e,t)&&Qn(r,t,e[t]);return r};function ns(){const r=(t,n)=>{var i,l;const s=JSON.parse(n),c=rs({},s);if(delete c.forceReload,n=JSON.stringify(c),!(!s.component_id||!((i=s==null?void 0:s.body)==null?void 0:i.start_time)||!((l=s==null?void 0:s.body)==null?void 0:l.end_time))){if(!t[n]||s.forceReload){const o=Xl(s);e.update(a=>(a[n]=o,a)),t[n]=o}return t[n]}},e=Ft(new Proxy({},{get:r}));return e}ns();function is(){const r=(t,n)=>{var i,l;const s=JSON.parse(n);if(!(!s.component_id||!((i=s==null?void 0:s.body)==null?void 0:i.start_time)||!((l=s==null?void 0:s.body)==null?void 0:l.end_time))){if(!t[n]){const c=Kl(s);e.update(o=>(o[n]=c,o)),t[n]=c}return t[n]}},e=Ft(new Proxy({},{get:r}));return e}is();var os=Object.defineProperty,qn=Object.getOwnPropertySymbols,ls=Object.prototype.hasOwnProperty,ss=Object.prototype.propertyIsEnumerable,$n=(r,e,t)=>e in r?os(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Pt=(r,e)=>{for(var t in e||(e={}))ls.call(e,t)&&$n(r,t,e[t]);if(qn)for(var t of qn(e))ss.call(e,t)&&$n(r,t,e[t]);return r};async function ei(r){const e=[];for(let t=0;t<r;t++)e.push({isLoaded:!1,threads:[]});return e}function as(){const{subscribe:r,set:e,update:t}=Ft({});let n={},i;return{subscribe:r,set:e,getThreads:async(l,s,c,o=!1)=>{const a=JSON.stringify(l);if(!l.component_id&&!l.access_token)return[];if(i===void 0||o){const f=l.thread_ids?l.thread_ids.length:await Wn(l).catch(It);f&&(i=f)}if(!Array.isArray(n[a])||o){const f=Math.ceil(i/c);n[a]=await ei(f)}if(typeof n[a][s]=="undefined")return[];if(!n[a][s].isLoaded){const f=await Jn(l,c,s*c).catch(It);f&&(n[a][s].threads=f,n[a][s].isLoaded=!0)}return t(f=>(f[a]=n[a],Pt({},f))),n[a][s].threads},getNumberOfItems:async l=>{if(!l.component_id&&!l.access_token)return 0;if(typeof i=="undefined"){const s=await Wn(l).catch(It);s&&(i=s)}return i},getThreadsWithSearchKeyword:async(l,s=!1)=>{if(!l.component_id&&!l.access_token)return[];const c=JSON.stringify(l);if((!Array.isArray(n[c])||s)&&(n[c]=await ei(1)),!n[c][0].isLoaded||s){const o=await Hl(l).catch(It);o&&(n[c][0].threads=o,n[c][0].isLoaded=!0)}return t(o=>(o[c]=n[c],Pt({},o))),n[c][0].threads},updateThread:async(l,s,c,o,a)=>{const f=await jl(l,c).catch(It);if(!n[s][o].isLoaded){const u=await Jn(JSON.parse(s),a,o*a).catch(It);u&&(n[s][o].threads=u,n[s][o].isLoaded=!0)}return n[s][o].threads=n[s][o].threads.map(u=>(f&&u.id===f.id&&(u=Object.assign(u,f)),u)),t(u=>(u[s]=n[s],Pt({},u))),n[s][o].threads},updateThreadSelection:(l,s,c)=>{const o=n[l][s].threads;if(c){const a=o.find(f=>f.id===c);a&&(a.selected=!a.selected)}else{const a=o.some(f=>f.selected);for(const f of o)f.selected=!a}return t(a=>(a[l]=n[l],Pt({},a))),n[l][s].threads},reset:()=>{n={},e({})},hydrateMessageInThread:(l,s,c)=>{var o,a,f;const u=JSON.stringify(s),g=(a=(o=n[u][c])==null?void 0:o.threads)==null?void 0:a.find(b=>b.id===l.thread_id);if(g){const b=(f=g.messages)==null?void 0:f.find(v=>v.id===l.id);b?(b.body=l.body,t(v=>{if(l.thread_id){let A=v[u][c].threads.find(y=>y.id===g.id);A&&(A=JSON.parse(JSON.stringify(g)))}return Pt({},v)})):t(v=>{if(l.thread_id){let A=v[u][c].threads.find(y=>y.id===g.id);if(A){const y=g.messages;y.push(l),g.messages=y,g.snippet=l.snippet,g.drafts=g.drafts.filter(O=>O.id!==l.id),A=JSON.parse(JSON.stringify(g))}}return Pt({},v)})}return n[u][c].threads},hydrateDraftInThread:(l,s,c)=>{var o,a,f;const u=JSON.stringify(s),g=(a=(o=n[u][c])==null?void 0:o.threads)==null?void 0:a.find(b=>b.id===l.thread_id);if(g){const b=(f=g.drafts)==null?void 0:f.find(v=>v.id===l.id);if(l.thread_id){if(b)Object.assign(b,l);else{const v=g.drafts;v.push(l),g.drafts=v}t(v=>{let A=v[u][c].threads.find(y=>y.id===g.id);return A&&(A=JSON.parse(JSON.stringify(g))),Pt({},v)})}}return n[u][c].threads}}}const cs=as();Cl(cs,r=>{const e={};return Object.entries(r).forEach(([t,n])=>e[t]=n.map(i=>i.threads).flat()),e});function fs(){const r=(t,n)=>{const i=JSON.parse(n);if(!!i.component_id){if(!t[n]){const l=Bl(i.component_id,i.access_token);e.update(s=>(s[n]=l,s)),t[n]=l}return t[n]}},e=Ft(new Proxy({},{get:r}));return e}const us=fs();function ds(r){return(e,t)=>{r.dispatchEvent&&r.dispatchEvent(new CustomEvent(e,{detail:t,composed:!0}))}}function Jr(r,e,t){return new Proxy(r,{get:(n,i)=>i==="toString"||i==="toJSON"?()=>JSON.stringify(n):Reflect.get(n,i)!==void 0?ti(Reflect.get(n,i),t[i]):e&&i in e?ti(e[i],t[i]):t[i],ownKeys:n=>{const i=new Set([...Reflect.ownKeys(n),...Object.keys(e),...Object.keys(t)]);return Array.from(i)},getOwnPropertyDescriptor:(n,i)=>{var l,s;let c=Reflect.getOwnPropertyDescriptor(n,i);return c||(c=(s=(l=e&&Object.getOwnPropertyDescriptor(e,i))!=null?l:t&&Object.getOwnPropertyDescriptor(t,i))!=null?s:{configurable:!0,enumerable:!0,writable:!0},Reflect.defineProperty(n,i,c)),c}})}function ti(r,e){if(r){if(typeof e=="boolean")return hs(r);if(typeof e=="number")return Number(r);if(e instanceof Date)return new Date(r)}return r===void 0?e!=null?e:null:r}function hs(r){return[!0,"true","1"].includes(r)}function ri(r){let e,t,n,i,l,s;function c(f,u){if(f[2]==="HostDomainNotAllowedError")return _s;if(f[2]==="IncompatibleProperties")return ms}let o=c(r),a=o&&o(r);return{c(){var f,u;e=w("div"),a&&a.c(),t=H(),n=w("span"),n.textContent="Debug info:",i=H(),l=w("textarea"),d(n,"class","details"),d(l,"class","details"),l.readOnly=!0,l.value=s=`
      `+r[2]+": "+r[0]+`
      `+((u=(f=r[1].message)==null?void 0:f.message)!=null?u:"")+`
    `,d(e,"class","message-container")},m(f,u){x(f,e,u),a&&a.m(e,null),p(e,t),p(e,n),p(e,i),p(e,l)},p(f,u){var g,b;o===(o=c(f))&&a?a.p(f,u):(a&&a.d(1),a=o&&o(f),a&&(a.c(),a.m(e,t))),u&7&&s!==(s=`
      `+f[2]+": "+f[0]+`
      `+((b=(g=f[1].message)==null?void 0:g.message)!=null?b:"")+`
    `)&&(l.value=s)},d(f){f&&h(e),a&&a.d()}}}function ms(r){let e;return{c(){e=w("h3"),e.textContent="Your component properties do not work with each other."},m(t,n){x(t,e,n)},p:j,d(t){t&&h(e)}}}function _s(r){let e,t,n,i,l,s;return{c(){e=w("h3"),t=te(`You are trying to access this component from\xA0
        `),n=w("code"),n.textContent=`${window.location.hostname}`,i=te(`. The component's settings do not
        allow access from this domain.`),l=H(),s=w("h4"),s.innerHTML=`The list of allowed domains can be modified in your\xA0
        <a href="https://dashboard.nylas.com">Dashboard</a>.`},m(c,o){x(c,e,o),p(e,t),p(e,n),p(e,i),x(c,l,o),x(c,s,o)},p:j,d(c){c&&h(e),c&&h(l),c&&h(s)}}}function ps(r){let e,t=r[2]&&r[3]&&ri(r);return{c(){t&&t.c(),e=st(),this.c=j},m(n,i){t&&t.m(n,i),x(n,e,i)},p(n,[i]){n[2]&&n[3]?t?t.p(n,i):(t=ri(n),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},i:j,o:j,d(n){t&&t.d(n),n&&h(e)}}}function gs(r,e,t){let n;pr(r,Gr,g=>t(8,n=g));var i,l,s,c;let{id:o}=e,a,f;const u=window.location.href.includes("localhost")||window.location.href.includes("127.0.0.1");return r.$$set=g=>{"id"in g&&t(0,o=g.id)},r.$$.update=()=>{r.$$.dirty&499&&(t(1,a=t(4,i=n[o])!==null&&i!==void 0?i:{name:""}),t(2,f=t(7,c=t(5,l=a.name)!==null&&l!==void 0?l:t(6,s=a.message)===null||s===void 0?void 0:s.name)!==null&&c!==void 0?c:""))},[o,a,f,u,i,l,s,c,n]}class bs extends wt{constructor(e){super();this.shadowRoot.innerHTML=`<style>.message-container{background:#fff6f6;border-radius:5px;box-shadow:0 0 0 1px #aa92a0 inset, 0 0 0 0 transparent;color:#9f3a38;font-size:1.25rem;padding:10px;margin:0 auto;transition:opacity 500ms ease, color 500ms ease,
      background-color 500ms ease, box-shadow 500ms ease,
      -webkit-box-shadow 500ms ease}.message-container *:focus{outline:5px auto Highlight;outline:5px auto -webkit-focus-ring-color}.details{color:#494949;font-size:0.75rem;width:100%}</style>`,Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},gs,ps,_r,{id:0},null),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["id"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),z()}}customElements.define("nylas-error",bs);var vs="@nylas/components-composer",ws="1.1.6-canary.20",ys={type:"git",url:"github:nylas/components.git",directory:"components/composer"},ks={build:"rollup -c",dev:"rollup -c -w",tscheck:'tsc && svelte-check --compiler-warnings "missing-custom-element-compile-options:ignore"',start:"echo 'Nothing to start'"},xs="index.js",Es="cca94159c114ecff613f41caa0a4468e0f698e2c",Cs={name:vs,version:ws,repository:ys,scripts:ks,main:xs,gitHead:Es},Ss=Object.defineProperty,ni=Object.getOwnPropertySymbols,Ts=Object.prototype.hasOwnProperty,Ls=Object.prototype.propertyIsEnumerable,ii=(r,e,t)=>e in r?Ss(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,oi=(r,e)=>{for(var t in e||(e={}))Ts.call(e,t)&&ii(r,t,e[t]);if(ni)for(var t of ni(e))Ls.call(e,t)&&ii(r,t,e[t]);return r};const Sr={from:[],to:[],cc:[],bcc:[],body:"",subject:"New Message",send_at:null,file_ids:[]},li=[],si=(r,e)=>r.update(t=>t.map(n=>n.filename).includes(e.filename)?t:[...t,e]),ai=(r,e,t)=>r.update(n=>n.map(i=>i.filename===e?oi(oi({},i),t):i)),As=(r,e)=>r.update(t=>[...t.filter(n=>n.filename!==e.filename)]),Tr=r=>{r.set(JSON.parse(JSON.stringify(li)))},ci=r=>`${["January","February","March","April","May","June","July","August","September","October","November","December"][r.getMonth()]} ${r.getDate()}, ${r.getHours()}:${r.getMinutes()} ${r.getHours()>=12?"PM":"AM"}`;function Os(r){let e,t,n,i,l,s,c,o,a,f,u,g,b,v,A,y,O,R,G,le=[{version:"1.1"},{id:"Capa_1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{width:"357px"},{height:"357px"},{viewBox:"0 0 357 357"},{style:"enable-background:new 0 0 357 357;"},{"xml:space":"preserve"},r[0]],ee={};for(let P=0;P<le.length;P+=1)ee=$(ee,le[P]);return{c(){e=E("svg"),t=E("g"),n=E("g"),i=E("path"),l=E("g"),s=E("g"),c=E("g"),o=E("g"),a=E("g"),f=E("g"),u=E("g"),g=E("g"),b=E("g"),v=E("g"),A=E("g"),y=E("g"),O=E("g"),R=E("g"),G=E("g"),this.h()},l(P){e=S(P,"svg",{version:!0,id:!0,xmlns:!0,"xmlns:xlink":!0,x:!0,y:!0,width:!0,height:!0,viewBox:!0,style:!0,"xml:space":!0});var M=C(e);t=S(M,"g",{});var U=C(t);n=S(U,"g",{id:!0});var fe=C(n);i=S(fe,"path",{d:!0}),C(i).forEach(h),fe.forEach(h),U.forEach(h),l=S(M,"g",{});var B=C(l);B.forEach(h),s=S(M,"g",{});var ve=C(s);ve.forEach(h),c=S(M,"g",{});var me=C(c);me.forEach(h),o=S(M,"g",{});var we=C(o);we.forEach(h),a=S(M,"g",{});var Ne=C(a);Ne.forEach(h),f=S(M,"g",{});var J=C(f);J.forEach(h),u=S(M,"g",{});var V=C(u);V.forEach(h),g=S(M,"g",{});var ue=C(g);ue.forEach(h),b=S(M,"g",{});var Ue=C(b);Ue.forEach(h),v=S(M,"g",{});var ze=C(v);ze.forEach(h),A=S(M,"g",{});var I=C(A);I.forEach(h),y=S(M,"g",{});var _e=C(y);_e.forEach(h),O=S(M,"g",{});var ke=C(O);ke.forEach(h),R=S(M,"g",{});var ce=C(R);ce.forEach(h),G=S(M,"g",{});var oe=C(G);oe.forEach(h),M.forEach(h),this.h()},h(){d(i,"d","M357,204H0v-51h357V204z"),d(n,"id","remove"),ye(e,ee)},m(P,M){Ve(P,e,M),T(e,t),T(t,n),T(n,i),T(e,l),T(e,s),T(e,c),T(e,o),T(e,a),T(e,f),T(e,u),T(e,g),T(e,b),T(e,v),T(e,A),T(e,y),T(e,O),T(e,R),T(e,G)},p(P,[M]){ye(e,ee=Xe(le,[{version:"1.1"},{id:"Capa_1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{width:"357px"},{height:"357px"},{viewBox:"0 0 357 357"},{style:"enable-background:new 0 0 357 357;"},{"xml:space":"preserve"},M&1&&P[0]]))},i:j,o:j,d(P){P&&h(e)}}}function Ms(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Ns extends Ke{constructor(e){super();Me(this,e,Ms,Os,He,{})}}function Ds(r){let e,t,n=[{height:"512pt"},{viewBox:"-96 0 512 512"},{width:"512pt"},{xmlns:"http://www.w3.org/2000/svg"},r[0]],i={};for(let l=0;l<n.length;l+=1)i=$(i,n[l]);return{c(){e=E("svg"),t=E("path"),this.h()},l(l){e=S(l,"svg",{height:!0,viewBox:!0,width:!0,xmlns:!0});var s=C(e);t=S(s,"path",{d:!0}),C(t).forEach(h),s.forEach(h),this.h()},h(){d(t,"d","m160 512c-88.234375 0-160-71.765625-160-160v-224c0-11.796875 9.558594-21.332031 21.332031-21.332031 11.777344 0 21.335938 9.535156 21.335938 21.332031v224c0 64.683594 52.628906 117.332031 117.332031 117.332031s117.332031-52.648437 117.332031-117.332031v-234.667969c0-41.171875-33.492187-74.664062-74.664062-74.664062-41.175781 0-74.667969 33.492187-74.667969 74.664062v213.335938c0 17.640625 14.355469 32 32 32s32-14.359375 32-32v-202.667969c0-11.796875 9.558594-21.332031 21.332031-21.332031 11.777344 0 21.335938 9.535156 21.335938 21.332031v202.667969c0 41.171875-33.496094 74.664062-74.667969 74.664062s-74.667969-33.492187-74.667969-74.664062v-213.335938c0-64.679687 52.628907-117.332031 117.335938-117.332031 64.703125 0 117.332031 52.652344 117.332031 117.332031v234.667969c0 88.234375-71.765625 160-160 160zm0 0"),ye(e,i)},m(l,s){Ve(l,e,s),T(e,t)},p(l,[s]){ye(e,i=Xe(n,[{height:"512pt"},{viewBox:"-96 0 512 512"},{width:"512pt"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&l[0]]))},i:j,o:j,d(l){l&&h(e)}}}function zs(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Rs extends Ke{constructor(e){super();Me(this,e,zs,Ds,He,{})}}function Fs(r){let e,t,n,i=[{xmlns:"http://www.w3.org/2000/svg"},{height:"24px"},{viewBox:"0 0 24 24"},{width:"24px"},{fill:"#000000"},r[0]],l={};for(let s=0;s<i.length;s+=1)l=$(l,i[s]);return{c(){e=E("svg"),t=E("path"),n=E("path"),this.h()},l(s){e=S(s,"svg",{xmlns:!0,height:!0,viewBox:!0,width:!0,fill:!0});var c=C(e);t=S(c,"path",{d:!0,fill:!0}),C(t).forEach(h),n=S(c,"path",{d:!0}),C(n).forEach(h),c.forEach(h),this.h()},h(){d(t,"d","M0 0h24v24H0V0z"),d(t,"fill","none"),d(n,"d","M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zm-2 0v.01L12 13 4 8l8-4.68L19.99 8zM4 18v-7.66l8 5.02 7.99-4.99L20 18H4z"),ye(e,l)},m(s,c){Ve(s,e,c),T(e,t),T(e,n)},p(s,[c]){ye(e,l=Xe(i,[{xmlns:"http://www.w3.org/2000/svg"},{height:"24px"},{viewBox:"0 0 24 24"},{width:"24px"},{fill:"#000000"},c&1&&s[0]]))},i:j,o:j,d(s){s&&h(e)}}}function Is(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Ps extends Ke{constructor(e){super();Me(this,e,Is,Fs,He,{})}}function Hs(r){let e,t,n,i,l,s,c,o,a,f,u,g,b,v,A,y,O,R,G,le=[{version:"1.1"},{id:"Capa_1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{width:"306px"},{height:"306px"},{viewBox:"0 0 306 306"},{style:"enable-background:new 0 0 306 306;"},{"xml:space":"preserve"},r[0]],ee={};for(let P=0;P<le.length;P+=1)ee=$(ee,le[P]);return{c(){e=E("svg"),t=E("g"),n=E("g"),i=E("polygon"),l=E("g"),s=E("g"),c=E("g"),o=E("g"),a=E("g"),f=E("g"),u=E("g"),g=E("g"),b=E("g"),v=E("g"),A=E("g"),y=E("g"),O=E("g"),R=E("g"),G=E("g"),this.h()},l(P){e=S(P,"svg",{version:!0,id:!0,xmlns:!0,"xmlns:xlink":!0,x:!0,y:!0,width:!0,height:!0,viewBox:!0,style:!0,"xml:space":!0});var M=C(e);t=S(M,"g",{});var U=C(t);n=S(U,"g",{id:!0});var fe=C(n);i=S(fe,"polygon",{points:!0}),C(i).forEach(h),fe.forEach(h),U.forEach(h),l=S(M,"g",{});var B=C(l);B.forEach(h),s=S(M,"g",{});var ve=C(s);ve.forEach(h),c=S(M,"g",{});var me=C(c);me.forEach(h),o=S(M,"g",{});var we=C(o);we.forEach(h),a=S(M,"g",{});var Ne=C(a);Ne.forEach(h),f=S(M,"g",{});var J=C(f);J.forEach(h),u=S(M,"g",{});var V=C(u);V.forEach(h),g=S(M,"g",{});var ue=C(g);ue.forEach(h),b=S(M,"g",{});var Ue=C(b);Ue.forEach(h),v=S(M,"g",{});var ze=C(v);ze.forEach(h),A=S(M,"g",{});var I=C(A);I.forEach(h),y=S(M,"g",{});var _e=C(y);_e.forEach(h),O=S(M,"g",{});var ke=C(O);ke.forEach(h),R=S(M,"g",{});var ce=C(R);ce.forEach(h),G=S(M,"g",{});var oe=C(G);oe.forEach(h),M.forEach(h),this.h()},h(){d(i,"points","153,58.65 0,211.65 35.7,247.35 153,130.05 270.3,247.35 306,211.65 		"),d(n,"id","expand-less"),ye(e,ee)},m(P,M){Ve(P,e,M),T(e,t),T(t,n),T(n,i),T(e,l),T(e,s),T(e,c),T(e,o),T(e,a),T(e,f),T(e,u),T(e,g),T(e,b),T(e,v),T(e,A),T(e,y),T(e,O),T(e,R),T(e,G)},p(P,[M]){ye(e,ee=Xe(le,[{version:"1.1"},{id:"Capa_1"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{width:"306px"},{height:"306px"},{viewBox:"0 0 306 306"},{style:"enable-background:new 0 0 306 306;"},{"xml:space":"preserve"},M&1&&P[0]]))},i:j,o:j,d(P){P&&h(e)}}}function js(r,e,t){return r.$$set=n=>{t(0,e=$($({},e),pe(n)))},e=pe(e),[e]}class Bs extends Ke{constructor(e){super();Me(this,e,js,Hs,He,{})}}function fi(r,e,t){const n=r.slice();return n[104]=e[t],n}function ui(r){let e,t,n;return{c(){e=w("link"),d(e,"rel","stylesheet"),d(e,"href",r[21])},m(i,l){x(i,e,l),t||(n=[he(e,"load",r[85]),he(e,"error",r[86])],t=!0)},p(i,l){l[0]&2097152&&d(e,"href",i[21])},d(i){i&&h(e),t=!1,et(n)}}}function di(r){let e,t,n,i,l;return t=new pn({props:{class:"nylas-composer__spinner"}}),{c(){e=w("div"),nt(t.$$.fragment),n=H(),i=w("div"),i.textContent="Loading",d(e,"class","nylas-composer nylas-composer__loader")},m(s,c){x(s,e,c),rt(t,e,null),p(e,n),p(e,i),l=!0},i(s){l||(W(t.$$.fragment,s),l=!0)},o(s){re(t.$$.fragment,s),l=!1},d(s){s&&h(e),tt(t)}}}function hi(r){let e,t,n,i=r[8].show_header&&mi(r),l=!r[8].minimized&&gi(r);return{c(){e=w("div"),i&&i.c(),t=H(),l&&l.c(),d(e,"class","nylas-composer"),d(e,"data-cy","nylas-composer"),Fe(e,"minimized",r[8].minimized)},m(s,c){x(s,e,c),i&&i.m(e,null),p(e,t),l&&l.m(e,null),n=!0},p(s,c){s[8].show_header?i?(i.p(s,c),c[0]&256&&W(i,1)):(i=mi(s),i.c(),W(i,1),i.m(e,t)):i&&(We(),re(i,1,1,()=>{i=null}),Ze()),s[8].minimized?l&&(We(),re(l,1,1,()=>{l=null}),Ze()):l?(l.p(s,c),c[0]&256&&W(l,1)):(l=gi(s),l.c(),W(l,1),l.m(e,null)),c[0]&256&&Fe(e,"minimized",s[8].minimized)},i(s){n||(W(i),W(l),n=!0)},o(s){re(i),re(l),n=!1},d(s){s&&h(e),i&&i.d(),l&&l.d()}}}function mi(r){let e,t,n,i,l,s,c,o,a=r[8].show_minimize_button&&_i(r),f=r[8].show_close_button&&pi(r);return{c(){e=w("header"),t=w("span"),n=te(r[14]),i=H(),l=w("div"),a&&a.c(),s=H(),f&&f.c(),d(e,"class",c=r[8].minimized?"minimized":void 0)},m(u,g){x(u,e,g),p(e,t),p(t,n),p(e,i),p(e,l),a&&a.m(l,null),p(l,s),f&&f.m(l,null),o=!0},p(u,g){(!o||g[0]&16384)&&Ae(n,u[14]),u[8].show_minimize_button?a?(a.p(u,g),g[0]&256&&W(a,1)):(a=_i(u),a.c(),W(a,1),a.m(l,s)):a&&(We(),re(a,1,1,()=>{a=null}),Ze()),u[8].show_close_button?f?(f.p(u,g),g[0]&256&&W(f,1)):(f=pi(u),f.c(),W(f,1),f.m(l,null)):f&&(We(),re(f,1,1,()=>{f=null}),Ze()),(!o||g[0]&256&&c!==(c=u[8].minimized?"minimized":void 0))&&d(e,"class",c)},i(u){o||(W(a),W(f),o=!0)},o(u){re(a),re(f),o=!1},d(u){u&&h(e),a&&a.d(),f&&f.d()}}}function _i(r){let e,t,n,i;const l=[Gs,Us],s=[];function c(o,a){return o[8].minimized?0:1}return e=c(r),t=s[e]=l[e](r),{c(){t.c(),n=st()},m(o,a){s[e].m(o,a),x(o,n,a),i=!0},p(o,a){let f=e;e=c(o),e===f?s[e].p(o,a):(We(),re(s[f],1,1,()=>{s[f]=null}),Ze(),t=s[e],t?t.p(o,a):(t=s[e]=l[e](o),t.c()),W(t,1),t.m(n.parentNode,n))},i(o){i||(W(t),i=!0)},o(o){re(t),i=!1},d(o){s[e].d(o),o&&h(n)}}}function Us(r){let e,t,n,i,l,s,c;return i=new Ns({props:{class:"MinimizeIcon"}}),{c(){e=w("button"),t=w("span"),t.textContent="Collapse Composer",n=H(),nt(i.$$.fragment),d(t,"class","sr-only"),d(e,"class","composer-btn")},m(o,a){x(o,e,a),p(e,t),p(e,n),rt(i,e,null),l=!0,s||(c=he(e,"click",r[88]),s=!0)},p:j,i(o){l||(W(i.$$.fragment,o),l=!0)},o(o){re(i.$$.fragment,o),l=!1},d(o){o&&h(e),tt(i),s=!1,c()}}}function Gs(r){let e,t,n,i,l,s,c;return i=new Bs({props:{class:"ExpandIcon"}}),{c(){e=w("button"),t=w("span"),t.textContent="Expand Composer",n=H(),nt(i.$$.fragment),d(t,"class","sr-only"),d(e,"class","composer-btn")},m(o,a){x(o,e,a),p(e,t),p(e,n),rt(i,e,null),l=!0,s||(c=he(e,"click",r[87]),s=!0)},p:j,i(o){l||(W(i.$$.fragment,o),l=!0)},o(o){re(i.$$.fragment,o),l=!1},d(o){o&&h(e),tt(i),s=!1,c()}}}function pi(r){let e,t,n,i,l,s,c;return i=new ir({props:{class:"CloseIcon"}}),{c(){e=w("button"),t=w("span"),t.textContent="Close Composer",n=H(),nt(i.$$.fragment),d(t,"class","sr-only"),d(e,"class","composer-btn")},m(o,a){x(o,e,a),p(e,t),p(e,n),rt(i,e,null),l=!0,s||(c=he(e,"click",r[6]),s=!0)},p:j,i(o){l||(W(i.$$.fragment,o),l=!0)},o(o){re(i.$$.fragment,o),l=!1},d(o){o&&h(e),tt(i),s=!1,c()}}}function gi(r){let e,t,n,i,l,s,c,o,a,f,u,g,b,v,A,y,O,R,G,le,ee,P,M,U,fe,B,ve,me,we,Ne,J,V,ue,Ue,ze,I,_e,ke,ce,oe,se,Re,L,ae=r[8].show_from&&bi(r),Te=r[8].show_to&&wi(r),ne=r[8].show_cc&&yi(r),xe=r[8].show_bcc&&ki(r),Ce=r[8].show_subject&&xi(r),Ge=r[26].length&&Ei(r),Oe=r[8].show_save_as_draft&&Si(r),Le=r[8].show_attachment_button&&(r[0]||r[5])&&Ti(r),je=r[11]&&Ai(r),D=r[7].send_at&&!r[16]&&!r[17]&&Oi(r),F=r[16]&&Mi(),Y=r[17]&&Ni(),ie=r[18]&&Di(),be=r[19]&&zi();return{c(){e=w("main"),t=w("div"),ae&&ae.c(),n=H(),Te&&Te.c(),i=H(),l=w("div"),s=w("button"),c=te("CC"),a=H(),f=w("button"),u=te("BCC"),b=H(),ne&&ne.c(),v=H(),xe&&xe.c(),A=H(),Ce&&Ce.c(),y=H(),O=w("nylas-html-editor"),P=H(),Ge&&Ge.c(),M=H(),U=w("footer"),fe=w("div"),B=w("button"),ve=te(r[20]),we=H(),Oe&&Oe.c(),Ne=H(),Le&&Le.c(),J=H(),V=w("form"),ue=w("input"),Ue=H(),je&&je.c(),ze=H(),D&&D.c(),I=H(),F&&F.c(),_e=H(),Y&&Y.c(),ke=H(),ie&&ie.c(),ce=H(),be&&be.c(),oe=st(),d(s,"data-cy","toggle-cc-field-btn"),d(s,"type","button"),s.hidden=o=r[8].show_cc&&!r[8].show_cc_button&&!!r[8].show_to,d(f,"data-cy","toggle-bcc-field-btn"),d(f,"type","button"),f.hidden=g=r[8].show_bcc&&!r[8].show_bcc_button&&!!r[8].show_to,d(l,"class","addons"),d(t,"class","contacts-wrapper"),q(O,"data-cy","html-editor"),q(O,"html",R=r[7].body||r[4]),q(O,"onchange",r[29]),q(O,"focus_body_onload",G=r[8].focus_body_onload),q(O,"replace_fields",le=r[8].replace_fields),q(O,"show_editor_toolbar",ee=r[8].show_editor_toolbar),d(B,"class","send-btn"),B.disabled=me=!r[24],d(fe,"class","btn-group"),ue.hidden=!0,d(ue,"type","file"),d(ue,"id","file-upload"),d(V,"action",""),d(V,"enctype","multipart/form-data")},m(k,K){x(k,e,K),p(e,t),ae&&ae.m(t,null),p(t,n),Te&&Te.m(t,null),p(t,i),p(t,l),p(l,s),p(s,c),r[89](s),p(l,a),p(l,f),p(f,u),r[91](f),p(e,b),ne&&ne.m(e,null),p(e,v),xe&&xe.m(e,null),p(e,A),Ce&&Ce.m(e,null),p(e,y),p(e,O),p(e,P),Ge&&Ge.m(e,null),x(k,M,K),x(k,U,K),p(U,fe),p(fe,B),p(B,ve),p(U,we),Oe&&Oe.m(U,null),p(U,Ne),Le&&Le.m(U,null),p(U,J),p(U,V),p(V,ue),x(k,Ue,K),je&&je.m(k,K),x(k,ze,K),D&&D.m(k,K),x(k,I,K),F&&F.m(k,K),x(k,_e,K),Y&&Y.m(k,K),x(k,ke,K),ie&&ie.m(k,K),x(k,ce,K),be&&be.m(k,K),x(k,oe,K),se=!0,Re||(L=[he(s,"click",r[90]),he(f,"click",r[92]),he(O,"keydown",r[40]),he(B,"click",r[37]),he(ue,"change",r[34])],Re=!0)},p(k,K){k[8].show_from?ae?ae.p(k,K):(ae=bi(k),ae.c(),ae.m(t,n)):ae&&(ae.d(1),ae=null),k[8].show_to?Te?Te.p(k,K):(Te=wi(k),Te.c(),Te.m(t,i)):Te&&(Te.d(1),Te=null),(!se||K[0]&256&&o!==(o=k[8].show_cc&&!k[8].show_cc_button&&!!k[8].show_to))&&(s.hidden=o),(!se||K[0]&256&&g!==(g=k[8].show_bcc&&!k[8].show_bcc_button&&!!k[8].show_to))&&(f.hidden=g),k[8].show_cc?ne?(ne.p(k,K),K[0]&256&&W(ne,1)):(ne=yi(k),ne.c(),W(ne,1),ne.m(e,v)):ne&&(We(),re(ne,1,1,()=>{ne=null}),Ze()),k[8].show_bcc?xe?(xe.p(k,K),K[0]&256&&W(xe,1)):(xe=ki(k),xe.c(),W(xe,1),xe.m(e,A)):xe&&(We(),re(xe,1,1,()=>{xe=null}),Ze()),k[8].show_subject?Ce?Ce.p(k,K):(Ce=xi(k),Ce.c(),Ce.m(e,y)):Ce&&(Ce.d(1),Ce=null),(!se||K[0]&144&&R!==(R=k[7].body||k[4]))&&q(O,"html",R),(!se||K[0]&256&&G!==(G=k[8].focus_body_onload))&&q(O,"focus_body_onload",G),(!se||K[0]&256&&le!==(le=k[8].replace_fields))&&q(O,"replace_fields",le),(!se||K[0]&256&&ee!==(ee=k[8].show_editor_toolbar))&&q(O,"show_editor_toolbar",ee),k[26].length?Ge?Ge.p(k,K):(Ge=Ei(k),Ge.c(),Ge.m(e,null)):Ge&&(Ge.d(1),Ge=null),(!se||K[0]&1048576)&&Ae(ve,k[20]),(!se||K[0]&16777216&&me!==(me=!k[24]))&&(B.disabled=me),k[8].show_save_as_draft?Oe?(Oe.p(k,K),K[0]&256&&W(Oe,1)):(Oe=Si(k),Oe.c(),W(Oe,1),Oe.m(U,Ne)):Oe&&(We(),re(Oe,1,1,()=>{Oe=null}),Ze()),k[8].show_attachment_button&&(k[0]||k[5])?Le?(Le.p(k,K),K[0]&289&&W(Le,1)):(Le=Ti(k),Le.c(),W(Le,1),Le.m(U,J)):Le&&(We(),re(Le,1,1,()=>{Le=null}),Ze()),k[11]?je?je.p(k,K):(je=Ai(k),je.c(),je.m(ze.parentNode,ze)):je&&(je.d(1),je=null),k[7].send_at&&!k[16]&&!k[17]?D?D.p(k,K):(D=Oi(k),D.c(),D.m(I.parentNode,I)):D&&(D.d(1),D=null),k[16]?F||(F=Mi(),F.c(),F.m(_e.parentNode,_e)):F&&(F.d(1),F=null),k[17]?Y||(Y=Ni(),Y.c(),Y.m(ke.parentNode,ke)):Y&&(Y.d(1),Y=null),k[18]?ie||(ie=Di(),ie.c(),ie.m(ce.parentNode,ce)):ie&&(ie.d(1),ie=null),k[19]?be||(be=zi(),be.c(),be.m(oe.parentNode,oe)):be&&(be.d(1),be=null)},i(k){se||(W(ne),W(xe),W(Oe),W(Le),se=!0)},o(k){re(ne),re(xe),re(Oe),re(Le),se=!1},d(k){k&&h(e),ae&&ae.d(),Te&&Te.d(),r[89](null),r[91](null),ne&&ne.d(),xe&&xe.d(),Ce&&Ce.d(),Ge&&Ge.d(),k&&h(M),k&&h(U),Oe&&Oe.d(),Le&&Le.d(),k&&h(Ue),je&&je.d(k),k&&h(ze),D&&D.d(k),k&&h(I),F&&F.d(k),k&&h(_e),Y&&Y.d(k),k&&h(ke),ie&&ie.d(k),k&&h(ce),be&&be.d(k),k&&h(oe),Re=!1,et(L)}}}function bi(r){let e,t,n,i,l,s,c,o=r[7].from.length>0&&vi(r);return{c(){e=w("div"),t=w("div"),n=w("div"),n.textContent="From:",i=H(),l=w("div"),s=w("div"),c=w("span"),o&&o.c(),d(n,"class","contacts-placeholder"),d(c,"class","contact-item__name"),d(s,"class","contact-item"),d(s,"data-cy","from-field"),d(l,"class","contacts-results-inner"),d(t,"class","contact-from"),d(e,"class","contacts-container")},m(a,f){x(a,e,f),p(e,t),p(t,n),p(t,i),p(t,l),p(l,s),p(s,c),o&&o.m(c,null)},p(a,f){a[7].from.length>0?o?o.p(a,f):(o=vi(a),o.c(),o.m(c,null)):o&&(o.d(1),o=null)},d(a){a&&h(e),o&&o.d()}}}function vi(r){let e;function t(l,s){return l[7].from[0].name?Ws:Js}let n=t(r),i=n(r);return{c(){i.c(),e=st()},m(l,s){i.m(l,s),x(l,e,s)},p(l,s){n===(n=t(l))&&i?i.p(l,s):(i.d(1),i=n(l),i&&(i.c(),i.m(e.parentNode,e)))},d(l){i.d(l),l&&h(e)}}}function Js(r){let e=r[7].from[0].email+"",t;return{c(){t=te(e)},m(n,i){x(n,t,i)},p(n,i){i[0]&128&&e!==(e=n[7].from[0].email+"")&&Ae(t,e)},d(n){n&&h(t)}}}function Ws(r){let e,t=r[7].from[0].name+"",n,i,l=`<${r[7].from[0].email}>`,s;return{c(){e=w("strong"),n=te(t),i=H(),s=te(l)},m(c,o){x(c,e,o),p(e,n),x(c,i,o),x(c,s,o)},p(c,o){o[0]&128&&t!==(t=c[7].from[0].name+"")&&Ae(n,t),o[0]&128&&l!==(l=`<${c[7].from[0].email}>`)&&Ae(s,l)},d(c){c&&h(e),c&&h(i),c&&h(s)}}}function wi(r){let e,t;return{c(){e=w("nylas-contacts-search"),q(e,"data-cy","to-field"),q(e,"placeholder","To:"),q(e,"change",r[30]("to")),q(e,"contacts",r[1]),q(e,"value",t=r[7].to)},m(n,i){x(n,e,i)},p(n,i){i[0]&2&&q(e,"contacts",n[1]),i[0]&128&&t!==(t=n[7].to)&&q(e,"value",t)},d(n){n&&h(e)}}}function yi(r){let e,t,n,i,l,s,c,o,a;return s=new ir({props:{class:"CloseIcon"}}),{c(){e=w("div"),t=w("nylas-contacts-search"),i=H(),l=w("button"),nt(s.$$.fragment),q(t,"data-cy","cc-field"),q(t,"placeholder","CC:"),q(t,"contacts",r[2]),q(t,"value",n=r[7].cc),q(t,"change",r[30]("cc")),d(l,"type","button"),d(l,"class","composer-btn cc-btn"),d(l,"aria-label","remove carbon copy field"),d(e,"class","cc-container")},m(f,u){x(f,e,u),p(e,t),p(e,i),p(e,l),rt(s,l,null),c=!0,o||(a=he(l,"click",r[93]),o=!0)},p(f,u){(!c||u[0]&4)&&q(t,"contacts",f[2]),(!c||u[0]&128&&n!==(n=f[7].cc))&&q(t,"value",n)},i(f){c||(W(s.$$.fragment,f),c=!0)},o(f){re(s.$$.fragment,f),c=!1},d(f){f&&h(e),tt(s),o=!1,a()}}}function ki(r){let e,t,n,i,l,s,c,o,a;return s=new ir({props:{class:"CloseIcon"}}),{c(){e=w("div"),t=w("nylas-contacts-search"),i=H(),l=w("button"),nt(s.$$.fragment),q(t,"data-cy","bcc-field"),q(t,"placeholder","BCC:"),q(t,"contacts",r[3]),q(t,"value",n=r[7].bcc),q(t,"change",r[30]("bcc")),d(l,"type","button"),d(l,"class","composer-btn cc-btn"),d(l,"aria-label","remove blind carbon copy field"),d(e,"class","cc-container")},m(f,u){x(f,e,u),p(e,t),p(e,i),p(e,l),rt(s,l,null),c=!0,o||(a=he(l,"click",r[94]),o=!0)},p(f,u){(!c||u[0]&8)&&q(t,"contacts",f[3]),(!c||u[0]&128&&n!==(n=f[7].bcc))&&q(t,"value",n)},i(f){c||(W(s.$$.fragment,f),c=!0)},o(f){re(s.$$.fragment,f),c=!1},d(f){f&&h(e),tt(s),o=!1,a()}}}function xi(r){let e,t,n,i,l,s;return{c(){e=w("label"),t=w("span"),t.textContent="Email subject",n=H(),i=w("input"),d(t,"class","sr-only"),d(i,"type","text"),d(i,"placeholder","Subject"),d(i,"class","subject"),i.value=r[14],d(i,"name","subject")},m(c,o){x(c,e,o),p(e,t),p(e,n),p(e,i),l||(s=he(i,"input",r[28]),l=!0)},p(c,o){o[0]&16384&&i.value!==c[14]&&(i.value=c[14])},d(c){c&&h(e),l=!1,s()}}}function Ei(r){let e,t,n,i,l=r[26],s=[];for(let c=0;c<l.length;c+=1)s[c]=Ci(fi(r,l,c));return{c(){e=w("div"),t=w("div"),n=w("div"),n.textContent="Attachments:",i=H();for(let c=0;c<s.length;c+=1)s[c].c();d(n,"class","attachments-caption"),d(t,"class","attachments-wrapper"),d(e,"class","nylas-attachments")},m(c,o){x(c,e,o),p(e,t),p(t,n),p(t,i);for(let a=0;a<s.length;a+=1)s[a].m(t,null)},p(c,o){if(o[0]&67108864|o[1]&16){l=c[26];let a;for(a=0;a<l.length;a+=1){const f=fi(c,l,a);s[a]?s[a].p(f,o):(s[a]=Ci(f),s[a].c(),s[a].m(t,null))}for(;a<s.length;a+=1)s[a].d(1);s.length=l.length}},d(c){c&&h(e),jr(s,c)}}}function Ci(r){let e,t;return{c(){e=w("nylas-composer-attachment"),q(e,"attachment",t=r[104]),q(e,"remove",r[35])},m(n,i){x(n,e,i)},p(n,i){i[0]&67108864&&t!==(t=n[104])&&q(e,"attachment",t)},d(n){n&&h(e)}}}function Si(r){let e,t,n,i,l,s,c;return t=new Ps({props:{class:"FooterIcon"}}),{c(){e=w("button"),nt(t.$$.fragment),n=H(),i=w("span"),i.textContent="Save Draft",d(i,"class","sr-only"),d(e,"for","save-draft"),d(e,"class","composer-btn save-draft"),d(e,"title","Save Email As Draft")},m(o,a){x(o,e,a),rt(t,e,null),p(e,n),p(e,i),l=!0,s||(c=he(e,"click",r[38]),s=!0)},p:j,i(o){l||(W(t.$$.fragment,o),l=!0)},o(o){re(t.$$.fragment,o),l=!1},d(o){o&&h(e),tt(t),s=!1,c()}}}function Ti(r){let e,t,n,i,l,s,c,o;t=new Rs({props:{class:"FooterIcon"}});let a=r[8].show_max_file_size&&Li(r);return{c(){e=w("label"),nt(t.$$.fragment),n=H(),i=w("span"),i.textContent="Attach Files",s=H(),a&&a.c(),c=st(),d(i,"class","sr-only"),d(e,"for","file-upload"),d(e,"class","composer-btn file-upload"),d(e,"title",l="Attach Files (up to "+r[15]+"MB)"),d(e,"tabindex","0")},m(f,u){x(f,e,u),rt(t,e,null),p(e,n),p(e,i),x(f,s,u),a&&a.m(f,u),x(f,c,u),o=!0},p(f,u){(!o||u[0]&32768&&l!==(l="Attach Files (up to "+f[15]+"MB)"))&&d(e,"title",l),f[8].show_max_file_size?a?a.p(f,u):(a=Li(f),a.c(),a.m(c.parentNode,c)):a&&(a.d(1),a=null)},i(f){o||(W(t.$$.fragment,f),o=!0)},o(f){re(t.$$.fragment,f),o=!1},d(f){f&&h(e),tt(t),f&&h(s),a&&a.d(f),f&&h(c)}}}function Li(r){let e,t,n,i,l;return{c(){e=w("div"),t=w("span"),n=te("Max file size: "),i=te(r[15]),l=te("MB"),d(e,"class","file-size")},m(s,c){x(s,e,c),p(e,t),p(t,n),p(t,i),p(t,l)},p(s,c){c[0]&32768&&Ae(i,s[15])},d(s){s&&h(e)}}}function Ai(r){let e;return{c(){e=w("nylas-composer-datepicker-modal"),q(e,"close",r[33]),q(e,"schedule",r[31])},m(t,n){x(t,e,n)},p:j,d(t){t&&h(e)}}}function Oi(r){let e,t,n,i=ci(new Date(r[25]))+"",l;return{c(){e=w("nylas-composer-alert-bar"),t=te(`Send scheduled for
          `),n=w("span"),l=te(i),q(e,"type","info"),q(e,"dismissible",!0),q(e,"ondismiss",r[32])},m(s,c){x(s,e,c),p(e,t),p(e,n),p(n,l)},p(s,c){c[0]&33554432&&i!==(i=ci(new Date(s[25]))+"")&&Ae(l,i)},d(s){s&&h(e)}}}function Mi(r){let e;return{c(){e=w("nylas-composer-alert-bar"),e.textContent="Error: Failed to send the message.",q(e,"type","danger"),q(e,"dismissible",!0)},m(t,n){x(t,e,n)},d(t){t&&h(e)}}}function Ni(r){let e;return{c(){e=w("nylas-composer-alert-bar"),e.textContent="Message sent successfully!",q(e,"type","success"),q(e,"dismissible",!0)},m(t,n){x(t,e,n)},d(t){t&&h(e)}}}function Di(r){let e;return{c(){e=w("nylas-composer-alert-bar"),e.textContent="Error: Failed to save the draft.",q(e,"type","danger"),q(e,"dismissible",!0)},m(t,n){x(t,e,n)},d(t){t&&h(e)}}}function zi(r){let e;return{c(){e=w("nylas-composer-alert-bar"),e.textContent="Message draft saved successfully!",q(e,"type","success"),q(e,"dismissible",!0)},m(t,n){x(t,e,n)},d(t){t&&h(e)}}}function Zs(r){let e,t,n,i,l,s,c=r[21]&&ui(r),o=r[13]&&r[10]&&di(),a=r[13]&&r[12]&&!r[10]&&hi(r);return{c(){e=w("nylas-error"),t=H(),c&&c.c(),n=H(),o&&o.c(),i=H(),a&&a.c(),l=st(),this.c=j,q(e,"id",r[0])},m(f,u){x(f,e,u),x(f,t,u),c&&c.m(f,u),x(f,n,u),o&&o.m(f,u),x(f,i,u),a&&a.m(f,u),x(f,l,u),s=!0},p(f,u){(!s||u[0]&1)&&q(e,"id",f[0]),f[21]?c?c.p(f,u):(c=ui(f),c.c(),c.m(n.parentNode,n)):c&&(c.d(1),c=null),f[13]&&f[10]?o?u[0]&9216&&W(o,1):(o=di(),o.c(),W(o,1),o.m(i.parentNode,i)):o&&(We(),re(o,1,1,()=>{o=null}),Ze()),f[13]&&f[12]&&!f[10]?a?(a.p(f,u),u[0]&13312&&W(a,1)):(a=hi(f),a.c(),W(a,1),a.m(l.parentNode,l)):a&&(We(),re(a,1,1,()=>{a=null}),Ze())},i(f){s||(W(o),W(a),s=!0)},o(f){re(o),re(a),s=!1},d(f){f&&h(e),f&&h(t),c&&c.d(f),f&&h(n),o&&o.d(f),f&&h(i),a&&a.d(f),f&&h(l)}}}function Ys(r,e,t){let n,i,l,s,c;pr(r,us,_=>t(97,l=_)),pr(r,Gr,_=>t(84,s=_));var o=this&&this.__awaiter||function(_,Q,Ee,Be){function Nt(ut){return ut instanceof Ee?ut:new Ee(function(Bt){Bt(ut)})}return new(Ee||(Ee=Promise))(function(ut,Bt){function zr(bt){try{Ut(Be.next(bt))}catch(Gt){Bt(Gt)}}function Rr(bt){try{Ut(Be.throw(bt))}catch(Gt){Bt(Gt)}}function Ut(bt){bt.done?ut(bt.value):Nt(bt.value).then(zr,Rr)}Ut((Be=Be.apply(_,Q||[])).next())})},a,f,u;const g=ds(ln());let{id:b}=e,{access_token:v=""}=e,{value:A}=e,{to:y=[]}=e,{from:O=[]}=e,{cc:R=[]}=e,{bcc:G=[]}=e,{send:le}=e,{save:ee}=e,{change:P=null}=e,{beforeSend:M}=e,{afterSendSuccess:U=null}=e,{afterSendError:fe=null}=e,{afterSaveSuccess:B=null}=e,{afterSaveError:ve=null}=e,{template:me=""}=e,{tracking:we=null}=e,{minimized:Ne}=e,{reset_after_send:J}=e,{reset_after_close:V}=e,{show_from:ue}=e,{show_to:Ue}=e,{show_header:ze}=e,{show_subject:I}=e,{show_close_button:_e}=e,{show_minimize_button:ke}=e,{show_cc:ce}=e,{show_bcc:oe}=e,{show_cc_button:se}=e,{show_bcc_button:Re}=e,{show_attachment_button:L}=e,{max_file_size:ae}=e,{show_max_file_size:Te}=e,{show_save_as_draft:ne}=e,{show_editor_toolbar:xe}=e,{theme:Ce}=e,{replace_fields:Ge=null}=e,{beforeFileUpload:Oe=null}=e,{afterFileUploadSuccess:Le=null}=e,{afterFileUploadError:je=null}=e,{uploadFile:D=null}=e,{beforeFileRemove:F=null}=e,{afterFileRemove:Y=null}=e,{focus_body_onload:ie}=e;const be={show_to:!0,show_from:!0,minimized:!1,reset_after_send:!0,show_header:!1,show_subject:!1,show_close_button:!0,show_minimize_button:!0,show_cc:!0,show_bcc:!0,show_cc_button:!0,show_bcc_button:!0,show_attachment_button:!0,max_file_size:0,show_max_file_size:!0,show_save_as_draft:!0,show_editor_toolbar:!0,theme:"auto",focus_body_onload:!1};let k=JSON.parse(JSON.stringify(Sr));const K=(_,Q)=>{t(7,k=Object.assign(Object.assign({},k),{[_]:Q}))},ct=_=>{t(7,k=Object.assign(Object.assign({},k),_))},Qe=Ft(JSON.parse(JSON.stringify(li)));pr(r,Qe,_=>t(26,c=_));const Lr=()=>{t(13,lr=!0),de.reset_after_send&&t(17,pt=!1),g("composerOpened",{})},Wr=()=>{const _=k;_.active=!1,t(13,lr=!1),(de.reset_after_send||de.reset_after_close)&&(t(17,pt=!1),t(19,yt=!1)),de.reset_after_close&&(t(7,k=Object.assign(Object.assign({},k),Sr)),Tr(Qe)),_.snippet=ul(_.body),Qe.update(()=>[]),g("composerClosed",{message:_})};let or=!1,de=Jr({},{},be),St,Tt=!1,Zt=!1,lr=!0,Ar=(f=(a=de.value)===null||a===void 0?void 0:a.subject)!==null&&f!==void 0?f:k.subject;to(()=>o(void 0,void 0,void 0,function*(){if(t(10,or=!0),yield wr(),t(81,St=(yield l[JSON.stringify({component_id:b,access_token:v})])||{}),St&&b){const _=yield Wl({component_id:b,access_token:v}).catch(It);_&&K("from",[{name:_.name,email:_.email_address}])}t(8,de=Jr(e,St,be)),we&&K("tracking",we),t(10,or=!1),t(12,Zt=!0)}));let ft=e,mt;const _t=_=>{if(!_.target)return;const Q=_.target;K(Q.name,Q.value)},Or=_=>K("body",_),Yt=_=>Q=>K(_,Q),sr=_=>{t(11,Tt=!1),K("send_at",_)},Zr=()=>{K("send_at",null)},Yr=()=>{t(11,Tt=!1)};function Vr(_){return o(this,void 0,void 0,function*(){const Q=_.target;if(!(Q==null?void 0:Q.files))return;const Ee=Q.files[0];try{if(si(Qe,{filename:Ee.name,size:Ee.size,content_type:Ee.type,loading:!0,error:!1}),Q.value="",Oe&&Oe(Ee),mt>0&&Ee.size>=mt*1e6)throw`Maximum file size is ${mt}MB. Please upload a different file.`;const Be=D?yield D(Ee):b&&(yield Gl(b,Ee,v));ai(Qe,Ee.name,{loading:!1,id:Be.id}),Be.id&&ct({file_ids:[...k.file_ids,Be.id],files:[...k.files||[],Object.assign(Object.assign({},Be),{content_disposition:"attachment"})]}),Le&&Le(Be)}catch(Be){ai(Qe,Ee.name,{loading:!1,error:!0,errorMessage:typeof Be=="string"?Be:void 0}),je&&je(Be)}})}const Xr=_=>{var Q;F&&F(_),As(Qe,_),_.id&&ct({file_ids:k.file_ids.filter(Ee=>Ee!==_.id),files:(Q=k.files)===null||Q===void 0?void 0:Q.filter(Ee=>Ee.id!==_.id)}),Y&&Y(_)},Vt=_=>{t(8,de.minimized=_,de),t(9,ft=de),g(de.minimized?"composerMinimized":"composerMaximized",{})};let Je=!1,Lt=!1,pt=!1;const Mr=()=>o(void 0,void 0,void 0,function*(){t(82,Je=!0),t(16,Lt=!1),t(17,pt=!1);let _=k;if(M){const Q=M(k);Q&&(_=Q)}if(le)le(_).then(Q=>{U&&U(Q),t(82,Je=!1),t(17,pt=!0)}).catch(Q=>{fe&&fe(Q),de.reset_after_send&&(t(7,k=Object.assign(Object.assign({},k),Sr)),Tr(Qe)),t(82,Je=!1),t(16,Lt=!0)});else if(b){if(_.object==="draft"){const Q=yield Zn(b,_,v);Q.id&&(ct(Object.assign({},Q)),_=Object.assign({draft_id:Q.id},Q))}console.log(JSON.stringify(_,null,2)),Ul(b,_,v).then(Q=>{U&&U(Q),de.reset_after_send&&(t(7,k=Object.assign(Object.assign({},k),Sr)),Tr(Qe)),t(82,Je=!1),t(17,pt=!0),g("messageSent",{message:Q})}).catch(Q=>{fe&&fe(Q),t(82,Je=!1),t(16,Lt=!0)})}});let gt=!1,ar=!1,yt=!1;const cr=()=>o(void 0,void 0,void 0,function*(){t(83,gt=!0),t(18,ar=!1),t(19,yt=!1);let _=k;try{if(ee){const Q=yield ee(_);B&&B(Q),t(83,gt=!1),t(19,yt=!0)}else if(b)if(_.id&&_.version!=null){const Q=yield Zn(b,_,v);Q.id&&ct(Object.assign({},Q)),B&&B(Q),t(83,gt=!1),t(19,yt=!0),g("draftUpdated",{message:Q})}else{const Q=yield Jl(b,_,v);Q.id&&ct(Object.assign({},Q)),B&&B(Q),t(83,gt=!1),t(19,yt=!0),g("draftSaved",{message:Q})}}catch(Q){ve&&ve(Q),t(83,gt=!1),t(18,ar=!0)}});let Ie="Send",Xt,Pe,Ht;const De=_=>o(void 0,void 0,void 0,function*(){yield wr(),_&&(_.setAttribute("tabindex","-1"),_.focus(),_.removeAttribute("tabindex"))}),jt=_=>{_.key==="Enter"&&_.metaKey&&i&&Mr()},fr=()=>t(12,Zt=!0),Nr=()=>t(12,Zt=!0),ur=()=>Vt(!1),Dr=()=>Vt(!0);function At(_){Ct[_?"unshift":"push"](()=>{Ht=_,t(23,Ht)})}const Ot=()=>{t(8,de.show_cc=!0,de),t(9,ft=de)};function dr(_){Ct[_?"unshift":"push"](()=>{Pe=_,t(22,Pe)})}const hr=()=>{t(8,de.show_bcc=!0,de),t(9,ft=de)},Mt=()=>{De(Ht),t(8,de.show_cc=!1,de),t(9,ft=de)},Kt=()=>{De(Pe),t(8,de.show_bcc=!1,de),t(9,ft=de)};return r.$$set=_=>{t(103,e=$($({},e),pe(_))),"id"in _&&t(0,b=_.id),"access_token"in _&&t(41,v=_.access_token),"value"in _&&t(42,A=_.value),"to"in _&&t(1,y=_.to),"from"in _&&t(43,O=_.from),"cc"in _&&t(2,R=_.cc),"bcc"in _&&t(3,G=_.bcc),"send"in _&&t(44,le=_.send),"save"in _&&t(45,ee=_.save),"change"in _&&t(46,P=_.change),"beforeSend"in _&&t(47,M=_.beforeSend),"afterSendSuccess"in _&&t(48,U=_.afterSendSuccess),"afterSendError"in _&&t(49,fe=_.afterSendError),"afterSaveSuccess"in _&&t(50,B=_.afterSaveSuccess),"afterSaveError"in _&&t(51,ve=_.afterSaveError),"template"in _&&t(4,me=_.template),"tracking"in _&&t(52,we=_.tracking),"minimized"in _&&t(53,Ne=_.minimized),"reset_after_send"in _&&t(54,J=_.reset_after_send),"reset_after_close"in _&&t(55,V=_.reset_after_close),"show_from"in _&&t(56,ue=_.show_from),"show_to"in _&&t(57,Ue=_.show_to),"show_header"in _&&t(58,ze=_.show_header),"show_subject"in _&&t(59,I=_.show_subject),"show_close_button"in _&&t(60,_e=_.show_close_button),"show_minimize_button"in _&&t(61,ke=_.show_minimize_button),"show_cc"in _&&t(62,ce=_.show_cc),"show_bcc"in _&&t(63,oe=_.show_bcc),"show_cc_button"in _&&t(64,se=_.show_cc_button),"show_bcc_button"in _&&t(65,Re=_.show_bcc_button),"show_attachment_button"in _&&t(66,L=_.show_attachment_button),"max_file_size"in _&&t(67,ae=_.max_file_size),"show_max_file_size"in _&&t(68,Te=_.show_max_file_size),"show_save_as_draft"in _&&t(69,ne=_.show_save_as_draft),"show_editor_toolbar"in _&&t(70,xe=_.show_editor_toolbar),"theme"in _&&t(71,Ce=_.theme),"replace_fields"in _&&t(72,Ge=_.replace_fields),"beforeFileUpload"in _&&t(73,Oe=_.beforeFileUpload),"afterFileUploadSuccess"in _&&t(74,Le=_.afterFileUploadSuccess),"afterFileUploadError"in _&&t(75,je=_.afterFileUploadError),"uploadFile"in _&&t(5,D=_.uploadFile),"beforeFileRemove"in _&&t(76,F=_.beforeFileRemove),"afterFileRemove"in _&&t(77,Y=_.afterFileRemove),"focus_body_onload"in _&&t(78,ie=_.focus_body_onload)},r.$$.update=()=>{if(r.$$.dirty[2]&524288&&g("manifestLoaded",St),r.$$.dirty[2]&4194304&&Object.keys(s).length&&g("onError",s),r.$$.dirty[0]&128&&t(14,Ar=k.subject),JSON.stringify(ft)!==JSON.stringify(e)&&(t(8,de=Jr(e,St,be)),t(9,ft=e)),r.$$.dirty[1]&2048|r.$$.dirty[2]&262144&&A&&(ct(A),(t(80,u=A.files)===null||u===void 0?void 0:u.length)>0)){let _=[];Tr(Qe);for(const[Q,Ee]of A.files.entries())_.push(Ee.id),xl(Ee)&&si(Qe,{account_id:A.account_id,id:Ee.id,filename:Ee.filename,size:Ee.size,content_type:Ee.content_type});ct({file_ids:_})}r.$$.dirty[0]&288&&(D?t(15,mt=de.max_file_size):t(15,mt=de.max_file_size&&de.max_file_size<4&&de.max_file_size>0?de.max_file_size:4)),r.$$.dirty[0]&128|r.$$.dirty[1]&32768&&k&&P&&P(k),r.$$.dirty[0]&128&&t(25,n=k.send_at*1e3),r.$$.dirty[2]&3145728&&(Je?t(20,Ie="Sending"):gt?t(20,Ie="Saving"):t(20,Ie="Send")),r.$$.dirty[0]&129|r.$$.dirty[1]&8192|r.$$.dirty[2]&3145728&&t(24,i=!Je&&!gt&&(b||le)&&k.from.length&&(k.to.length||k.cc.length||k.bcc.length)),r.$$.dirty[0]&256&&de.theme&&(de.theme.startsWith(".")||de.theme.startsWith("http")?t(21,Xt=de.theme):de.theme&&t(21,Xt=`https://unpkg.com/@nylas/components-composer@${Cs.version}/themes/${de.theme}.css`))},e=pe(e),[b,y,R,G,me,D,Wr,k,de,ft,or,Tt,Zt,lr,Ar,mt,Lt,pt,ar,yt,Ie,Xt,Pe,Ht,i,n,c,Qe,_t,Or,Yt,sr,Zr,Yr,Vr,Xr,Vt,Mr,cr,De,jt,v,A,O,le,ee,P,M,U,fe,B,ve,we,Ne,J,V,ue,Ue,ze,I,_e,ke,ce,oe,se,Re,L,ae,Te,ne,xe,Ce,Ge,Oe,Le,je,F,Y,ie,Lr,u,St,Je,gt,s,fr,Nr,ur,Dr,At,Ot,dr,hr,Mt,Kt]}class Ri extends wt{constructor(e){super();this.shadowRoot.innerHTML="<style>*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}.sr-only{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}.nylas-composer{--outer-padding:var(--composer-outer-width, 15px);--font-size-small:var(--composer-font-size-small, 12px);--text-light:var(--composer-text-light-color, #6e6e7a);--border:var(--composer-border-color, #f7f7f7);--border-radius:var(--composer-border-radius, 6px);--primary:var(--composer-primary-color, #5c77ff);--primary-light:var(--composer-primary-light-color, #f0f2ff);--text-secondary:var(--composer-text-secondary-color, #2247ff);width:var(--width, 100%);min-width:300px;height:var(--height, 100%);min-height:300px;background:var(--composer-background-color, white);border-radius:var(--composer-border-radius, 6px);box-shadow:var(--composer-shadow, 0 1px 10px rgba(0, 0, 0, 0.11), 0 3px 36px rgba(0, 0, 0, 0.12));font-family:var(--composer-font, sans-serif);font-size:var(--composer-font-size, 14px);position:relative;display:grid;grid-template-rows:auto 1fr auto}.nylas-composer.popup{position:fixed;bottom:10px;right:10px;z-index:var(--z-index, 1000)}.nylas-composer.minimized{height:auto;min-height:0}.nylas-composer__loader{min-height:var(--composer-editor-max-height, 480px);display:flex;align-items:center;justify-content:center;color:var(--composer-text-light-color, #6e6e7a);box-shadow:none}.nylas-composer__spinner{margin-right:10px;width:18px;animation:rotate 2s linear infinite}.nylas-composer *:focus{outline:5px auto var(--composer-primary-color, #5c77ff)}@keyframes rotate{to{transform:rotate(360deg)}}main{background:var(--bg);overflow:auto}input{font-family:var(--composer-font, sans-serif)}header{border-top-left-radius:var(--composer-border-radius, 6px);border-top-right-radius:var(--composer-border-radius, 6px);border-bottom:1px solid var(--composer-border-color, #f7f7f7);color:var(--composer-text-color, black);padding:15px var(--composer-outer-padding, 15px);display:flex;font-weight:600;align-items:center;justify-content:space-between;background:var(--composer-header-background-color, var(--composer-background-color, white))}header.minimized{border-bottom-left-radius:var(--composer-border-radius, 6px);border-bottom-right-radius:var(--composer-border-radius, 6px)}footer{padding:15px var(--composer-outer-padding, 15px);border-top:1px solid var(--composer-border-color, #f7f7f7);display:flex;align-items:center;justify-content:flex-start;background:var(--bg)}.send-btn{border:0;background:var(--composer-primary-color, #5c77ff);color:white;cursor:pointer;padding:10px 25px;font-weight:bold;border-radius:var(--composer-border-radius, 6px);font-family:var(--composer-font, sans-serif);transition:background-color 0.3s}.send-btn:disabled{opacity:0.5}.send-btn:hover{background:var(--composer-primary-dark-color, #294dff)}.send-btn.send-later{padding:10px 10px;border-radius:var(--composer-border-radius, 6px);border-top-left-radius:0;border-bottom-left-radius:0;margin-left:-4px}.subject{display:block;font-size:var(--composer-font-size, 14px);border:none;border-bottom:1px solid var(--composer-border-color, #f7f7f7);color:var(--composer-text-color, black);width:100%;background:var(--bg);font-weight:600;box-sizing:border-box;padding:15px var(--composer-outer-padding, 15px);outline:0}.subject::placeholer{font-weight:500}.contacts-wrapper{position:relative;text-decoration:none;color:var(--composer-text-color, black)}.contacts-wrapper .contacts-container{display:flex;align-items:center;flex-wrap:wrap;padding:0.4rem var(--outer-padding);border-bottom:1px solid var(--border)}.contacts-wrapper .contact-from{display:flex;align-items:center;padding-bottom:0.1rem;padding-right:0.1rem}.contacts-wrapper .contact-item{display:inline-flex;background:var(--primary-light);color:var(--primary);align-items:center;border-radius:calc(var(--border-radius) / 2);padding:0.2rem 0.8rem;margin-right:0.25rem;margin-top:2px;margin-bottom:2px}.contacts-wrapper .contact-item__name{color:var(--text-secondary);font-size:12px;padding-right:0.75rem}.contacts-wrapper .contacts-placeholder{font-size:var(--font-size-small);margin-right:10px;min-width:30px;display:flex;color:var(--text-light)}.close-btn{background:none;border:none;outline:0;cursor:pointer}.composer-btn{background:none;border:none;outline:0;width:28px;height:28px;border-radius:var(--composer-border-radius, 6px);cursor:pointer}.composer-btn:hover{background:var(--composer-background-muted-color, #f0f2ff)}.composer-btn.file-upload,.composer-btn.save-draft{margin-left:6px;width:32px;height:32px;display:flex;justify-content:center;align-items:center}.file-size{margin-left:6px;color:var(--composer-icons-color, #666774);height:32px;width:auto;display:flex;justify-content:center;align-items:center}.cc-btn{position:absolute;right:10px}.attachments-wrapper{display:flex;padding:15px var(--composer-outer-padding, 15px);flex-direction:column}.addons{font-size:var(--composer-font-size-small, 12px);letter-spacing:1.2px;font-weight:600;position:absolute;right:10px;bottom:16px;color:var(--composer-text-light-color, #6e6e7a)}.addons button{background:transparent;box-shadow:none;border:none;color:var(--composer-text-light-color, #6e6e7a);cursor:pointer;margin-right:10px;padding:5px}.cc-container{display:flex;justify-content:space-between;align-items:center;position:relative}.cc-container>nylas-contacts-search{flex:1}.attachments-caption{font-size:var(--composer-font-size-small, 12px);margin-bottom:5px;color:var(--composer-text-light-color, #6e6e7a)}@media only screen and (max-width: 600px){.nylas-composer{width:100%}.contacts-wrapper{position:initial}.addons{position:initial;float:right;padding:5px}}[class$=Icon]{fill:var(--composer-icons-color, #666774);width:10px;height:10px}[class$=FooterIcon]{width:16px;height:16px}.ExpandIcon{transform:translateY(1px)}.MinimizeIcon{transform:translateY(4px)}</style>",Me(this,{target:this.shadowRoot,props:Et(this.attributes),customElement:!0},Ys,Zs,_r,{id:0,access_token:41,value:42,to:1,from:43,cc:2,bcc:3,send:44,save:45,change:46,beforeSend:47,afterSendSuccess:48,afterSendError:49,afterSaveSuccess:50,afterSaveError:51,template:4,tracking:52,minimized:53,reset_after_send:54,reset_after_close:55,show_from:56,show_to:57,show_header:58,show_subject:59,show_close_button:60,show_minimize_button:61,show_cc:62,show_bcc:63,show_cc_button:64,show_bcc_button:65,show_attachment_button:66,max_file_size:67,show_max_file_size:68,show_save_as_draft:69,show_editor_toolbar:70,theme:71,replace_fields:72,beforeFileUpload:73,afterFileUploadSuccess:74,afterFileUploadError:75,uploadFile:5,beforeFileRemove:76,afterFileRemove:77,focus_body_onload:78,open:79,close:6},null,[-1,-1,-1,-1]),e&&(e.target&&x(e.target,this,e.anchor),e.props&&(this.$set(e.props),z()))}static get observedAttributes(){return["id","access_token","value","to","from","cc","bcc","send","save","change","beforeSend","afterSendSuccess","afterSendError","afterSaveSuccess","afterSaveError","template","tracking","minimized","reset_after_send","reset_after_close","show_from","show_to","show_header","show_subject","show_close_button","show_minimize_button","show_cc","show_bcc","show_cc_button","show_bcc_button","show_attachment_button","max_file_size","show_max_file_size","show_save_as_draft","show_editor_toolbar","theme","replace_fields","beforeFileUpload","afterFileUploadSuccess","afterFileUploadError","uploadFile","beforeFileRemove","afterFileRemove","focus_body_onload","open","close"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),z()}get access_token(){return this.$$.ctx[41]}set access_token(e){this.$$set({access_token:e}),z()}get value(){return this.$$.ctx[42]}set value(e){this.$$set({value:e}),z()}get to(){return this.$$.ctx[1]}set to(e){this.$$set({to:e}),z()}get from(){return this.$$.ctx[43]}set from(e){this.$$set({from:e}),z()}get cc(){return this.$$.ctx[2]}set cc(e){this.$$set({cc:e}),z()}get bcc(){return this.$$.ctx[3]}set bcc(e){this.$$set({bcc:e}),z()}get send(){return this.$$.ctx[44]}set send(e){this.$$set({send:e}),z()}get save(){return this.$$.ctx[45]}set save(e){this.$$set({save:e}),z()}get change(){return this.$$.ctx[46]}set change(e){this.$$set({change:e}),z()}get beforeSend(){return this.$$.ctx[47]}set beforeSend(e){this.$$set({beforeSend:e}),z()}get afterSendSuccess(){return this.$$.ctx[48]}set afterSendSuccess(e){this.$$set({afterSendSuccess:e}),z()}get afterSendError(){return this.$$.ctx[49]}set afterSendError(e){this.$$set({afterSendError:e}),z()}get afterSaveSuccess(){return this.$$.ctx[50]}set afterSaveSuccess(e){this.$$set({afterSaveSuccess:e}),z()}get afterSaveError(){return this.$$.ctx[51]}set afterSaveError(e){this.$$set({afterSaveError:e}),z()}get template(){return this.$$.ctx[4]}set template(e){this.$$set({template:e}),z()}get tracking(){return this.$$.ctx[52]}set tracking(e){this.$$set({tracking:e}),z()}get minimized(){return this.$$.ctx[53]}set minimized(e){this.$$set({minimized:e}),z()}get reset_after_send(){return this.$$.ctx[54]}set reset_after_send(e){this.$$set({reset_after_send:e}),z()}get reset_after_close(){return this.$$.ctx[55]}set reset_after_close(e){this.$$set({reset_after_close:e}),z()}get show_from(){return this.$$.ctx[56]}set show_from(e){this.$$set({show_from:e}),z()}get show_to(){return this.$$.ctx[57]}set show_to(e){this.$$set({show_to:e}),z()}get show_header(){return this.$$.ctx[58]}set show_header(e){this.$$set({show_header:e}),z()}get show_subject(){return this.$$.ctx[59]}set show_subject(e){this.$$set({show_subject:e}),z()}get show_close_button(){return this.$$.ctx[60]}set show_close_button(e){this.$$set({show_close_button:e}),z()}get show_minimize_button(){return this.$$.ctx[61]}set show_minimize_button(e){this.$$set({show_minimize_button:e}),z()}get show_cc(){return this.$$.ctx[62]}set show_cc(e){this.$$set({show_cc:e}),z()}get show_bcc(){return this.$$.ctx[63]}set show_bcc(e){this.$$set({show_bcc:e}),z()}get show_cc_button(){return this.$$.ctx[64]}set show_cc_button(e){this.$$set({show_cc_button:e}),z()}get show_bcc_button(){return this.$$.ctx[65]}set show_bcc_button(e){this.$$set({show_bcc_button:e}),z()}get show_attachment_button(){return this.$$.ctx[66]}set show_attachment_button(e){this.$$set({show_attachment_button:e}),z()}get max_file_size(){return this.$$.ctx[67]}set max_file_size(e){this.$$set({max_file_size:e}),z()}get show_max_file_size(){return this.$$.ctx[68]}set show_max_file_size(e){this.$$set({show_max_file_size:e}),z()}get show_save_as_draft(){return this.$$.ctx[69]}set show_save_as_draft(e){this.$$set({show_save_as_draft:e}),z()}get show_editor_toolbar(){return this.$$.ctx[70]}set show_editor_toolbar(e){this.$$set({show_editor_toolbar:e}),z()}get theme(){return this.$$.ctx[71]}set theme(e){this.$$set({theme:e}),z()}get replace_fields(){return this.$$.ctx[72]}set replace_fields(e){this.$$set({replace_fields:e}),z()}get beforeFileUpload(){return this.$$.ctx[73]}set beforeFileUpload(e){this.$$set({beforeFileUpload:e}),z()}get afterFileUploadSuccess(){return this.$$.ctx[74]}set afterFileUploadSuccess(e){this.$$set({afterFileUploadSuccess:e}),z()}get afterFileUploadError(){return this.$$.ctx[75]}set afterFileUploadError(e){this.$$set({afterFileUploadError:e}),z()}get uploadFile(){return this.$$.ctx[5]}set uploadFile(e){this.$$set({uploadFile:e}),z()}get beforeFileRemove(){return this.$$.ctx[76]}set beforeFileRemove(e){this.$$set({beforeFileRemove:e}),z()}get afterFileRemove(){return this.$$.ctx[77]}set afterFileRemove(e){this.$$set({afterFileRemove:e}),z()}get focus_body_onload(){return this.$$.ctx[78]}set focus_body_onload(e){this.$$set({focus_body_onload:e}),z()}get open(){return this.$$.ctx[79]}get close(){return this.$$.ctx[6]}}return customElements.define("nylas-composer",Ri),Ri});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
