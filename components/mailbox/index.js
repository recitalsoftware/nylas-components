(function(Ri,k){typeof exports=="object"&&typeof module!="undefined"?module.exports=k():typeof define=="function"&&define.amd?define(k):(Ri=typeof globalThis!="undefined"?globalThis:Ri||self,Ri.app=k())})(this,function(){"use strict";const Ri=window.customElements.define.bind(window.customElements);window.customElements.define=(i,...e)=>{if(!customElements.get(i))return Ri(i,...e)};function k(){}function ie(i,e){for(const t in e)i[t]=e[t];return i}function Aa(i){return i&&typeof i=="object"&&typeof i.then=="function"}function fn(i){return i()}function Tn(){return Object.create(null)}function ot(i){i.forEach(fn)}function un(i){return typeof i=="function"}function Ue(i,e){return i!=i?e==e:i!==e||i&&typeof i=="object"||typeof i=="function"}let Qi;function Cn(i,e){return Qi||(Qi=document.createElement("a")),Qi.href=e,i===Qi.href}function Sa(i,e){return i!=i?e==e:i!==e}function An(i){return Object.keys(i).length===0}function Sn(i,...e){if(i==null)return k;const t=i.subscribe(...e);return t.unsubscribe?()=>t.unsubscribe():t}function Wt(i,e,t){i.$$.on_destroy.push(Sn(e,t))}function ve(i){const e={};for(const t in i)t[0]!=="$"&&(e[t]=i[t]);return e}let qi=!1;function Oa(){qi=!0}function La(){qi=!1}function Ma(i,e,t,n){for(;i<e;){const r=i+(e-i>>1);t(r)<=n?i=r+1:e=r}return i}function Na(i){if(i.hydrate_init)return;i.hydrate_init=!0;let e=i.childNodes;if(i.nodeName==="HEAD"){const o=[];for(let c=0;c<e.length;c++){const d=e[c];d.claim_order!==void 0&&o.push(d)}e=o}const t=new Int32Array(e.length+1),n=new Int32Array(e.length);t[0]=-1;let r=0;for(let o=0;o<e.length;o++){const c=e[o].claim_order,d=(r>0&&e[t[r]].claim_order<=c?r+1:Ma(1,r,h=>e[t[h]].claim_order,c))-1;n[o]=t[d]+1;const m=d+1;t[m]=o,r=Math.max(m,r)}const a=[],l=[];let s=e.length-1;for(let o=t[r]+1;o!=0;o=n[o-1]){for(a.push(e[o-1]);s>=o;s--)l.push(e[s]);s--}for(;s>=0;s--)l.push(e[s]);a.reverse(),l.sort((o,c)=>o.claim_order-c.claim_order);for(let o=0,c=0;o<l.length;o++){for(;c<a.length&&l[o].claim_order>=a[c].claim_order;)c++;const d=c<a.length?a[c]:null;i.insertBefore(l[o],d)}}function y(i,e){i.appendChild(e)}function fe(i,e){if(qi){for(Na(i),(i.actual_end_child===void 0||i.actual_end_child!==null&&i.actual_end_child.parentElement!==i)&&(i.actual_end_child=i.firstChild);i.actual_end_child!==null&&i.actual_end_child.claim_order===void 0;)i.actual_end_child=i.actual_end_child.nextSibling;e!==i.actual_end_child?(e.claim_order!==void 0||e.parentNode!==i)&&i.insertBefore(e,i.actual_end_child):i.actual_end_child=e.nextSibling}else(e.parentNode!==i||e.nextSibling!==null)&&i.appendChild(e)}function g(i,e,t){i.insertBefore(e,t||null)}function et(i,e,t){qi&&!t?fe(i,e):(e.parentNode!==i||e.nextSibling!=t)&&i.insertBefore(e,t||null)}function u(i){i.parentNode.removeChild(i)}function bt(i,e){for(let t=0;t<i.length;t+=1)i[t]&&i[t].d(e)}function v(i){return document.createElement(i)}function W(i){return document.createElementNS("http://www.w3.org/2000/svg",i)}function J(i){return document.createTextNode(i)}function z(){return J(" ")}function Be(){return J("")}function Y(i,e,t,n){return i.addEventListener(e,t,n),()=>i.removeEventListener(e,t,n)}function Da(i){return function(e){return e.preventDefault(),i.call(this,e)}}function Ke(i){return function(e){return e.stopPropagation(),i.call(this,e)}}function f(i,e,t){t==null?i.removeAttribute(e):i.getAttribute(e)!==t&&i.setAttribute(e,t)}function Te(i,e){for(const t in e)f(i,t,e[t])}function S(i,e,t){e in i?i[e]=typeof i[e]=="boolean"&&t===""?!0:t:f(i,e,t)}function K(i){return Array.from(i.childNodes)}function Pa(i){i.claim_info===void 0&&(i.claim_info={last_index:0,total_claimed:0})}function ja(i,e,t,n,r=!1){Pa(i);const a=(()=>{for(let l=i.claim_info.last_index;l<i.length;l++){const s=i[l];if(e(s)){const o=t(s);return o===void 0?i.splice(l,1):i[l]=o,r||(i.claim_info.last_index=l),s}}for(let l=i.claim_info.last_index-1;l>=0;l--){const s=i[l];if(e(s)){const o=t(s);return o===void 0?i.splice(l,1):i[l]=o,r?o===void 0&&i.claim_info.last_index--:i.claim_info.last_index=l,s}}return n()})();return a.claim_order=i.claim_info.total_claimed,i.claim_info.total_claimed+=1,a}function Ra(i,e,t,n){return ja(i,r=>r.nodeName===e,r=>{const a=[];for(let l=0;l<r.attributes.length;l++){const s=r.attributes[l];t[s.name]||a.push(s.name)}a.forEach(l=>r.removeAttribute(l))},()=>n(e))}function Q(i,e,t){return Ra(i,e,t,W)}function pe(i,e){e=""+e,i.wholeText!==e&&(i.data=e)}function bi(i,e,t,n){t===null?i.style.removeProperty(e):i.style.setProperty(e,t,n?"important":"")}function we(i,e,t){i.classList[t?"add":"remove"](e)}class mn{constructor(){this.e=this.n=null}c(e){this.h(e)}m(e,t,n=null){this.e||(this.e=v(t.nodeName),this.t=t,this.c(e)),this.i(n)}h(e){this.e.innerHTML=e,this.n=Array.from(this.e.childNodes)}i(e){for(let t=0;t<this.n.length;t+=1)g(this.t,this.n[t],e)}p(e){this.d(),this.h(e),this.i(this.a)}d(){this.n.forEach(u)}}function ni(i){const e={};for(const t of i)e[t.name]=t.value;return e}let Ii;function Ft(i){Ii=i}function Zt(){if(!Ii)throw new Error("Function called outside component initialization");return Ii}function Ia(i){Zt().$$.before_update.push(i)}function hn(i){Zt().$$.on_mount.push(i)}const Fi=[],xi=[],$i=[],On=[],Ln=Promise.resolve();let _n=!1;function Mn(){_n||(_n=!0,Ln.then(re))}function Nn(){return Mn(),Ln}function pn(i){$i.push(i)}const gn=new Set;let en=0;function re(){const i=Ii;do{for(;en<Fi.length;){const e=Fi[en];en++,Ft(e),Fa(e.$$)}for(Ft(null),Fi.length=0,en=0;xi.length;)xi.pop()();for(let e=0;e<$i.length;e+=1){const t=$i[e];gn.has(t)||(gn.add(t),t())}$i.length=0}while(Fi.length);for(;On.length;)On.pop()();_n=!1,gn.clear(),Ft(i)}function Fa(i){if(i.fragment!==null){i.update(),ot(i.before_update);const e=i.dirty;i.dirty=[-1],i.fragment&&i.fragment.p(i.ctx,e),i.after_update.forEach(pn)}}const tn=new Set;let ri;function Ae(){ri={r:0,c:[],p:ri}}function Se(){ri.r||ot(ri.c),ri=ri.p}function A(i,e){i&&i.i&&(tn.delete(i),i.i(e))}function F(i,e,t,n){if(i&&i.o){if(tn.has(i))return;tn.add(i),ri.c.push(()=>{tn.delete(i),n&&(t&&i.d(1),n())}),i.o(e)}}function vt(i,e){const t=e.token={};function n(r,a,l,s){if(e.token!==t)return;e.resolved=s;let o=e.ctx;l!==void 0&&(o=o.slice(),o[l]=s);const c=r&&(e.current=r)(o);let d=!1;e.block&&(e.blocks?e.blocks.forEach((m,h)=>{h!==a&&m&&(Ae(),F(m,1,1,()=>{e.blocks[h]===m&&(e.blocks[h]=null)}),Se())}):e.block.d(1),c.c(),A(c,1),c.m(e.mount(),e.anchor),d=!0),e.block=c,e.blocks&&(e.blocks[a]=c),d&&re()}if(Aa(i)){const r=Zt();if(i.then(a=>{Ft(r),n(e.then,1,e.value,a),Ft(null)},a=>{if(Ft(r),n(e.catch,2,e.error,a),Ft(null),!e.hasCatch)throw a}),e.current!==e.pending)return n(e.pending,0),!0}else{if(e.current!==e.then)return n(e.then,1,e.value,i),!0;e.resolved=i}}function li(i,e,t){const n=e.slice(),{resolved:r}=i;i.current===i.then&&(n[i.value]=r),i.current===i.catch&&(n[i.error]=r),i.block.p(n,t)}function tt(i,e){const t={},n={},r={$$scope:1};let a=i.length;for(;a--;){const l=i[a],s=e[a];if(s){for(const o in l)o in s||(n[o]=1);for(const o in s)r[o]||(t[o]=s[o],r[o]=1);i[a]=s}else for(const o in l)r[o]=1}for(const l in n)l in t||(t[l]=void 0);return t}function He(i){i&&i.c()}function Fe(i,e,t,n){const{fragment:r,on_mount:a,on_destroy:l,after_update:s}=i.$$;r&&r.m(e,t),n||pn(()=>{const o=a.map(fn).filter(un);l?l.push(...o):ot(o),i.$$.on_mount=[]}),s.forEach(pn)}function Ie(i,e){const t=i.$$;t.fragment!==null&&(ot(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function xa(i,e){i.$$.dirty[0]===-1&&(Fi.push(i),Mn(),i.$$.dirty.fill(0)),i.$$.dirty[e/31|0]|=1<<e%31}function We(i,e,t,n,r,a,l,s=[-1]){const o=Ii;Ft(i);const c=i.$$={fragment:null,ctx:null,props:a,update:k,not_equal:r,bound:Tn(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(o?o.$$.context:[])),callbacks:Tn(),dirty:s,skip_bound:!1,root:e.target||o.$$.root};l&&l(c.root);let d=!1;if(c.ctx=t?t(i,e.props||{},(m,h,...b)=>{const _=b.length?b[0]:h;return c.ctx&&r(c.ctx[m],c.ctx[m]=_)&&(!c.skip_bound&&c.bound[m]&&c.bound[m](_),d&&xa(i,m)),h}):[],c.update(),d=!0,ot(c.before_update),c.fragment=n?n(c.ctx):!1,e.target){if(e.hydrate){Oa();const m=K(e.target);c.fragment&&c.fragment.l(m),m.forEach(u)}else c.fragment&&c.fragment.c();e.intro&&A(i.$$.fragment),Fe(i,e.target,e.anchor,e.customElement),La(),re()}Ft(o)}let Jt;typeof HTMLElement=="function"&&(Jt=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:i}=this.$$;this.$$.on_disconnect=i.map(fn).filter(un);for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(i,e,t){this[i]=t}disconnectedCallback(){ot(this.$$.on_disconnect)}$destroy(){Ie(this,1),this.$destroy=k}$on(i,e){const t=this.$$.callbacks[i]||(this.$$.callbacks[i]=[]);return t.push(e),()=>{const n=t.indexOf(e);n!==-1&&t.splice(n,1)}}$set(i){this.$$set&&!An(i)&&(this.$$.skip_bound=!0,this.$$set(i),this.$$.skip_bound=!1)}});class it{$destroy(){Ie(this,1),this.$destroy=k}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}$set(e){this.$$set&&!An(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const vi=[];function Ua(i,e){return{subscribe:Nt(i,e).subscribe}}function Nt(i,e=k){let t;const n=new Set;function r(s){if(Ue(i,s)&&(i=s,t)){const o=!vi.length;for(const c of n)c[1](),vi.push(c,i);if(o){for(let c=0;c<vi.length;c+=2)vi[c][0](vi[c+1]);vi.length=0}}}function a(s){r(s(i))}function l(s,o=k){const c=[s,o];return n.add(c),n.size===1&&(t=e(r)||k),s(i),()=>{n.delete(c),n.size===0&&(t(),t=null)}}return{set:r,update:a,subscribe:l}}function Ba(i,e,t){const n=!Array.isArray(i),r=n?[i]:i,a=e.length<2;return Ua(t,l=>{let s=!1;const o=[];let c=0,d=k;const m=()=>{if(c)return;d();const b=e(n?o[0]:o,l);a?l(b):d=un(b)?b:k},h=r.map((b,_)=>Sn(b,O=>{o[_]=O,c&=~(1<<_),s&&m()},()=>{c|=1<<_}));return s=!0,m(),function(){ot(h),d()}})}function Ha(){return Nt({})}const nn=Ha();var za=Object.defineProperty,Va=Object.defineProperties,Ga=Object.getOwnPropertyDescriptors,Dn=Object.getOwnPropertySymbols,Wa=Object.prototype.hasOwnProperty,Za=Object.prototype.propertyIsEnumerable,Pn=(i,e,t)=>e in i?za(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Ja=(i,e)=>{for(var t in e||(e={}))Wa.call(e,t)&&Pn(i,t,e[t]);if(Dn)for(var t of Dn(e))Za.call(e,t)&&Pn(i,t,e[t]);return i},Ya=(i,e)=>Va(i,Ga(e));async function nt(i){var e;if(!i.ok){const t=await i.json().then(a=>a),n=((e=t==null?void 0:t.response)==null?void 0:e.error)||(t==null?void 0:t.message),r=new Error(n);return r.name=t.name,Promise.reject({message:r,statusCode:i.status})}return i.json()}function rt(i={component_id:""}){return{method:i.method||"GET",headers:{Accept:"application/json","Content-Type":"application/json","X-Component-Id":i.component_id||"","X-Access-Token":i.access_token||""},body:i.body?JSON.stringify(i.body):void 0}}function at(i,e){throw console.error(e),nn.update(t=>Ya(Ja({},t),{[i]:e})),e}const jn={"001":"","002":"ireland-","003":"canada-"};function lt(i){let e="";if(i.substring(3,4)==="-"){const n=i.substring(0,3);typeof jn[n]!="undefined"&&(e=jn[n])}return`https://${e}web-components.nylas.com/middleware`}function Yt(i){}function Ka(i){return Object.keys(i).reduce((e,t)=>(i[t]!==void 0&&e.append(t,i[t]),e),new URLSearchParams).toString()}const Xa=async(i,e)=>{const t=`${lt(i.component_id)}/contact-list/contacts?${Ka(e)}`,n=await fetch(t,rt({component_id:i.component_id,access_token:i.access_token})).then(r=>nt(r)).then(r=>r.response).catch(r=>at(i.component_id,r));return n!=null?n:[]},Qa=async i=>{const e=await fetch(`${lt(i.component_id)}/contacts${i.query}`,rt({component_id:i.component_id,access_token:i.access_token})).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t));return e!=null?e:[]},qa=async(i,e)=>await fetch(`${lt(i.component_id)}/contacts/${e}/picture`,rt({component_id:i.component_id,access_token:i.access_token})).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t));var $a=Object.defineProperty,eo=Object.defineProperties,to=Object.getOwnPropertyDescriptors,Rn=Object.getOwnPropertySymbols,io=Object.prototype.hasOwnProperty,no=Object.prototype.propertyIsEnumerable,In=(i,e,t)=>e in i?$a(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Fn=(i,e)=>{for(var t in e||(e={}))io.call(e,t)&&In(i,t,e[t]);if(Rn)for(var t of Rn(e))no.call(e,t)&&In(i,t,e[t]);return i},xn=(i,e)=>eo(i,to(e));const Un=(i,e,t)=>{if(i.thread_ids){const r=i.thread_ids.slice(t,t+e);return Promise.all(r.map(async a=>{const l=`${lt(i.component_id)}/threads/${a}?view=expanded`;return await fetch(l,rt(i)).then(s=>nt(s)).then(s=>s.response).then(s=>xn(Fn({},s),{messages:s.messages.filter(o=>o.from.length!==0||o.to.length!==0)})).catch(s=>at(i.component_id,s))}))}let n=`${lt(i.component_id)}/threads?view=expanded&not_in=trash&limit=${e}&offset=${t}`;return i.query&&Object.entries(i.query).forEach(r=>n=n.concat(`&${r[0]}=${r[1]}`)),fetch(n,rt(i)).then(r=>nt(r)).then(r=>r.response).then(r=>r.map(a=>xn(Fn({},a),{messages:a.messages.filter(l=>l.from.length!==0||l.to.length!==0)}))).catch(r=>at(i.component_id,r))};function Bn(i){let e=`${lt(i.component_id)}/threads?view=expanded&not_in=trash&view=count`;return i.query&&Object.entries(i.query).forEach(t=>e=e.concat(`&${t[0]}=${t[1]}`)),i.keywordToSearch&&(e+=`&q=${i.keywordToSearch}`),fetch(e,rt(i)).then(t=>nt(t)).then(t=>t.response.count)}const ro=i=>{const e=`${lt(i.component_id)}/threads/search?q=${i.keywordToSearch}&view=expanded&limit=${i.query.limit}&offset=${i.query.offset}`;return fetch(e,rt(i)).then(async t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t))},lo=async i=>await fetch(`${lt(i.component_id)}/threads/${i.thread_id}?view=expanded`,rt({component_id:i.component_id,access_token:i.access_token})).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t)),Hn=(i,e)=>fetch(`${lt(i.component_id)}/threads/${e.id}`,rt({method:"PUT",component_id:i.component_id,access_token:i.access_token,body:{unread:e.unread,starred:e.starred,folder_id:e.folder_id,label_ids:e.label_ids}})).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t)),ao=async(i,e)=>await fetch(`${lt(i)}/manifest`,rt({access_token:e,component_id:i})).then(nt).then(t=>t.component.theming).catch(t=>at(i,t));async function bn(i,e,t){const n=`${lt(i)}/messages/${e.id}`,r=rt({method:"PUT",component_id:i,access_token:t,body:{folder_id:e.folder_id,label_ids:e.label_ids}});return await fetch(n,r).then(a=>nt(a)).then(a=>a.response).catch(a=>at(i,a))}const zn=async(i,e)=>{const t=`${lt(i.component_id)}/messages/${e}`;return await fetch(t,rt(i)).then(n=>nt(n)).then(n=>n.response).catch(n=>at(i.component_id,n))},oo=async i=>{const e=`${lt(i.component_id)}/messages/${i.message_id}`;return await fetch(e,rt(i)).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t))},Vn=async i=>await fetch(`${lt(i.component_id)}/account`,rt(i)).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t)),Gn=i=>fetch(`${lt(i.component_id)}/neural/conversation`,rt({method:"PUT",access_token:i.access_token,component_id:i.component_id,body:{message_id:i.message_id}})).then(async e=>(await nt(e)).response).catch(e=>at(i.component_id,e));var so=Object.defineProperty,Wn=Object.getOwnPropertySymbols,co=Object.prototype.hasOwnProperty,fo=Object.prototype.propertyIsEnumerable,Zn=(i,e,t)=>e in i?so(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Jn=(i,e)=>{for(var t in e||(e={}))co.call(e,t)&&Zn(i,t,e[t]);if(Wn)for(var t of Wn(e))fo.call(e,t)&&Zn(i,t,e[t]);return i};const uo=async i=>fetch(`${lt(i.component_id)}/calendars/availability`,rt({method:"POST",component_id:i.component_id,access_token:i.access_token,body:i.body})).then(async e=>{const t=await nt(e);return t.response.time_slots=t.response.time_slots.map(n=>(n.start_time=n.start||0,n.end_time=n.end||0,delete n.start,delete n.end,n)),t.response}).catch(e=>at(i.component_id,e)),mo=async i=>fetch(`${lt(i.component_id)}/calendars/availability/consecutive`,rt({method:"POST",component_id:i.component_id,access_token:i.access_token,body:i.body})).then(async e=>{var t;const r=((t=(await nt(e)).response)==null?void 0:t.map(s=>(s=s.map(o=>(o.start_time=new Date(o.start_time*1e3),o.end_time=new Date(o.end_time*1e3),o)),s)))||[],a=ho(r,i.body.events);return _o(a)}).catch(e=>at(i.component_id,e));function ho(i,e){return i.map(t=>t.map(n=>Jn(Jn({},n),e.find(r=>r.participantEmails.length===n.emails.length&&r.participantEmails.every(a=>n.emails.includes(a))))))}function _o(i){const e=new Set;return i.filter(t=>{const n=`${t[0].start_time}_${t[t.length-1].end_time}`;return e.has(n)?!1:(e.add(n),!0)})}var po=Object.defineProperty,Yn=Object.getOwnPropertySymbols,go=Object.prototype.hasOwnProperty,bo=Object.prototype.propertyIsEnumerable,Kn=(i,e,t)=>e in i?po(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,vo=(i,e)=>{for(var t in e||(e={}))go.call(e,t)&&Kn(i,t,e[t]);if(Yn)for(var t of Yn(e))bo.call(e,t)&&Kn(i,t,e[t]);return i};function wo(){const i=(t,n)=>{var r,a;const l=JSON.parse(n),s=vo({},l);if(delete s.forceReload,n=JSON.stringify(s),!(!l.component_id||!((r=l==null?void 0:l.body)==null?void 0:r.start_time)||!((a=l==null?void 0:l.body)==null?void 0:a.end_time))){if(!t[n]||l.forceReload){const o=uo(l);e.update(c=>(c[n]=o,c)),t[n]=o}return t[n]}},e=Nt(new Proxy({},{get:i}));return e}wo();function yo(){const i=(t,n)=>{var r,a;const l=JSON.parse(n);if(!(!l.component_id||!((r=l==null?void 0:l.body)==null?void 0:r.start_time)||!((a=l==null?void 0:l.body)==null?void 0:a.end_time))){if(!t[n]){const s=mo(l);e.update(o=>(o[n]=s,o)),t[n]=s}return t[n]}},e=Nt(new Proxy({},{get:i}));return e}yo();var ko=Object.defineProperty,Xn=Object.getOwnPropertySymbols,Eo=Object.prototype.hasOwnProperty,To=Object.prototype.propertyIsEnumerable,Qn=(i,e,t)=>e in i?ko(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,qn=(i,e)=>{for(var t in e||(e={}))Eo.call(e,t)&&Qn(i,t,e[t]);if(Xn)for(var t of Xn(e))To.call(e,t)&&Qn(i,t,e[t]);return i};let Ct={};function $n(i){return i.filter(e=>!!e.given_name||!!e.surname||Array.isArray(e.emails)&&e.emails.length>0).map(e=>((!Array.isArray(e.emails)||e.emails.length===0)&&(e.emails=[{email:""}]),e))}function Co(){const{subscribe:i,set:e,update:t}=Nt({});return{subscribe:i,addContacts:async(n,r)=>{var a;const l=JSON.stringify(n);if(!Ct[l]&&(n.component_id||n.access_token)){r.offset===0&&vn.reset();const s=(a=await Xa(n,r).then(o=>$n(o)).catch(()=>[]))!=null?a:[];return Ct[l]=Ct[l]?[...Ct[l],...s]:s,t(o=>(o[l]=Ct[l],qn({},o))),Ct[l]}},addContact:async n=>{var r;const a=JSON.stringify(n);if(!Ct[a]&&(n.component_id||n.access_token)){const l=(r=await Qa(n).then(s=>$n(s)).catch(()=>[]))!=null?r:[];Ct[a]=Ct[a]?[...Ct[a],...l]:l,t(s=>(s[a]=Ct[a],qn({},s)))}return Ct[a]},reset:()=>{Ct={},e({})}}}const vn=Co(),wn={};function Ao(){const{subscribe:i,set:e}=Nt({});return{subscribe:i,getContactAvatar:async(t,n,r=!1)=>{if(!wn[n]||r){const a=await qa(t,n).then(l=>l).catch(()=>"");a&&(wn[n]=a)}return wn[n]},reset:()=>e({})}}const So=Ao();var Oo=Object.defineProperty,er=Object.getOwnPropertySymbols,Lo=Object.prototype.hasOwnProperty,Mo=Object.prototype.propertyIsEnumerable,tr=(i,e,t)=>e in i?Oo(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,ai=(i,e)=>{for(var t in e||(e={}))Lo.call(e,t)&&tr(i,t,e[t]);if(er)for(var t of er(e))Mo.call(e,t)&&tr(i,t,e[t]);return i};async function ir(i){const e=[];for(let t=0;t<i;t++)e.push({isLoaded:!1,threads:[]});return e}function No(){const{subscribe:i,set:e,update:t}=Nt({});let n={},r;return{subscribe:i,set:e,getThreads:async(a,l,s,o=!1)=>{const c=JSON.stringify(a);if(!a.component_id&&!a.access_token)return[];if(r===void 0||o){const d=a.thread_ids?a.thread_ids.length:await Bn(a).catch(Yt);d&&(r=d)}if(!Array.isArray(n[c])||o){const d=Math.ceil(r/s);n[c]=await ir(d)}if(typeof n[c][l]=="undefined")return[];if(!n[c][l].isLoaded){const d=await Un(a,s,l*s).catch(Yt);d&&(n[c][l].threads=d,n[c][l].isLoaded=!0)}return t(d=>(d[c]=n[c],ai({},d))),n[c][l].threads},getNumberOfItems:async a=>{if(!a.component_id&&!a.access_token)return 0;if(typeof r=="undefined"){const l=await Bn(a).catch(Yt);l&&(r=l)}return r},getThreadsWithSearchKeyword:async(a,l=!1)=>{if(!a.component_id&&!a.access_token)return[];const s=JSON.stringify(a);if((!Array.isArray(n[s])||l)&&(n[s]=await ir(1)),!n[s][0].isLoaded||l){const o=await ro(a).catch(Yt);o&&(n[s][0].threads=o,n[s][0].isLoaded=!0)}return t(o=>(o[s]=n[s],ai({},o))),n[s][0].threads},updateThread:async(a,l,s,o,c)=>{const d=await Hn(a,s).catch(Yt);if(!n[l][o].isLoaded){const m=await Un(JSON.parse(l),c,o*c).catch(Yt);m&&(n[l][o].threads=m,n[l][o].isLoaded=!0)}return n[l][o].threads=n[l][o].threads.map(m=>(d&&m.id===d.id&&(m=Object.assign(m,d)),m)),t(m=>(m[l]=n[l],ai({},m))),n[l][o].threads},updateThreadSelection:(a,l,s)=>{const o=n[a][l].threads;if(s){const c=o.find(d=>d.id===s);c&&(c.selected=!c.selected)}else{const c=o.some(d=>d.selected);for(const d of o)d.selected=!c}return t(c=>(c[a]=n[a],ai({},c))),n[a][l].threads},reset:()=>{n={},e({})},hydrateMessageInThread:(a,l,s)=>{var o,c,d;const m=JSON.stringify(l),h=(c=(o=n[m][s])==null?void 0:o.threads)==null?void 0:c.find(b=>b.id===a.thread_id);if(h){const b=(d=h.messages)==null?void 0:d.find(_=>_.id===a.id);b?(b.body=a.body,t(_=>{if(a.thread_id){let O=_[m][s].threads.find(P=>P.id===h.id);O&&(O=JSON.parse(JSON.stringify(h)))}return ai({},_)})):t(_=>{if(a.thread_id){let O=_[m][s].threads.find(P=>P.id===h.id);if(O){const P=h.messages;P.push(a),h.messages=P,h.snippet=a.snippet,h.drafts=h.drafts.filter(C=>C.id!==a.id),O=JSON.parse(JSON.stringify(h))}}return ai({},_)})}return n[m][s].threads},hydrateDraftInThread:(a,l,s)=>{var o,c,d;const m=JSON.stringify(l),h=(c=(o=n[m][s])==null?void 0:o.threads)==null?void 0:c.find(b=>b.id===a.thread_id);if(h){const b=(d=h.drafts)==null?void 0:d.find(_=>_.id===a.id);if(a.thread_id){if(b)Object.assign(b,a);else{const _=h.drafts;_.push(a),h.drafts=_}t(_=>{let O=_[m][s].threads.find(P=>P.id===h.id);return O&&(O=JSON.parse(JSON.stringify(h))),ai({},_)})}}return n[m][s].threads}}}const wt=No(),Do=Ba(wt,i=>{const e={};return Object.entries(i).forEach(([t,n])=>e[t]=n.map(r=>r.threads).flat()),e});function Po(){const i=(t,n)=>{const r=JSON.parse(n);if(!!r.component_id){if(!t[n]){const a=ao(r.component_id,r.access_token);e.update(l=>(l[n]=a,l)),t[n]=a}return t[n]}},e=Nt(new Proxy({},{get:i}));return e}const nr=Po(),yn=async i=>{let e=`${lt(i.component_id)}/files/${i.file_id}/download`;return await fetch(e,rt(i)).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t))},jo=["message/delivery-status","message/rfc822"],rr=["image/png","image/apng","image/avif","image/gif","image/jpeg","image/svg+xml"];var Ro=Object.defineProperty,lr=Object.getOwnPropertySymbols,Io=Object.prototype.hasOwnProperty,Fo=Object.prototype.propertyIsEnumerable,ar=(i,e,t)=>e in i?Ro(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,xo=(i,e)=>{for(var t in e||(e={}))Io.call(e,t)&&ar(i,t,e[t]);if(lr)for(var t of lr(e))Fo.call(e,t)&&ar(i,t,e[t]);return i};function Uo(){const{subscribe:i,set:e,update:t}=Nt({}),n={};return{subscribe:i,getFilesForMessage:async(r,a)=>{if(!n[r.id]){const l={};for(const s of r.files.values())(s.content_disposition==="inline"||s.content_id&&rr.includes(s.content_type))&&!l[s.id]&&(l[s.id]=s,l[s.id].data=await yn({file_id:s.id,component_id:a.component_id,access_token:a.access_token}));n[r.id]=l,t(s=>(s[r.id]=l,xo({},s)))}return n[r.id]},hasInlineFiles:r=>{var a;return(a=r==null?void 0:r.files)==null?void 0:a.some(l=>l.content_disposition==="inline"||l.content_id&&rr.includes(l.content_type))},reset:()=>e({})}}const oi=Uo();function Ui(i){return(e,t)=>{i.dispatchEvent&&i.dispatchEvent(new CustomEvent(e,{detail:t,composed:!0}))}}function wi(i,e,t){return new Proxy(i,{get:(n,r)=>r==="toString"||r==="toJSON"?()=>JSON.stringify(n):Reflect.get(n,r)!==void 0?or(Reflect.get(n,r),t[r]):e&&r in e?or(e[r],t[r]):t[r],ownKeys:n=>{const r=new Set([...Reflect.ownKeys(n),...Object.keys(e),...Object.keys(t)]);return Array.from(r)},getOwnPropertyDescriptor:(n,r)=>{var a,l;let s=Reflect.getOwnPropertyDescriptor(n,r);return s||(s=(l=(a=e&&Object.getOwnPropertyDescriptor(e,r))!=null?a:t&&Object.getOwnPropertyDescriptor(t,r))!=null?l:{configurable:!0,enumerable:!0,writable:!0},Reflect.defineProperty(n,r,s)),s}})}function or(i,e){if(i){if(typeof e=="boolean")return Bo(i);if(typeof e=="number")return Number(i);if(e instanceof Date)return new Date(i)}return i===void 0?e!=null?e:null:i}function Bo(i){return[!0,"true","1"].includes(i)}function sr(i,e){var t;const n=Uint8Array.from(atob(i),s=>s.charCodeAt(0)),r=new Blob([n],{type:e.content_type}),a=window.URL.createObjectURL(r),l=document.createElement("a");l.href=a,l.download=(t=e.filename)!=null?t:e.id,l.target="_blank",l.click(),l.remove()}function cr(i){let e,t,n,r,a,l;function s(d,m){if(d[2]==="HostDomainNotAllowedError")return zo;if(d[2]==="IncompatibleProperties")return Ho}let o=s(i),c=o&&o(i);return{c(){var d,m;e=v("div"),c&&c.c(),t=z(),n=v("span"),n.textContent="Debug info:",r=z(),a=v("textarea"),f(n,"class","details"),f(a,"class","details"),a.readOnly=!0,a.value=l=`
      `+i[2]+": "+i[0]+`
      `+((m=(d=i[1].message)==null?void 0:d.message)!=null?m:"")+`
    `,f(e,"class","message-container")},m(d,m){g(d,e,m),c&&c.m(e,null),y(e,t),y(e,n),y(e,r),y(e,a)},p(d,m){var h,b;o===(o=s(d))&&c?c.p(d,m):(c&&c.d(1),c=o&&o(d),c&&(c.c(),c.m(e,t))),m&7&&l!==(l=`
      `+d[2]+": "+d[0]+`
      `+((b=(h=d[1].message)==null?void 0:h.message)!=null?b:"")+`
    `)&&(a.value=l)},d(d){d&&u(e),c&&c.d()}}}function Ho(i){let e;return{c(){e=v("h3"),e.textContent="Your component properties do not work with each other."},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function zo(i){let e,t,n,r,a,l;return{c(){e=v("h3"),t=J(`You are trying to access this component from\xA0
        `),n=v("code"),n.textContent=`${window.location.hostname}`,r=J(`. The component's settings do not
        allow access from this domain.`),a=z(),l=v("h4"),l.innerHTML=`The list of allowed domains can be modified in your\xA0
        <a href="https://dashboard.nylas.com">Dashboard</a>.`},m(s,o){g(s,e,o),y(e,t),y(e,n),y(e,r),g(s,a,o),g(s,l,o)},p:k,d(s){s&&u(e),s&&u(a),s&&u(l)}}}function Vo(i){let e,t=i[2]&&i[3]&&cr(i);return{c(){t&&t.c(),e=Be(),this.c=k},m(n,r){t&&t.m(n,r),g(n,e,r)},p(n,[r]){n[2]&&n[3]?t?t.p(n,r):(t=cr(n),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},i:k,o:k,d(n){t&&t.d(n),n&&u(e)}}}function Go(i,e,t){let n;Wt(i,nn,h=>t(8,n=h));var r,a,l,s;let{id:o}=e,c,d;const m=window.location.href.includes("localhost")||window.location.href.includes("127.0.0.1");return i.$$set=h=>{"id"in h&&t(0,o=h.id)},i.$$.update=()=>{i.$$.dirty&499&&(t(1,c=t(4,r=n[o])!==null&&r!==void 0?r:{name:""}),t(2,d=t(7,s=t(5,a=c.name)!==null&&a!==void 0?a:t(6,l=c.message)===null||l===void 0?void 0:l.name)!==null&&s!==void 0?s:""))},[o,c,d,m,r,a,l,s,n]}class Wo extends Jt{constructor(e){super();this.shadowRoot.innerHTML=`<style>.message-container{background:#fff6f6;border-radius:5px;box-shadow:0 0 0 1px #aa92a0 inset, 0 0 0 0 transparent;color:#9f3a38;font-size:1.25rem;padding:10px;margin:0 auto;transition:opacity 500ms ease, color 500ms ease,
      background-color 500ms ease, box-shadow 500ms ease,
      -webkit-box-shadow 500ms ease}.message-container *:focus{outline:5px auto Highlight;outline:5px auto -webkit-focus-ring-color}.details{color:#494949;font-size:0.75rem;width:100%}</style>`,We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},Go,Vo,Sa,{id:0},null),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["id"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),re()}}customElements.define("nylas-error",Wo);var yi;(function(i){i.Label="label",i.Folder="folder"})(yi||(yi={}));var dr;(function(i){i.RUNNING="running",i.PARTIAL="partial",i.STOPPED="stopped"})(dr||(dr={}));var jt;(function(i){i.SELECTALL="selectall",i.DELETE="delete",i.STAR="star",i.UNREAD="unread"})(jt||(jt={}));var xt;(function(i){i.DRAFTS="drafts",i.MESSAGES="messages"})(xt||(xt={}));var Bi;(function(i){i.DEFAULT="default",i.CUSTOM="custom"})(Bi||(Bi={}));const Zo=async i=>{const e=`${lt(i.component_id)}/folders`;return await fetch(e,rt(i)).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t))};var Jo=Object.defineProperty,fr=Object.getOwnPropertySymbols,Yo=Object.prototype.hasOwnProperty,Ko=Object.prototype.propertyIsEnumerable,ur=(i,e,t)=>e in i?Jo(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,Xo=(i,e)=>{for(var t in e||(e={}))Yo.call(e,t)&&ur(i,t,e[t]);if(fr)for(var t of fr(e))Ko.call(e,t)&&ur(i,t,e[t]);return i};function Qo(){const{subscribe:i,set:e,update:t}=Nt({}),n={};return{subscribe:i,getFolders:async(r,a=!1)=>{const l=JSON.stringify(r);return(!n[l]||a)&&(r.component_id||r.access_token)&&(n[l]=(await Zo(r)).map(s=>(s.toString=()=>s.id,s))),t(s=>(s[l]=n[l],Xo({},s))),n[l]},reset:()=>e({})}}const mr=Qo(),qo=async i=>{const e=`${lt(i.component_id)}/labels`;return await fetch(e,rt(i)).then(t=>nt(t)).then(t=>t.response).catch(t=>at(i.component_id,t))};var $o=Object.defineProperty,hr=Object.getOwnPropertySymbols,es=Object.prototype.hasOwnProperty,ts=Object.prototype.propertyIsEnumerable,_r=(i,e,t)=>e in i?$o(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,is=(i,e)=>{for(var t in e||(e={}))es.call(e,t)&&_r(i,t,e[t]);if(hr)for(var t of hr(e))ts.call(e,t)&&_r(i,t,e[t]);return i};function ns(){const{subscribe:i,set:e,update:t}=Nt({}),n={};return{subscribe:i,getLabels:async(r,a=!1)=>{const l=JSON.stringify(r);return(!n[l]||a)&&(r.component_id||r.access_token)&&(n[l]=(await qo(r)).map(s=>(s.toString=()=>s.id,s))),t(s=>(s[l]=n[l],is({},s))),n[l]},reset:()=>e({})}}const pr=ns();function gr(i,e,t){return i?e[t].some(n=>n.email.toLowerCase()===i.toLowerCase()):!1}function rs(i,e){return[...e.from,...e.to,...e.cc,...e.bcc].filter(n=>!i.includes(n.email))}function ls({myEmail:i,message:e,type:t}){var n;let r=[],a=[];if(r=e.reply_to.filter(l=>l.email!==i),r.length||(gr(i,e,"from")?r=e.to:r=e.from),t==="reply_all"){const l=(n=e.from)==null?void 0:n.map(s=>s.email);a=[...rs([...l,i],e)]}return{to:r,cc:a}}var as=Object.defineProperty,br=Object.getOwnPropertySymbols,os=Object.prototype.hasOwnProperty,ss=Object.prototype.propertyIsEnumerable,vr=(i,e,t)=>e in i?as(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,wr=(i,e)=>{for(var t in e||(e={}))os.call(e,t)&&vr(i,t,e[t]);if(br)for(var t of br(e))ss.call(e,t)&&vr(i,t,e[t]);return i};function kn(i,e){return i.map(t=>wr(wr({},t),e))}function cs(i){let e,t,n=[{width:"17"},{height:"16"},{viewBox:"0 0 17 16"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,stroke:!0,"stroke-miterlimit":!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M11.1666 6.66666L8.50094 9.48258L5.83331 6.66666"),f(t,"stroke","#8d94a5"),f(t,"stroke-miterlimit","10"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"17"},{height:"16"},{viewBox:"0 0 17 16"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function ds(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class ki extends it{constructor(e){super();We(this,e,ds,cs,Ue,{})}}function fs(i){let e,t,n=[{width:"11"},{height:"13"},{viewBox:"0 0 11 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,fill:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M0.75 11.375C0.75 12.0078 1.24219 12.5 1.875 12.5H8.625C9.23438 12.5 9.75 12.0078 9.75 11.375V3.5H0.75V11.375ZM7.125 5.375C7.125 5.1875 7.28906 5 7.5 5C7.6875 5 7.875 5.1875 7.875 5.375V10.625C7.875 10.8359 7.6875 11 7.5 11C7.28906 11 7.125 10.8359 7.125 10.625V5.375ZM4.875 5.375C4.875 5.1875 5.03906 5 5.25 5C5.4375 5 5.625 5.1875 5.625 5.375V10.625C5.625 10.8359 5.4375 11 5.25 11C5.03906 11 4.875 10.8359 4.875 10.625V5.375ZM2.625 5.375C2.625 5.1875 2.78906 5 3 5C3.1875 5 3.375 5.1875 3.375 5.375V10.625C3.375 10.8359 3.1875 11 3 11C2.78906 11 2.625 10.8359 2.625 10.625V5.375ZM10.125 1.25H7.3125L7.07812 0.828125C6.98438 0.640625 6.79688 0.5 6.58594 0.5H3.89062C3.67969 0.5 3.49219 0.640625 3.39844 0.828125L3.1875 1.25H0.375C0.164062 1.25 0 1.4375 0 1.625V2.375C0 2.58594 0.164062 2.75 0.375 2.75H10.125C10.3125 2.75 10.5 2.58594 10.5 2.375V1.625C10.5 1.4375 10.3125 1.25 10.125 1.25Z"),f(t,"fill","#6A7285"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"11"},{height:"13"},{viewBox:"0 0 11 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function us(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class yr extends it{constructor(e){super();We(this,e,us,fs,Ue,{})}}function ms(i){let e,t,n=[{width:"12"},{height:"13"},{viewBox:"0 0 12 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,fill:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M4.125 5.5625H7.875C8.0625 5.5625 8.25 5.39844 8.25 5.1875V4.8125C8.25 4.625 8.0625 4.4375 7.875 4.4375H4.125C3.91406 4.4375 3.75 4.625 3.75 4.8125V5.1875C3.75 5.39844 3.91406 5.5625 4.125 5.5625ZM3.75 7.4375C3.75 7.64844 3.91406 7.8125 4.125 7.8125H7.875C8.0625 7.8125 8.25 7.64844 8.25 7.4375V7.0625C8.25 6.875 8.0625 6.6875 7.875 6.6875H4.125C3.91406 6.6875 3.75 6.875 3.75 7.0625V7.4375ZM6 10.2969C5.60156 10.2969 5.22656 10.1797 4.89844 9.92188L0 6.38281V11.375C0 12.0078 0.492188 12.5 1.125 12.5H10.875C11.4844 12.5 12 12.0078 12 11.375V6.38281L7.07812 9.92188C6.75 10.1797 6.375 10.2969 6 10.2969ZM11.5547 4.32031C11.3438 4.17969 11.1562 4.01562 10.875 3.80469V2.75C10.875 2.14062 10.3594 1.625 9.75 1.625H7.92188C7.85156 1.57812 7.78125 1.53125 7.71094 1.48438C7.3125 1.20312 6.53906 0.5 6 0.5C5.4375 0.5 4.66406 1.20312 4.26562 1.48438C4.19531 1.53125 4.125 1.57812 4.05469 1.625H2.25C1.61719 1.625 1.125 2.14062 1.125 2.75V3.80469C0.820312 4.01562 0.632812 4.17969 0.421875 4.32031C0.164062 4.53125 0 4.85938 0 5.21094V5.46875L2.25 7.08594V2.75H9.75V7.08594L12 5.46875V5.21094C12 4.85938 11.8359 4.55469 11.5547 4.32031Z"),f(t,"fill","#6A7285"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"12"},{height:"13"},{viewBox:"0 0 12 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function hs(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class kr extends it{constructor(e){super();We(this,e,hs,ms,Ue,{})}}function _s(i){let e,t,n=[{width:"12"},{height:"9"},{viewBox:"0 0 12 9"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,fill:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M11.7656 2.97656C11.2266 3.39844 10.5469 3.91406 8.15625 5.64844C7.6875 6 6.82031 6.77344 6 6.77344C5.15625 6.77344 4.3125 6 3.82031 5.64844C1.42969 3.91406 0.75 3.39844 0.210938 2.97656C0.117188 2.90625 0 2.97656 0 3.09375V7.875C0 8.50781 0.492188 9 1.125 9H10.875C11.4844 9 12 8.50781 12 7.875V3.09375C12 2.97656 11.8594 2.90625 11.7656 2.97656ZM6 6C6.53906 6.02344 7.3125 5.32031 7.71094 5.03906C10.8281 2.78906 11.0625 2.57812 11.7656 2.01562C11.9062 1.92188 12 1.75781 12 1.57031V1.125C12 0.515625 11.4844 0 10.875 0H1.125C0.492188 0 0 0.515625 0 1.125V1.57031C0 1.75781 0.0703125 1.92188 0.210938 2.01562C0.914062 2.57812 1.14844 2.78906 4.26562 5.03906C4.66406 5.32031 5.4375 6.02344 6 6Z"),f(t,"fill","#6A7285"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"12"},{height:"9"},{viewBox:"0 0 12 9"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function ps(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Er extends it{constructor(e){super();We(this,e,ps,_s,Ue,{})}}function gs(i){let e,t,n,r,a=[{width:"17"},{height:"16"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{viewBox:"0 0 511.36 511.36"},{style:"enable-background:new 0 0 511.36 511.36;"},{"xml:space":"preserve"},i[0]],l={};for(let s=0;s<a.length;s+=1)l=ie(l,a[s]);return{c(){e=W("svg"),t=W("g"),n=W("g"),r=W("path"),this.h()},l(s){e=Q(s,"svg",{width:!0,height:!0,xmlns:!0,"xmlns:xlink":!0,x:!0,y:!0,viewBox:!0,style:!0,"xml:space":!0});var o=K(e);t=Q(o,"g",{});var c=K(t);n=Q(c,"g",{});var d=K(n);r=Q(d,"path",{d:!0}),K(r).forEach(u),d.forEach(u),c.forEach(u),o.forEach(u),this.h()},h(){f(r,"d",`M454.827,35.2c-46.933-46.933-122.027-46.933-168.96,0L63.147,258.773c-3.413,3.413-3.413,8.533,0,11.947\r
			s8.533,3.413,11.947,0l222.72-223.573c40.107-40.107,104.96-40.107,145.067,0c40.107,40.107,40.107,104.96,0,145.067\r
			L162.133,472.96c-28.16,28.16-74.24,28.16-102.4,0c-28.16-28.16-28.16-74.24,0-102.4l226.133-226.987\r
			c17.067-16.213,43.52-17.067,60.587,0c16.213,17.067,16.213,44.373,0,60.587l-168.96,169.813c-3.413,3.413-3.413,8.533,0,11.947\r
			c3.413,3.413,8.533,3.413,11.947,0L358.4,216.96c23.04-23.04,23.04-61.44,0-84.48c-23.04-23.04-61.44-23.04-84.48,0\r
			L47.787,358.613c-34.987,34.133-34.987,91.307,0,126.293c17.067,17.92,40.107,26.453,63.147,26.453\r
			c23.04,0,46.08-8.533,63.147-26.453L454.827,204.16c22.187-22.187,34.987-52.907,34.987-84.48\r
			C489.813,88.107,477.013,57.387,454.827,35.2z`),Te(e,l)},m(s,o){et(s,e,o),fe(e,t),fe(t,n),fe(n,r)},p(s,[o]){Te(e,l=tt(a,[{width:"17"},{height:"16"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{x:"0px"},{y:"0px"},{viewBox:"0 0 511.36 511.36"},{style:"enable-background:new 0 0 511.36 511.36;"},{"xml:space":"preserve"},o&1&&s[0]]))},i:k,o:k,d(s){s&&u(e)}}}function bs(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class vs extends it{constructor(e){super();We(this,e,bs,gs,Ue,{})}}function ws(i){let e,t,n,r=[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],a={};for(let l=0;l<r.length;l+=1)a=ie(a,r[l]);return{c(){e=W("svg"),t=W("path"),n=W("path"),this.h()},l(l){e=Q(l,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=K(e);t=Q(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(t).forEach(u),n=Q(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(n).forEach(u),s.forEach(u),this.h()},h(){f(t,"d","M11.7605 17.3029L6.32422 12.1494L11.7605 6.99968"),f(t,"stroke","#161717"),f(t,"stroke-width","1.5"),f(t,"stroke-miterlimit","10"),f(n,"d","M6.42791 12.1494L18 12.1494"),f(n,"stroke","#161717"),f(n,"stroke-width","1.5"),f(n,"stroke-miterlimit","10"),Te(e,a)},m(l,s){et(l,e,s),fe(e,t),fe(e,n)},p(l,[s]){Te(e,a=tt(r,[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&l[0]]))},i:k,o:k,d(l){l&&u(e)}}}function ys(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class ks extends it{constructor(e){super();We(this,e,ys,ws,Ue,{})}}function Es(i){let e,t,n=[{width:"30"},{height:"28"},{style:"margin-top:2px"},{viewBox:"0 0 20 20"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,style:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,fill:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M10 2C14.4183 2 18 5.58172 18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2ZM10 3C6.13401 3 3 6.13401 3 10C3 13.866 6.13401 17 10 17C13.866 17 17 13.866 17 10C17 6.13401 13.866 3 10 3ZM10 12.5C10.4142 12.5 10.75 12.8358 10.75 13.25C10.75 13.6642 10.4142 14 10 14C9.58579 14 9.25 13.6642 9.25 13.25C9.25 12.8358 9.58579 12.5 10 12.5ZM10 6C10.2455 6 10.4496 6.17688 10.4919 6.41012L10.5 6.5V11C10.5 11.2761 10.2761 11.5 10 11.5C9.75454 11.5 9.55039 11.3231 9.50806 11.0899L9.5 11V6.5C9.5 6.22386 9.72386 6 10 6Z"),f(t,"fill","white"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"30"},{height:"28"},{style:"margin-top:2px"},{viewBox:"0 0 20 20"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function Ts(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Cs extends it{constructor(e){super();We(this,e,Ts,Es,Ue,{})}}function As(i){let e,t,n=[{width:"16"},{height:"16"},{viewBox:"0 0 16 16"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,fill:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M11.2452 0.817058C12.332 -0.269749 14.0941 -0.269749 15.1809 0.817058C16.2224 1.85858 16.2658 3.52026 15.3111 4.61346L15.1809 4.75273L5.57506 14.3586C5.36997 14.5636 5.12323 14.7212 4.85236 14.821L4.68708 14.8739L0.632111 15.9798C0.285522 16.0743 -0.0345414 15.7857 0.00300655 15.4452L0.0181704 15.3658L1.12407 11.3109C1.20039 11.031 1.33646 10.7718 1.52212 10.5508L1.63939 10.4229L11.2452 0.817058ZM10.385 3.09195L2.34649 11.13C2.2542 11.2223 2.18117 11.3314 2.13111 11.4511L2.08884 11.574L1.2122 14.7847L4.42397 13.9091C4.50791 13.8862 4.58815 13.8526 4.66278 13.8093L4.77028 13.7372L4.86796 13.6515L12.906 5.61295L10.385 3.09195ZM14.4738 1.52417C13.8162 0.866565 12.7727 0.830031 12.0722 1.41457L11.9523 1.52417L11.092 2.38495L13.613 4.90595L14.4738 4.04563C15.1314 3.38803 15.1679 2.34455 14.5834 1.64407L14.4738 1.52417Z"),f(t,"fill","#ffffff"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"16"},{height:"16"},{viewBox:"0 0 16 16"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function Ss(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Tr extends it{constructor(e){super();We(this,e,Ss,As,Ue,{})}}function Os(i){let e,t=(i[0].given_name&&i[0].surname?i[0].given_name.charAt(0)+i[0].surname.charAt(0):i[0].name?i[0].name.charAt(0):i[0].email?i[0].email.charAt(0):"?")+"",n;return{c(){e=v("p"),n=J(t),bi(e,"margin","0")},m(r,a){g(r,e,a),y(e,n)},p(r,a){a&1&&t!==(t=(r[0].given_name&&r[0].surname?r[0].given_name.charAt(0)+r[0].surname.charAt(0):r[0].name?r[0].name.charAt(0):r[0].email?r[0].email.charAt(0):"?")+"")&&pe(n,t)},d(r){r&&u(e)}}}function Ls(i){let e,t;return{c(){e=v("img"),f(e,"alt",""),bi(e,"height",i[1]),bi(e,"width",i[2]),bi(e,"border-radius","50%"),Cn(e.src,t="data:image/jpg;base64,"+i[3])||f(e,"src",t)},m(n,r){g(n,e,r)},p(n,r){r&2&&bi(e,"height",n[1]),r&4&&bi(e,"width",n[2]),r&8&&!Cn(e.src,t="data:image/jpg;base64,"+n[3])&&f(e,"src",t)},d(n){n&&u(e)}}}function Ms(i){let e;function t(a,l){if(a[3])return Ls;if(a[0])return Os}let n=t(i),r=n&&n(i);return{c(){r&&r.c(),e=Be(),this.c=k},m(a,l){r&&r.m(a,l),g(a,e,l)},p(a,[l]){n===(n=t(a))&&r?r.p(a,l):(r&&r.d(1),r=n&&n(a),r&&(r.c(),r.m(e.parentNode,e)))},i:k,o:k,d(a){r&&r.d(a),a&&u(e)}}}function Ns(i,e,t){let n,{contact:r}=e,{contact_query:a}=e,{height:l="32px"}=e,{width:s="32px"}=e;return Ia(async()=>{r&&r.picture_url?t(3,n=await So.getContactAvatar(a,r.id)):t(3,n=null)}),i.$$set=o=>{"contact"in o&&t(0,r=o.contact),"contact_query"in o&&t(4,a=o.contact_query),"height"in o&&t(1,l=o.height),"width"in o&&t(2,s=o.width)},t(3,n=null),[r,l,s,n,a]}class Ds extends Jt{constructor(e){super();We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},Ns,Ms,Ue,{contact:0,contact_query:4,height:1,width:2},null),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["contact","contact_query","height","width"]}get contact(){return this.$$.ctx[0]}set contact(e){this.$$set({contact:e}),re()}get contact_query(){return this.$$.ctx[4]}set contact_query(e){this.$$set({contact_query:e}),re()}get height(){return this.$$.ctx[1]}set height(e){this.$$set({height:e}),re()}get width(){return this.$$.ctx[2]}set width(e){this.$$set({width:e}),re()}}customElements.define("nylas-contact-image",Ds);const Cr=i=>i.content_disposition==="attachment"&&!!i.filename&&!jo.includes(i.content_type);var Ps=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function js(i,e,t){return t={path:e,exports:{},require:function(n,r){return Rs(n,r==null?t.path:r)}},i(t,t.exports),t.exports}function Rs(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var Ei=js(function(i,e){/*! @license DOMPurify 2.3.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.5/LICENSE */(function(t,n){i.exports=n()})(Ps,function(){function t(G){if(Array.isArray(G)){for(var q=0,ue=Array(G.length);q<G.length;q++)ue[q]=G[q];return ue}else return Array.from(G)}var n=Object.hasOwnProperty,r=Object.setPrototypeOf,a=Object.isFrozen,l=Object.getPrototypeOf,s=Object.getOwnPropertyDescriptor,o=Object.freeze,c=Object.seal,d=Object.create,m=typeof Reflect!="undefined"&&Reflect,h=m.apply,b=m.construct;h||(h=function(q,ue,be){return q.apply(ue,be)}),o||(o=function(q){return q}),c||(c=function(q){return q}),b||(b=function(q,ue){return new(Function.prototype.bind.apply(q,[null].concat(t(ue))))});var _=X(Array.prototype.forEach),O=X(Array.prototype.pop),P=X(Array.prototype.push),C=X(String.prototype.toLowerCase),I=X(String.prototype.match),N=X(String.prototype.replace),oe=X(String.prototype.indexOf),le=X(String.prototype.trim),ee=X(RegExp.prototype.test),Z=L(TypeError);function X(G){return function(q){for(var ue=arguments.length,be=Array(ue>1?ue-1:0),Je=1;Je<ue;Je++)be[Je-1]=arguments[Je];return h(G,q,be)}}function L(G){return function(){for(var q=arguments.length,ue=Array(q),be=0;be<q;be++)ue[be]=arguments[be];return b(G,ue)}}function x(G,q){r&&r(G,null);for(var ue=q.length;ue--;){var be=q[ue];if(typeof be=="string"){var Je=C(be);Je!==be&&(a(q)||(q[ue]=Je),be=Je)}G[be]=!0}return G}function Oe(G){var q=d(null),ue=void 0;for(ue in G)h(n,G,[ue])&&(q[ue]=G[ue]);return q}function Ne(G,q){for(;G!==null;){var ue=s(G,q);if(ue){if(ue.get)return X(ue.get);if(typeof ue.value=="function")return X(ue.value)}G=l(G)}function be(Je){return console.warn("fallback value for",Je),null}return be}var ye=o(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),he=o(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),de=o(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),te=o(["animate","color-profile","cursor","discard","fedropshadow","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),Le=o(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),U=o(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),_e=o(["#text"]),De=o(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","xmlns","slot"]),ke=o(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),Me=o(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),R=o(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),Ee=c(/\{\{[\s\S]*|[\s\S]*\}\}/gm),Xe=c(/<%[\s\S]*|[\s\S]*%>/gm),H=c(/^data-[\-\w.\u00B7-\uFFFF]/),ge=c(/^aria-[\-\w]+$/),M=c(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),ct=c(/^(?:\w+script|data):/i),se=c(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),qe=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(G){return typeof G}:function(G){return G&&typeof Symbol=="function"&&G.constructor===Symbol&&G!==Symbol.prototype?"symbol":typeof G};function Ze(G){if(Array.isArray(G)){for(var q=0,ue=Array(G.length);q<G.length;q++)ue[q]=G[q];return ue}else return Array.from(G)}var Pe=function(){return typeof window=="undefined"?null:window},je=function(q,ue){if((typeof q=="undefined"?"undefined":qe(q))!=="object"||typeof q.createPolicy!="function")return null;var be=null,Je="data-tt-policy-suffix";ue.currentScript&&ue.currentScript.hasAttribute(Je)&&(be=ue.currentScript.getAttribute(Je));var pt="dompurify"+(be?"#"+be:"");try{return q.createPolicy(pt,{createHTML:function(Ye){return Ye}})}catch(ft){return console.warn("TrustedTypes policy "+pt+" could not be created."),null}};function Qe(){var G=arguments.length>0&&arguments[0]!==void 0?arguments[0]:Pe(),q=function(w){return Qe(w)};if(q.version="2.3.5",q.removed=[],!G||!G.document||G.document.nodeType!==9)return q.isSupported=!1,q;var ue=G.document,be=G.document,Je=G.DocumentFragment,pt=G.HTMLTemplateElement,ft=G.Node,Ye=G.Element,Dt=G.NodeFilter,j=G.NamedNodeMap,si=j===void 0?G.NamedNodeMap||G.MozNamedAttrMap:j,ci=G.HTMLFormElement,di=G.DOMParser,Hi=G.trustedTypes,yt=Ye.prototype,Ci=Ne(yt,"cloneNode"),Rt=Ne(yt,"nextSibling"),Xt=Ne(yt,"childNodes"),St=Ne(yt,"parentNode");if(typeof pt=="function"){var fi=be.createElement("template");fi.content&&fi.content.ownerDocument&&(be=fi.content.ownerDocument)}var kt=je(Hi,ue),Ai=kt?kt.createHTML(""):"",Qt=be,qt=Qt.implementation,zi=Qt.createNodeIterator,Bt=Qt.createDocumentFragment,Ht=Qt.getElementsByTagName,Vi=ue.importNode,ui={};try{ui=Oe(be).documentMode?be.documentMode:{}}catch(ce){}var gt={};q.isSupported=typeof St=="function"&&qt&&typeof qt.createHTMLDocument!="undefined"&&ui!==9;var Ot=Ee,mi=Xe,Si=H,Oi=ge,Li=ct,Mi=se,E=M,D=null,me=x({},[].concat(Ze(ye),Ze(he),Ze(de),Ze(Le),Ze(_e))),$=null,Re=x({},[].concat(Ze(De),Ze(ke),Ze(Me),Ze(R))),Ce=Object.seal(Object.create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),ze=null,At=null,Pt=!0,zt=!0,ut=!1,Et=!1,Vt=!1,Gi=!1,hi=!1,$t=!1,Ni=!1,Di=!1,ln=!0,Wi=!0,_i=!1,ei={},ti=null,an=x({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]),on=null,sn=x({},["audio","video","img","source","image","track"]),Zi=null,cn=x({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),Ji="http://www.w3.org/1998/Math/MathML",Yi="http://www.w3.org/2000/svg",It="http://www.w3.org/1999/xhtml",Pi=It,Ki=!1,p=void 0,T=["application/xhtml+xml","text/html"],V="text/html",ae=void 0,Ve=null,xe=be.createElement("form"),$e=function(w){return w instanceof RegExp||w instanceof Function},pi=function(w){Ve&&Ve===w||((!w||(typeof w=="undefined"?"undefined":qe(w))!=="object")&&(w={}),w=Oe(w),D="ALLOWED_TAGS"in w?x({},w.ALLOWED_TAGS):me,$="ALLOWED_ATTR"in w?x({},w.ALLOWED_ATTR):Re,Zi="ADD_URI_SAFE_ATTR"in w?x(Oe(cn),w.ADD_URI_SAFE_ATTR):cn,on="ADD_DATA_URI_TAGS"in w?x(Oe(sn),w.ADD_DATA_URI_TAGS):sn,ti="FORBID_CONTENTS"in w?x({},w.FORBID_CONTENTS):an,ze="FORBID_TAGS"in w?x({},w.FORBID_TAGS):{},At="FORBID_ATTR"in w?x({},w.FORBID_ATTR):{},ei="USE_PROFILES"in w?w.USE_PROFILES:!1,Pt=w.ALLOW_ARIA_ATTR!==!1,zt=w.ALLOW_DATA_ATTR!==!1,ut=w.ALLOW_UNKNOWN_PROTOCOLS||!1,Et=w.SAFE_FOR_TEMPLATES||!1,Vt=w.WHOLE_DOCUMENT||!1,$t=w.RETURN_DOM||!1,Ni=w.RETURN_DOM_FRAGMENT||!1,Di=w.RETURN_TRUSTED_TYPE||!1,hi=w.FORCE_BODY||!1,ln=w.SANITIZE_DOM!==!1,Wi=w.KEEP_CONTENT!==!1,_i=w.IN_PLACE||!1,E=w.ALLOWED_URI_REGEXP||E,Pi=w.NAMESPACE||It,w.CUSTOM_ELEMENT_HANDLING&&$e(w.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(Ce.tagNameCheck=w.CUSTOM_ELEMENT_HANDLING.tagNameCheck),w.CUSTOM_ELEMENT_HANDLING&&$e(w.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(Ce.attributeNameCheck=w.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),w.CUSTOM_ELEMENT_HANDLING&&typeof w.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements=="boolean"&&(Ce.allowCustomizedBuiltInElements=w.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),p=T.indexOf(w.PARSER_MEDIA_TYPE)===-1?p=V:p=w.PARSER_MEDIA_TYPE,ae=p==="application/xhtml+xml"?function(B){return B}:C,Et&&(zt=!1),Ni&&($t=!0),ei&&(D=x({},[].concat(Ze(_e))),$=[],ei.html===!0&&(x(D,ye),x($,De)),ei.svg===!0&&(x(D,he),x($,ke),x($,R)),ei.svgFilters===!0&&(x(D,de),x($,ke),x($,R)),ei.mathMl===!0&&(x(D,Le),x($,Me),x($,R))),w.ADD_TAGS&&(D===me&&(D=Oe(D)),x(D,w.ADD_TAGS)),w.ADD_ATTR&&($===Re&&($=Oe($)),x($,w.ADD_ATTR)),w.ADD_URI_SAFE_ATTR&&x(Zi,w.ADD_URI_SAFE_ATTR),w.FORBID_CONTENTS&&(ti===an&&(ti=Oe(ti)),x(ti,w.FORBID_CONTENTS)),Wi&&(D["#text"]=!0),Vt&&x(D,["html","head","body"]),D.table&&(x(D,["tbody"]),delete ze.tbody),o&&o(w),Ve=w)},ji=x({},["mi","mo","mn","ms","mtext"]),ii=x({},["foreignobject","desc","title","annotation-xml"]),mt=x({},he);x(mt,de),x(mt,te);var Lt=x({},Le);x(Lt,U);var gi=function(w){var B=St(w);(!B||!B.tagName)&&(B={namespaceURI:It,tagName:"template"});var ne=C(w.tagName),Ge=C(B.tagName);if(w.namespaceURI===Yi)return B.namespaceURI===It?ne==="svg":B.namespaceURI===Ji?ne==="svg"&&(Ge==="annotation-xml"||ji[Ge]):Boolean(mt[ne]);if(w.namespaceURI===Ji)return B.namespaceURI===It?ne==="math":B.namespaceURI===Yi?ne==="math"&&ii[Ge]:Boolean(Lt[ne]);if(w.namespaceURI===It){if(B.namespaceURI===Yi&&!ii[Ge]||B.namespaceURI===Ji&&!ji[Ge])return!1;var ht=x({},["title","style","font","a","script"]);return!Lt[ne]&&(ht[ne]||!mt[ne])}return!1},Tt=function(w){P(q.removed,{element:w});try{w.parentNode.removeChild(w)}catch(B){try{w.outerHTML=Ai}catch(ne){w.remove()}}},ba=function(w,B){try{P(q.removed,{attribute:B.getAttributeNode(w),from:B})}catch(ne){P(q.removed,{attribute:null,from:B})}if(B.removeAttribute(w),w==="is"&&!$[w])if($t||Ni)try{Tt(B)}catch(ne){}else try{B.setAttribute(w,"")}catch(ne){}},va=function(w){var B=void 0,ne=void 0;if(hi)w="<remove></remove>"+w;else{var Ge=I(w,/^[\r\n\t ]+/);ne=Ge&&Ge[0]}p==="application/xhtml+xml"&&(w='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+w+"</body></html>");var ht=kt?kt.createHTML(w):w;if(Pi===It)try{B=new di().parseFromString(ht,p)}catch(dt){}if(!B||!B.documentElement){B=qt.createDocument(Pi,"template",null);try{B.documentElement.innerHTML=Ki?"":ht}catch(dt){}}var _t=B.body||B.documentElement;return w&&ne&&_t.insertBefore(be.createTextNode(ne),_t.childNodes[0]||null),Pi===It?Ht.call(B,Vt?"html":"body")[0]:Vt?B.documentElement:_t},wa=function(w){return zi.call(w.ownerDocument||w,w,Dt.SHOW_ELEMENT|Dt.SHOW_COMMENT|Dt.SHOW_TEXT,null,!1)},df=function(w){return w instanceof ci&&(typeof w.nodeName!="string"||typeof w.textContent!="string"||typeof w.removeChild!="function"||!(w.attributes instanceof si)||typeof w.removeAttribute!="function"||typeof w.setAttribute!="function"||typeof w.namespaceURI!="string"||typeof w.insertBefore!="function")},Xi=function(w){return(typeof ft=="undefined"?"undefined":qe(ft))==="object"?w instanceof ft:w&&(typeof w=="undefined"?"undefined":qe(w))==="object"&&typeof w.nodeType=="number"&&typeof w.nodeName=="string"},Gt=function(w,B,ne){!gt[w]||_(gt[w],function(Ge){Ge.call(q,B,ne,Ve)})},ya=function(w){var B=void 0;if(Gt("beforeSanitizeElements",w,null),df(w)||I(w.nodeName,/[\u0080-\uFFFF]/))return Tt(w),!0;var ne=ae(w.nodeName);if(Gt("uponSanitizeElement",w,{tagName:ne,allowedTags:D}),!Xi(w.firstElementChild)&&(!Xi(w.content)||!Xi(w.content.firstElementChild))&&ee(/<[/\w]/g,w.innerHTML)&&ee(/<[/\w]/g,w.textContent)||ne==="select"&&ee(/<template/i,w.innerHTML))return Tt(w),!0;if(!D[ne]||ze[ne]){if(Wi&&!ti[ne]){var Ge=St(w)||w.parentNode,ht=Xt(w)||w.childNodes;if(ht&&Ge)for(var _t=ht.length,dt=_t-1;dt>=0;--dt)Ge.insertBefore(Ci(ht[dt],!0),Rt(w))}return!ze[ne]&&Ea(ne)&&(Ce.tagNameCheck instanceof RegExp&&ee(Ce.tagNameCheck,ne)||Ce.tagNameCheck instanceof Function&&Ce.tagNameCheck(ne))?!1:(Tt(w),!0)}return w instanceof Ye&&!gi(w)||(ne==="noscript"||ne==="noembed")&&ee(/<\/no(script|embed)/i,w.innerHTML)?(Tt(w),!0):(Et&&w.nodeType===3&&(B=w.textContent,B=N(B,Ot," "),B=N(B,mi," "),w.textContent!==B&&(P(q.removed,{element:w.cloneNode()}),w.textContent=B)),Gt("afterSanitizeElements",w,null),!1)},ka=function(w,B,ne){if(ln&&(B==="id"||B==="name")&&(ne in be||ne in xe))return!1;if(!(zt&&!At[B]&&ee(Si,B))){if(!(Pt&&ee(Oi,B))){if(!$[B]||At[B]){if(!(Ea(w)&&(Ce.tagNameCheck instanceof RegExp&&ee(Ce.tagNameCheck,w)||Ce.tagNameCheck instanceof Function&&Ce.tagNameCheck(w))&&(Ce.attributeNameCheck instanceof RegExp&&ee(Ce.attributeNameCheck,B)||Ce.attributeNameCheck instanceof Function&&Ce.attributeNameCheck(B))||B==="is"&&Ce.allowCustomizedBuiltInElements&&(Ce.tagNameCheck instanceof RegExp&&ee(Ce.tagNameCheck,ne)||Ce.tagNameCheck instanceof Function&&Ce.tagNameCheck(ne))))return!1}else if(!Zi[B]){if(!ee(E,N(ne,Mi,""))){if(!((B==="src"||B==="xlink:href"||B==="href")&&w!=="script"&&oe(ne,"data:")===0&&on[w])){if(!(ut&&!ee(Li,N(ne,Mi,"")))){if(ne)return!1}}}}}}return!0},Ea=function(w){return w.indexOf("-")>0},Ta=function(w){var B=void 0,ne=void 0,Ge=void 0,ht=void 0;Gt("beforeSanitizeAttributes",w,null);var _t=w.attributes;if(!!_t){var dt={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:$};for(ht=_t.length;ht--;){B=_t[ht];var dn=B,Mt=dn.name,Ca=dn.namespaceURI;if(ne=le(B.value),Ge=ae(Mt),dt.attrName=Ge,dt.attrValue=ne,dt.keepAttr=!0,dt.forceKeepAttr=void 0,Gt("uponSanitizeAttribute",w,dt),ne=dt.attrValue,!dt.forceKeepAttr&&(ba(Mt,w),!!dt.keepAttr)){if(ee(/\/>/i,ne)){ba(Mt,w);continue}Et&&(ne=N(ne,Ot," "),ne=N(ne,mi," "));var uf=ae(w.nodeName);if(!!ka(uf,Ge,ne))try{Ca?w.setAttributeNS(Ca,Mt,ne):w.setAttribute(Mt,ne),O(q.removed)}catch(mf){}}}Gt("afterSanitizeAttributes",w,null)}},ff=function ce(w){var B=void 0,ne=wa(w);for(Gt("beforeSanitizeShadowDOM",w,null);B=ne.nextNode();)Gt("uponSanitizeShadowNode",B,null),!ya(B)&&(B.content instanceof Je&&ce(B.content),Ta(B));Gt("afterSanitizeShadowDOM",w,null)};return q.sanitize=function(ce,w){var B=void 0,ne=void 0,Ge=void 0,ht=void 0,_t=void 0;if(Ki=!ce,Ki&&(ce="<!-->"),typeof ce!="string"&&!Xi(ce)){if(typeof ce.toString!="function")throw Z("toString is not a function");if(ce=ce.toString(),typeof ce!="string")throw Z("dirty is not a string, aborting")}if(!q.isSupported){if(qe(G.toStaticHTML)==="object"||typeof G.toStaticHTML=="function"){if(typeof ce=="string")return G.toStaticHTML(ce);if(Xi(ce))return G.toStaticHTML(ce.outerHTML)}return ce}if(Gi||pi(w),q.removed=[],typeof ce=="string"&&(_i=!1),_i){if(ce.nodeName){var dt=ae(ce.nodeName);if(!D[dt]||ze[dt])throw Z("root node is forbidden and cannot be sanitized in-place")}}else if(ce instanceof ft)B=va("<!---->"),ne=B.ownerDocument.importNode(ce,!0),ne.nodeType===1&&ne.nodeName==="BODY"||ne.nodeName==="HTML"?B=ne:B.appendChild(ne);else{if(!$t&&!Et&&!Vt&&ce.indexOf("<")===-1)return kt&&Di?kt.createHTML(ce):ce;if(B=va(ce),!B)return $t?null:Di?Ai:""}B&&hi&&Tt(B.firstChild);for(var dn=wa(_i?ce:B);Ge=dn.nextNode();)Ge.nodeType===3&&Ge===ht||ya(Ge)||(Ge.content instanceof Je&&ff(Ge.content),Ta(Ge),ht=Ge);if(ht=null,_i)return ce;if($t){if(Ni)for(_t=Bt.call(B.ownerDocument);B.firstChild;)_t.appendChild(B.firstChild);else _t=B;return $.shadowroot&&(_t=Vi.call(ue,_t,!0)),_t}var Mt=Vt?B.outerHTML:B.innerHTML;return Et&&(Mt=N(Mt,Ot," "),Mt=N(Mt,mi," ")),kt&&Di?kt.createHTML(Mt):Mt},q.setConfig=function(ce){pi(ce),Gi=!0},q.clearConfig=function(){Ve=null,Gi=!1},q.isValidAttribute=function(ce,w,B){Ve||pi({});var ne=ae(ce),Ge=ae(w);return ka(ne,Ge,B)},q.addHook=function(ce,w){typeof w=="function"&&(gt[ce]=gt[ce]||[],P(gt[ce],w))},q.removeHook=function(ce){gt[ce]&&O(gt[ce])},q.removeHooks=function(ce){gt[ce]&&(gt[ce]=[])},q.removeAllHooks=function(){gt={}},q}var Ut=Qe();return Ut})});function Ar(i,e,t){const n=i.slice();return n[6]=e[t],n}function Sr(i){let e,t,n=i[2]&&Array.isArray(i[2])&&i[2].length>0,r=typeof i[1]!==null&&Or(i),a=n&&Lr(i);return{c(){r&&r.c(),e=z(),t=v("div"),a&&a.c(),f(t,"class","attachment")},m(l,s){r&&r.m(l,s),g(l,e,s),g(l,t,s),a&&a.m(t,null)},p(l,s){typeof l[1]!==null?r?r.p(l,s):(r=Or(l),r.c(),r.m(e.parentNode,e)):r&&(r.d(1),r=null),s&4&&(n=l[2]&&Array.isArray(l[2])&&l[2].length>0),n?a?a.p(l,s):(a=Lr(l),a.c(),a.m(t,null)):a&&(a.d(1),a=null)},d(l){r&&r.d(l),l&&u(e),l&&u(t),a&&a.d()}}}function Or(i){let e,t=Ei.sanitize(i[1])+"",n;return{c(){e=new mn,n=Be(),e.a=n},m(r,a){e.m(t,r,a),g(r,n,a)},p(r,a){a&2&&t!==(t=Ei.sanitize(r[1])+"")&&e.p(t)},d(r){r&&u(n),r&&e.d()}}}function Lr(i){let e,t=i[2],n=[];for(let r=0;r<t.length;r+=1)n[r]=Mr(Ar(i,t,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=Be()},m(r,a){for(let l=0;l<n.length;l+=1)n[l].m(r,a);g(r,e,a)},p(r,a){if(a&12){t=r[2];let l;for(l=0;l<t.length;l+=1){const s=Ar(r,t,l);n[l]?n[l].p(s,a):(n[l]=Mr(s),n[l].c(),n[l].m(e.parentNode,e))}for(;l<n.length;l+=1)n[l].d(1);n.length=t.length}},d(r){bt(n,r),r&&u(e)}}}function Mr(i){let e,t=(i[6].filename||i[6].id)+"",n,r,a,l;function s(...o){return i[4](i[6],...o)}return{c(){e=v("button"),n=J(t),r=z()},m(o,c){g(o,e,c),y(e,n),y(e,r),a||(l=Y(e,"click",Ke(s)),a=!0)},p(o,c){i=o,c&4&&t!==(t=(i[6].filename||i[6].id)+"")&&pe(n,t)},d(o){o&&u(e),a=!1,l()}}}function Is(i){let e,t=i[0]&&Sr(i);return{c(){e=v("div"),t&&t.c(),this.c=k},m(n,r){g(n,e,r),t&&t.m(e,null)},p(n,[r]){n[0]?t?t.p(n,r):(t=Sr(n),t.c(),t.m(e,null)):t&&(t.d(1),t=null)},i:k,o:k,d(n){n&&u(e),t&&t.d()}}}function Fs(i,e,t){let{message:n}=e,{body:r}=e;const a=Ui(Zt());async function l(c,d){c.stopImmediatePropagation(),a("downloadClicked",{event:c,message:n,file:d})}let s=[];hn(()=>{if(n&&n.files.length>0)for(const[c,d]of n.files.entries())Cr(d)&&t(2,s=[...s,n.files[c]])});const o=(c,d)=>l(d,c);return i.$$set=c=>{"message"in c&&t(0,n=c.message),"body"in c&&t(1,r=c.body)},[n,r,s,l,o]}class xs extends Jt{constructor(e){super();this.shadowRoot.innerHTML="<style>div{width:inherit}div div.attachment{margin:1rem 0 0 0;display:flex;gap:0.5rem}div div.attachment button{height:fit-content;width:max-content;padding:0.3rem 1rem;border:1px solid var(--grey);border-radius:30px;background:white;cursor:pointer}div div.attachment button:hover{background:var(--grey-light)}</style>",We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},Fs,Is,Ue,{message:0,body:1},null),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["message","body"]}get message(){return this.$$.ctx[0]}set message(e){this.$$set({message:e}),re()}get body(){return this.$$.ctx[1]}set body(e){this.$$set({body:e}),re()}}customElements.define("nylas-message-body",xs);function Nr(i){let e,t;return{c(){e=v("p"),t=J(i[3])},m(n,r){g(n,e,r),y(e,t)},p(n,r){r&8&&pe(t,n[3])},d(n){n&&u(e)}}}function Dr(i){let e,t,n;var r=i[2];function a(l){return{props:{"aria-hidden":"true"}}}return r&&(t=new r(a())),{c(){e=v("div"),t&&He(t.$$.fragment),f(e,"class","icon-container"),we(e,"reverse-icon",i[2]&&i[4])},m(l,s){g(l,e,s),t&&Fe(t,e,null),n=!0},p(l,s){if(r!==(r=l[2])){if(t){Ae();const o=t;F(o.$$.fragment,1,0,()=>{Ie(o,1)}),Se()}r?(t=new r(a()),He(t.$$.fragment),A(t.$$.fragment,1),Fe(t,e,null)):t=null}s&20&&we(e,"reverse-icon",l[2]&&l[4])},i(l){n||(t&&A(t.$$.fragment,l),n=!0)},o(l){t&&F(t.$$.fragment,l),n=!1},d(l){l&&u(e),t&&Ie(t)}}}function Pr(i){let e,t;return{c(){e=v("p"),t=J(i[0]),f(e,"id",i[1]),f(e,"role","tooltip"),f(e,"tabindex","0"),f(e,"class","tooltip")},m(n,r){g(n,e,r),y(e,t)},p(n,r){r&1&&pe(t,n[0]),r&2&&f(e,"id",n[1])},d(n){n&&u(e)}}}function Us(i){let e,t,n,r,a,l,s,o,c,d,m=i[3]&&Nr(i),h=i[2]&&Dr(i),b=i[4]&&Pr(i);return{c(){e=v("button"),m&&m.c(),t=z(),h&&h.c(),l=z(),b&&b.c(),s=Be(),this.c=k,f(e,"class","tooltip-trigger"),f(e,"aria-expanded",n=i[4]?"true":"false"),f(e,"id",r=i[1]?`tooltip-trigger-${i[1]}`:""),f(e,"aria-describedby",i[1]),f(e,"aria-label",a=i[4]?"hide email":"show email")},m(_,O){g(_,e,O),m&&m.m(e,null),y(e,t),h&&h.m(e,null),g(_,l,O),b&&b.m(_,O),g(_,s,O),o=!0,c||(d=Y(e,"click",Ke(i[7])),c=!0)},p(_,[O]){_[3]?m?m.p(_,O):(m=Nr(_),m.c(),m.m(e,t)):m&&(m.d(1),m=null),_[2]?h?(h.p(_,O),O&4&&A(h,1)):(h=Dr(_),h.c(),A(h,1),h.m(e,null)):h&&(Ae(),F(h,1,1,()=>{h=null}),Se()),(!o||O&16&&n!==(n=_[4]?"true":"false"))&&f(e,"aria-expanded",n),(!o||O&2&&r!==(r=_[1]?`tooltip-trigger-${_[1]}`:""))&&f(e,"id",r),(!o||O&2)&&f(e,"aria-describedby",_[1]),(!o||O&16&&a!==(a=_[4]?"hide email":"show email"))&&f(e,"aria-label",a),_[4]?b?b.p(_,O):(b=Pr(_),b.c(),b.m(s.parentNode,s)):b&&(b.d(1),b=null)},i(_){o||(A(h),o=!0)},o(_){F(h),o=!1},d(_){_&&u(e),m&&m.d(),h&&h.d(),_&&u(l),b&&b.d(_),_&&u(s),c=!1,d()}}}function Bs(i,e,t){let n;const r=Ui(Zt());let{current_tooltip_id:a}=e,{content:l}=e,{id:s}=e,{icon:o}=e,{text:c}=e;function d(){a!==s?r("toggleTooltip",{tooltipID:s}):t(4,n=!n)}const m=h=>d();return i.$$set=h=>{"current_tooltip_id"in h&&t(6,a=h.current_tooltip_id),"content"in h&&t(0,l=h.content),"id"in h&&t(1,s=h.id),"icon"in h&&t(2,o=h.icon),"text"in h&&t(3,c=h.text)},i.$$.update=()=>{i.$$.dirty&66&&t(4,n=!!(a&&a===s))},[l,s,o,c,n,d,a,m]}class Hs extends Jt{constructor(e){super();this.shadowRoot.innerHTML="<style>button.tooltip-trigger{background:transparent;border:none;box-shadow:none;cursor:pointer;padding:0;height:auto;display:flex;flex-direction:row;align-items:center;align-content:center;justify-content:center}.icon-container{width:1rem}.icon-container.reverse-icon{transform:rotate(180deg)}p.tooltip{background:var(--grey-lightest);border-radius:2px;color:var(--grey-dark);box-shadow:0px 3px 2px rgba(0, 0, 0, 0.25);left:50%;padding:0.5rem;position:absolute;top:8px;transform:translate(-50%, 0);width:max-content;max-width:240px;max-height:240px;overflow-y:scroll;word-break:break-word;white-space:pre-line;z-index:1}</style>",We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},Bs,Us,Ue,{current_tooltip_id:6,content:0,id:1,icon:2,text:3},null),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["current_tooltip_id","content","id","icon","text"]}get current_tooltip_id(){return this.$$.ctx[6]}set current_tooltip_id(e){this.$$set({current_tooltip_id:e}),re()}get content(){return this.$$.ctx[0]}set content(e){this.$$set({content:e}),re()}get id(){return this.$$.ctx[1]}set id(e){this.$$set({id:e}),re()}get icon(){return this.$$.ctx[2]}set icon(e){this.$$set({icon:e}),re()}get text(){return this.$$.ctx[3]}set text(e){this.$$set({text:e}),re()}}customElements.define("nylas-tooltip",Hs);function zs(i){let e,t,n,r,a,l,s,o,c,d,m,h=[{id:"Capa_1"},{"enable-background":"new 0 0 497 497"},{height:"512"},{viewBox:"0 0 497 497"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],b={};for(let _=0;_<h.length;_+=1)b=ie(b,h[_]);return{c(){e=W("svg"),t=W("g"),n=W("circle"),r=W("circle"),a=W("circle"),l=W("ellipse"),s=W("ellipse"),o=W("ellipse"),c=W("ellipse"),d=W("ellipse"),m=W("circle"),this.h()},l(_){e=Q(_,"svg",{id:!0,"enable-background":!0,height:!0,viewBox:!0,xmlns:!0});var O=K(e);t=Q(O,"g",{});var P=K(t);n=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(n).forEach(u),r=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(r).forEach(u),a=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(a).forEach(u),l=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(l).forEach(u),s=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(s).forEach(u),o=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(o).forEach(u),c=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(c).forEach(u),d=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(d).forEach(u),m=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(m).forEach(u),P.forEach(u),O.forEach(u),this.h()},h(){f(n,"cx","98"),f(n,"cy","376"),f(n,"fill","#909ba6"),f(n,"r","53"),f(r,"cx","439"),f(r,"cy","336"),f(r,"fill","#c8d2dc"),f(r,"r","46"),f(a,"cx","397"),f(a,"cy","112"),f(a,"fill","#e9edf1"),f(a,"r","38"),f(l,"cx","56.245"),f(l,"cy","244.754"),f(l,"fill","#7e8b96"),f(l,"rx","56.245"),f(l,"ry","54.874"),f(s,"cx","217.821"),f(s,"cy","447.175"),f(s,"fill","#a2abb8"),f(s,"rx","51.132"),f(s,"ry","49.825"),f(o,"cx","349.229"),f(o,"cy","427.873"),f(o,"fill","#b9c3cd"),f(o,"rx","48.575"),f(o,"ry","47.297"),f(c,"cx","117.092"),f(c,"cy","114.794"),f(c,"fill","#5f6c75"),f(c,"rx","58.801"),f(c,"ry","57.397"),f(d,"cx","453.538"),f(d,"cy","216.477"),f(d,"fill","#dce6eb"),f(d,"rx","43.462"),f(d,"ry","42.656"),f(m,"cx","263"),f(m,"cy","62"),f(m,"fill","#4e5a61"),f(m,"r","62"),Te(e,b)},m(_,O){et(_,e,O),fe(e,t),fe(t,n),fe(t,r),fe(t,a),fe(t,l),fe(t,s),fe(t,o),fe(t,c),fe(t,d),fe(t,m)},p(_,[O]){Te(e,b=tt(h,[{id:"Capa_1"},{"enable-background":"new 0 0 497 497"},{height:"512"},{viewBox:"0 0 497 497"},{xmlns:"http://www.w3.org/2000/svg"},O&1&&_[0]]))},i:k,o:k,d(_){_&&u(e)}}}function Vs(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Gs extends it{constructor(e){super();We(this,e,Vs,zs,Ue,{})}}function Ws(i){let e,t,n,r,a=[{width:"21px"},{height:"21px"},{viewBox:"0 0 21 21"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],l={};for(let s=0;s<a.length;s+=1)l=ie(l,a[s]);return{c(){e=W("svg"),t=W("g"),n=W("path"),r=W("path"),this.h()},l(s){e=Q(s,"svg",{width:!0,height:!0,viewBox:!0,xmlns:!0});var o=K(e);t=Q(o,"g",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-width":!0,transform:!0});var c=K(t);n=Q(c,"path",{d:!0}),K(n).forEach(u),r=Q(c,"path",{d:!0}),K(r).forEach(u),c.forEach(u),o.forEach(u),this.h()},h(){f(n,"d","m11 8v-2c0-1.65685425-1.34314575-3-3-3h-8"),f(r,"d","m3 6-3.001-3 3.001-3"),f(t,"fill","none"),f(t,"fill-rule","evenodd"),f(t,"stroke","currentColor"),f(t,"stroke-linecap","round"),f(t,"stroke-linejoin","round"),f(t,"stroke-width","1.5px"),f(t,"transform","translate(4.5 6.5)"),Te(e,l)},m(s,o){et(s,e,o),fe(e,t),fe(t,n),fe(t,r)},p(s,[o]){Te(e,l=tt(a,[{width:"21px"},{height:"21px"},{viewBox:"0 0 21 21"},{xmlns:"http://www.w3.org/2000/svg"},o&1&&s[0]]))},i:k,o:k,d(s){s&&u(e)}}}function Zs(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class jr extends it{constructor(e){super();We(this,e,Zs,Ws,Ue,{})}}function Js(i){let e,t,n,r,a,l=[{width:"21px"},{height:"21px"},{viewBox:"0 0 21 21"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],s={};for(let o=0;o<l.length;o+=1)s=ie(s,l[o]);return{c(){e=W("svg"),t=W("g"),n=W("path"),r=W("path"),a=W("path"),this.h()},l(o){e=Q(o,"svg",{width:!0,height:!0,viewBox:!0,xmlns:!0});var c=K(e);t=Q(c,"g",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-width":!0,transform:!0});var d=K(t);n=Q(d,"path",{d:!0}),K(n).forEach(u),r=Q(d,"path",{d:!0}),K(r).forEach(u),a=Q(d,"path",{d:!0}),K(a).forEach(u),d.forEach(u),c.forEach(u),this.h()},h(){f(n,"d","m14 8v-2c0-1.65685425-1.3431458-3-3-3h-8"),f(r,"d","m3 6-3.001-3 3.001-3"),f(a,"d","m6 6-3.001-3 3.001-3"),f(t,"fill","none"),f(t,"fill-rule","evenodd"),f(t,"stroke","currentColor"),f(t,"stroke-linecap","round"),f(t,"stroke-linejoin","round"),f(t,"stroke-width","1.5px"),f(t,"transform","translate(3.5 6.5)"),Te(e,s)},m(o,c){et(o,e,c),fe(e,t),fe(t,n),fe(t,r),fe(t,a)},p(o,[c]){Te(e,s=tt(l,[{width:"21px"},{height:"21px"},{viewBox:"0 0 21 21"},{xmlns:"http://www.w3.org/2000/svg"},c&1&&o[0]]))},i:k,o:k,d(o){o&&u(e)}}}function Ys(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Rr extends it{constructor(e){super();We(this,e,Ys,Js,Ue,{})}}function Ks(i){let e,t,n,r,a=[{width:"21px"},{height:"21px"},{viewBox:"0 0 21 21"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],l={};for(let s=0;s<a.length;s+=1)l=ie(l,a[s]);return{c(){e=W("svg"),t=W("g"),n=W("path"),r=W("path"),this.h()},l(s){e=Q(s,"svg",{width:!0,height:!0,viewBox:!0,xmlns:!0});var o=K(e);t=Q(o,"g",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-width":!0,transform:!0});var c=K(t);n=Q(c,"path",{d:!0}),K(n).forEach(u),r=Q(c,"path",{d:!0}),K(r).forEach(u),c.forEach(u),o.forEach(u),this.h()},h(){f(n,"d","m0 8v-2c0-1.65685425 1.34314575-3 3-3h8"),f(r,"d","m7.999 6 3.001-3-3.001-3"),f(t,"fill","none"),f(t,"fill-rule","evenodd"),f(t,"stroke","currentColor"),f(t,"stroke-linecap","round"),f(t,"stroke-linejoin","round"),f(t,"stroke-width","1.5px"),f(t,"transform","translate(5.5 6.5)"),Te(e,l)},m(s,o){et(s,e,o),fe(e,t),fe(t,n),fe(t,r)},p(s,[o]){Te(e,l=tt(a,[{width:"21px"},{height:"21px"},{viewBox:"0 0 21 21"},{xmlns:"http://www.w3.org/2000/svg"},o&1&&s[0]]))},i:k,o:k,d(s){s&&u(e)}}}function Xs(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Ir extends it{constructor(e){super();We(this,e,Xs,Ks,Ue,{})}}var Qs="@nylas/components-email",qs="1.1.7-canary.32",$s={type:"git",url:"github:nylas/components.git",directory:"components/email"},ec={build:"rollup -c",dev:"rollup -c -w",tscheck:"tsc && svelte-check",start:"echo 'Nothing to start'"},tc="index.js",ic="cca94159c114ecff613f41caa0a4468e0f698e2c",nc={"@types/dompurify":"^2.3.1"},rc={dompurify:"^2.3.3"},lc={name:Qs,version:qs,repository:$s,scripts:ec,main:tc,gitHead:ic,devDependencies:nc,dependencies:rc};function Fr(i,e,t){const n=i.slice();return n[124]=e[t],n[126]=t,n}function xr(i,e,t){const n=i.slice();return n[134]=e[t],n}function Ur(i,e,t){const n=i.slice();return n[129]=e[t],n}function Br(i,e,t){const n=i.slice();return n[139]=e[t],n[141]=t,n}function Hr(i,e,t){const n=i.slice();return n[120]=e[t],n[121]=e,n[122]=t,n}function zr(i,e,t){const n=i.slice();return n[124]=e[t],n[126]=t,n}function Vr(i,e,t){const n=i.slice();return n[2]=e[t],n[127]=e,n[128]=t,n}function Gr(i,e,t){const n=i.slice();return n[129]=e[t],n}function Wr(i,e,t){const n=i.slice();return n[124]=e[t],n[126]=t,n}function Zr(i){let e,t,n;return{c(){e=v("link"),f(e,"rel","stylesheet"),f(e,"href",i[16])},m(r,a){g(r,e,a),t||(n=[Y(e,"load",i[78]),Y(e,"error",i[79])],t=!0)},p(r,a){a[0]&65536&&f(e,"href",r[16])},d(r){r&&u(e),t=!1,ot(n)}}}function ac(i){let e=Object.keys(i[4].message).length>0,t,n,r=e&&Jr(i);return{c(){r&&r.c(),t=Be()},m(a,l){r&&r.m(a,l),g(a,t,l),n=!0},p(a,l){l[0]&16&&(e=Object.keys(a[4].message).length>0),e?r?(r.p(a,l),l[0]&16&&A(r,1)):(r=Jr(a),r.c(),A(r,1),r.m(t.parentNode,t)):r&&(Ae(),F(r,1,1,()=>{r=null}),Se())},i(a){n||(A(r),n=!0)},o(a){F(r),n=!1},d(a){r&&r.d(a),a&&u(t)}}}function oc(i){let e,t,n,r={ctx:i,current:null,token:null,hasCatch:!1,pending:cd,then:vc,catch:bc,value:3,blocks:[,,,]};return vt(t=i[7],r),{c(){e=Be(),r.block.c()},m(a,l){g(a,e,l),r.block.m(a,r.anchor=l),r.mount=()=>e.parentNode,r.anchor=e,n=!0},p(a,l){i=a,r.ctx=i,l[0]&128&&t!==(t=i[7])&&vt(t,r)||li(r,i,l)},i(a){n||(A(r.block),n=!0)},o(a){for(let l=0;l<3;l+=1){const s=r.blocks[l];F(s)}n=!1},d(a){a&&u(e),r.block.d(a),r.token=null,r=null}}}function Jr(i){var ge,M,ct,se,qe,Ze;let e,t,n=((ge=i[4].message)==null?void 0:ge.subject)+"",r,a,l,s,o,c,d,m,h,b=(i[8]&&((M=i[4].message)==null?void 0:M.from[0].email)===i[8]?"me":((se=(ct=i[4].message)==null?void 0:ct.from[0])==null?void 0:se.name)||((Ze=(qe=i[4].message)==null?void 0:qe.from[0])==null?void 0:Ze.email))+"",_,O,P,C,I,N,oe,le,ee,Z,X,L,x,Oe=i[4].show_reply_all&&i[28](i[4].message),Ne,ye,he,de,te,Le,U=i[4].show_contact_avatar&&Yr(i),_e={ctx:i,current:null,token:null,hasCatch:!1,pending:_c,then:cc,catch:sc,value:123};vt(le=i[38]({to:i[4].message.to,cc:i[4].message.cc,bcc:i[4].message.bcc}),_e);let De=i[4].show_received_timestamp&&Qr(i),ke=i[4].show_reply&&qr(i),Me=Oe&&$r(i),R=i[4].show_forward&&el(i);function Ee(Pe,je){if(Pe[4].clean_conversation&&Pe[4].message.conversation)return gc;if(Pe[4].message)return pc}let Xe=Ee(i),H=Xe&&Xe(i);return{c(){var Pe,je;e=v("div"),t=v("header"),r=J(n),a=z(),l=v("div"),s=v("div"),o=v("div"),c=v("div"),U&&U.c(),d=z(),m=v("div"),h=v("span"),_=J(b),O=z(),P=v("nylas-tooltip"),N=z(),oe=v("div"),_e.block.c(),ee=z(),Z=v("section"),De&&De.c(),X=z(),L=v("div"),ke&&ke.c(),x=z(),Me&&Me.c(),Ne=z(),R&&R.c(),ye=z(),he=v("div"),H&&H.c(),f(h,"class","name"),S(P,"id",C=(Pe=i[4].message)==null?void 0:Pe.id),S(P,"current_tooltip_id",i[13]),S(P,"icon",ki),S(P,"content",I=(je=i[4].message)==null?void 0:je.from[0].email),f(m,"class","message-from"),f(c,"class","avatar-info"),f(oe,"class","message-to"),f(o,"class","message-from-to"),f(L,"aria-label","Email Actions"),f(L,"role","toolbar"),f(Z,"class",""),f(s,"class","message-head"),f(he,"class","message-body"),f(l,"class","individual-message expanded"),f(e,"class","email-row expanded singular")},m(Pe,je){g(Pe,e,je),y(e,t),y(t,r),y(e,a),y(e,l),y(l,s),y(s,o),y(o,c),U&&U.m(c,null),y(c,d),y(c,m),y(m,h),y(h,_),y(m,O),y(m,P),y(o,N),y(o,oe),_e.block.m(oe,_e.anchor=null),_e.mount=()=>oe,_e.anchor=null,y(s,ee),y(s,Z),De&&De.m(Z,null),y(Z,X),y(Z,L),ke&&ke.m(L,null),y(L,x),Me&&Me.m(L,null),y(L,Ne),R&&R.m(L,null),y(l,ye),y(l,he),H&&H.m(he,null),de=!0,te||(Le=Y(P,"toggleTooltip",i[34]),te=!0)},p(Pe,je){var Qe,Ut,G,q,ue,be,Je,pt;i=Pe,(!de||je[0]&16)&&n!==(n=((Qe=i[4].message)==null?void 0:Qe.subject)+"")&&pe(r,n),i[4].show_contact_avatar?U?U.p(i,je):(U=Yr(i),U.c(),U.m(c,d)):U&&(U.d(1),U=null),(!de||je[0]&272)&&b!==(b=(i[8]&&((Ut=i[4].message)==null?void 0:Ut.from[0].email)===i[8]?"me":((q=(G=i[4].message)==null?void 0:G.from[0])==null?void 0:q.name)||((be=(ue=i[4].message)==null?void 0:ue.from[0])==null?void 0:be.email))+"")&&pe(_,b),(!de||je[0]&16&&C!==(C=(Je=i[4].message)==null?void 0:Je.id))&&S(P,"id",C),(!de||je[0]&8192)&&S(P,"current_tooltip_id",i[13]),(!de||je[0]&16&&I!==(I=(pt=i[4].message)==null?void 0:pt.from[0].email))&&S(P,"content",I),_e.ctx=i,je[0]&16&&le!==(le=i[38]({to:i[4].message.to,cc:i[4].message.cc,bcc:i[4].message.bcc}))&&vt(le,_e)||li(_e,i,je),i[4].show_received_timestamp?De?De.p(i,je):(De=Qr(i),De.c(),De.m(Z,X)):De&&(De.d(1),De=null),i[4].show_reply?ke?(ke.p(i,je),je[0]&16&&A(ke,1)):(ke=qr(i),ke.c(),A(ke,1),ke.m(L,x)):ke&&(Ae(),F(ke,1,1,()=>{ke=null}),Se()),je[0]&16&&(Oe=i[4].show_reply_all&&i[28](i[4].message)),Oe?Me?(Me.p(i,je),je[0]&16&&A(Me,1)):(Me=$r(i),Me.c(),A(Me,1),Me.m(L,Ne)):Me&&(Ae(),F(Me,1,1,()=>{Me=null}),Se()),i[4].show_forward?R?(R.p(i,je),je[0]&16&&A(R,1)):(R=el(i),R.c(),A(R,1),R.m(L,null)):R&&(Ae(),F(R,1,1,()=>{R=null}),Se()),Xe===(Xe=Ee(i))&&H?H.p(i,je):(H&&H.d(1),H=Xe&&Xe(i),H&&(H.c(),H.m(he,null)))},i(Pe){de||(A(ke),A(Me),A(R),de=!0)},o(Pe){F(ke),F(Me),F(R),de=!1},d(Pe){Pe&&u(e),U&&U.d(),_e.block.d(),_e.token=null,_e=null,De&&De.d(),ke&&ke.d(),Me&&Me.d(),R&&R.d(),H&&H.d(),te=!1,Le()}}}function Yr(i){let e,t;return{c(){e=v("div"),t=v("nylas-contact-image"),S(t,"contact_query",i[12]),S(t,"contact",i[17]),f(e,"class","default-avatar")},m(n,r){g(n,e,r),y(e,t)},p(n,r){r[0]&4096&&S(t,"contact_query",n[12]),r[0]&131072&&S(t,"contact",n[17])},d(n){n&&u(e)}}}function sc(i){return{c:k,m:k,p:k,d:k}}function cc(i){let e,t,n=i[123].slice(0,st),r=[];for(let l=0;l<n.length;l+=1)r[l]=Kr(Fr(i,n,l));let a=i[123].length>st&&Xr(i);return{c(){for(let l=0;l<r.length;l+=1)r[l].c();e=z(),a&&a.c(),t=Be()},m(l,s){for(let o=0;o<r.length;o+=1)r[o].m(l,s);g(l,e,s),a&&a.m(l,s),g(l,t,s)},p(l,s){if(s[0]&16|s[1]&128){n=l[123].slice(0,st);let o;for(o=0;o<n.length;o+=1){const c=Fr(l,n,o);r[o]?r[o].p(c,s):(r[o]=Kr(c),r[o].c(),r[o].m(e.parentNode,e))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}l[123].length>st?a?a.p(l,s):(a=Xr(l),a.c(),a.m(t.parentNode,t)):a&&(a.d(1),a=null)},d(l){bt(r,l),l&&u(e),a&&a.d(l),l&&u(t)}}}function dc(i){let e;return{c(){e=J("bcc:")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function fc(i){let e;return{c(){e=J("cc:")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function uc(i){let e=`to ${i[4].you&&i[124].email===i[4].you.email_address?"Me":""}`,t;return{c(){t=J(e)},m(n,r){g(n,t,r)},p(n,r){r[0]&16&&e!==(e=`to ${n[4].you&&n[124].email===n[4].you.email_address?"Me":""}`)&&pe(t,e)},d(n){n&&u(t)}}}function mc(i){let e=i[124].email+"",t;return{c(){t=J(e)},m(n,r){g(n,t,r)},p(n,r){r[0]&16&&e!==(e=n[124].email+"")&&pe(t,e)},d(n){n&&u(t)}}}function hc(i){var s;let e=((s=i[124].name)!=null?s:i[4].you.name)+"",t,n,r=i[124].email+"",a,l;return{c(){t=J(e),n=J(" <"),a=J(r),l=J(">")},m(o,c){g(o,t,c),g(o,n,c),g(o,a,c),g(o,l,c)},p(o,c){var d;c[0]&16&&e!==(e=((d=o[124].name)!=null?d:o[4].you.name)+"")&&pe(t,e),c[0]&16&&r!==(r=o[124].email+"")&&pe(a,r)},d(o){o&&u(t),o&&u(n),o&&u(a),o&&u(l)}}}function Kr(i){let e,t;function n(c,d){if(c[126]===0)return uc;if(c[124]._type==="cc"&&c[126]===c[4].message.to.length)return fc;if(c[124]._type==="bcc"&&c[126]===c[4].message.to.length+c[4].message.cc.length)return dc}let r=n(i),a=r&&r(i);function l(c,d){if(c[124].email&&c[124].name)return hc;if(c[124].email&&!c[124].name)return mc}let s=l(i),o=s&&s(i);return{c(){e=v("p"),a&&a.c(),t=z(),o&&o.c()},m(c,d){g(c,e,d),a&&a.m(e,null),y(e,t),o&&o.m(e,null)},p(c,d){r===(r=n(c))&&a?a.p(c,d):(a&&a.d(1),a=r&&r(c),a&&(a.c(),a.m(e,t))),s===(s=l(c))&&o?o.p(c,d):(o&&o.d(1),o=s&&s(c),o&&(o.c(),o.m(e,null)))},d(c){c&&u(e),a&&a.d(),o&&o.d()}}}function Xr(i){let e,t,n,r,a,l,s;return{c(){e=v("div"),t=v("nylas-tooltip"),S(t,"id",n=`show-more-participants-${i[4].message.id}`),S(t,"current_tooltip_id",i[13]),S(t,"icon",ki),S(t,"text",r=`And ${i[123].length-st} more`),S(t,"content",a=`${Ti(i[123])}`)},m(o,c){g(o,e,c),y(e,t),l||(s=Y(t,"toggleTooltip",i[34]),l=!0)},p(o,c){c[0]&16&&n!==(n=`show-more-participants-${o[4].message.id}`)&&S(t,"id",n),c[0]&8192&&S(t,"current_tooltip_id",o[13]),c[0]&16&&r!==(r=`And ${o[123].length-st} more`)&&S(t,"text",r),c[0]&16&&a!==(a=`${Ti(o[123])}`)&&S(t,"content",a)},d(o){o&&u(e),l=!1,s()}}}function _c(i){return{c:k,m:k,p:k,d:k}}function Qr(i){let e,t,n=Kt(new Date(i[4].message.date*1e3))+"",r;return{c(){e=v("div"),t=v("span"),r=J(n),f(e,"class","message-date")},m(a,l){g(a,e,l),y(e,t),y(t,r)},p(a,l){l[0]&16&&n!==(n=Kt(new Date(a[4].message.date*1e3))+"")&&pe(r,n)},d(a){a&&u(e)}}}function qr(i){let e,t,n,r,a,l;return n=new jr({props:{"aria-hidden":"true"}}),{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Reply"),f(t,"aria-label","Reply"),f(e,"class","reply")},m(s,o){g(s,e,o),y(e,t),Fe(n,t,null),r=!0,a||(l=Y(t,"click",Ke(i[92])),a=!0)},p:k,i(s){r||(A(n.$$.fragment,s),r=!0)},o(s){F(n.$$.fragment,s),r=!1},d(s){s&&u(e),Ie(n),a=!1,l()}}}function $r(i){let e,t,n,r,a,l;return n=new Rr({props:{"aria-hidden":"true"}}),{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Reply all"),f(t,"aria-label","Reply all"),f(e,"class","reply-all")},m(s,o){g(s,e,o),y(e,t),Fe(n,t,null),r=!0,a||(l=Y(t,"click",Ke(i[93])),a=!0)},p:k,i(s){r||(A(n.$$.fragment,s),r=!0)},o(s){F(n.$$.fragment,s),r=!1},d(s){s&&u(e),Ie(n),a=!1,l()}}}function el(i){let e,t,n,r,a,l;return n=new Ir({props:{"aria-hidden":"true"}}),{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Forward"),f(t,"aria-label","Forward"),f(e,"class","forward")},m(s,o){g(s,e,o),y(e,t),Fe(n,t,null),r=!0,a||(l=Y(t,"click",Ke(i[94])),a=!0)},p:k,i(s){r||(A(n.$$.fragment,s),r=!0)},o(s){F(n.$$.fragment,s),r=!1},d(s){s&&u(e),Ie(n),a=!1,l()}}}function pc(i){let e,t,n,r,a;return{c(){e=v("nylas-message-body"),S(e,"message",t=i[4].message),S(e,"body",n=i[4].message.body)},m(l,s){g(l,e,s),r||(a=Y(e,"downloadClicked",i[37]),r=!0)},p(l,s){s[0]&16&&t!==(t=l[4].message)&&S(e,"message",t),s[0]&16&&n!==(n=l[4].message.body)&&S(e,"body",n)},d(l){l&&u(e),r=!1,a()}}}function gc(i){var r,a;let e,t=Ei.sanitize((a=(r=i[4].message)==null?void 0:r.conversation)!=null?a:"")+"",n;return{c(){e=new mn,n=Be(),e.a=n},m(l,s){e.m(t,l,s),g(l,n,s)},p(l,s){var o,c;s[0]&16&&t!==(t=Ei.sanitize((c=(o=l[4].message)==null?void 0:o.conversation)!=null?c:"")+"")&&e.p(t)},d(l){l&&u(n),l&&e.d()}}}function bc(i){return{c:k,m:k,p:k,i:k,o:k,d:k}}function vc(i){let e,t,n=i[3]&&i[7]&&tl(i);return{c(){n&&n.c(),e=Be()},m(r,a){n&&n.m(r,a),g(r,e,a),t=!0},p(r,a){r[3]&&r[7]?n?(n.p(r,a),a[0]&128&&A(n,1)):(n=tl(r),n.c(),A(n,1),n.m(e.parentNode,e)):n&&(Ae(),F(n,1,1,()=>{n=null}),Se())},i(r){t||(A(n),t=!0)},o(r){F(n),t=!1},d(r){n&&n.d(r),r&&u(e)}}}function tl(i){let e,t,n,r;const a=[yc,wc],l=[];function s(o,c){return o[7].expanded?0:1}return e=s(i),t=l[e]=a[e](i),{c(){t.c(),n=Be()},m(o,c){l[e].m(o,c),g(o,n,c),r=!0},p(o,c){let d=e;e=s(o),e===d?l[e].p(o,c):(Ae(),F(l[d],1,1,()=>{l[d]=null}),Se(),t=l[e],t?t.p(o,c):(t=l[e]=a[e](o),t.c()),A(t,1),t.m(n.parentNode,n))},i(o){r||(A(t),r=!0)},o(o){F(t),r=!1},d(o){l[e].d(o),o&&u(n)}}}function wc(i){let e,t,n,r={ctx:i,current:null,token:null,hasCatch:!1,pending:Ic,then:Ec,catch:kc,value:133,blocks:[,,,]};return vt(t=zl(i[7]),r),{c(){e=v("div"),r.block.c(),f(e,"class","email-row condensed"),we(e,"show_star",i[4].show_star),we(e,"unread",i[7].unread),we(e,"disable-click",i[7]&&i[7].messages.length<=0&&!i[7].drafts.length)},m(a,l){g(a,e,l),r.block.m(e,r.anchor=null),r.mount=()=>e,r.anchor=null,n=!0},p(a,l){i=a,r.ctx=i,l[0]&128&&t!==(t=zl(i[7]))&&vt(t,r)||li(r,i,l),l[0]&16&&we(e,"show_star",i[4].show_star),l[0]&128&&we(e,"unread",i[7].unread),l[0]&128&&we(e,"disable-click",i[7]&&i[7].messages.length<=0&&!i[7].drafts.length)},i(a){n||(A(r.block),n=!0)},o(a){for(let l=0;l<3;l+=1){const s=r.blocks[l];F(s)}n=!1},d(a){a&&u(e),r.block.d(),r.token=null,r=null}}}function yc(i){var X;let e,t,n,r,a,l=((X=i[3])==null?void 0:X.subject)+"",s,o,c,d,m,h,b,_,O,P,C=i[4].click_action==="mailbox"&&pl(i),I=i[4].show_star&&gl(i),N=i[4].show_thread_actions&&bl(i);const oe=[Bc,Uc],le=[];function ee(L,x){return L[7].messages.length?0:1}h=ee(i),b=le[h]=oe[h](i);let Z=i[7].drafts.length&&Dl(i);return{c(){e=v("div"),t=v("header"),n=v("div"),C&&C.c(),r=z(),a=v("h1"),s=J(l),o=z(),c=v("div"),I&&I.c(),d=z(),N&&N.c(),m=z(),b.c(),_=z(),Z&&Z.c(),f(n,"class","subject-title"),f(c,"role","toolbar"),f(t,"class","subject-header"),we(t,"mailbox",i[4].click_action==="mailbox"),f(e,"class",O="email-row expanded "+(i[4].click_action==="mailbox"?"expanded-mailbox-thread":""))},m(L,x){g(L,e,x),y(e,t),y(t,n),C&&C.m(n,null),y(n,r),y(n,a),y(a,s),y(t,o),y(t,c),I&&I.m(c,null),y(c,d),N&&N.m(c,null),y(e,m),le[h].m(e,null),y(e,_),Z&&Z.m(e,null),P=!0},p(L,x){var Ne;L[4].click_action==="mailbox"?C?(C.p(L,x),x[0]&16&&A(C,1)):(C=pl(L),C.c(),A(C,1),C.m(n,r)):C&&(Ae(),F(C,1,1,()=>{C=null}),Se()),(!P||x[0]&128)&&l!==(l=((Ne=L[3])==null?void 0:Ne.subject)+"")&&pe(s,l),L[4].show_star?I?I.p(L,x):(I=gl(L),I.c(),I.m(c,d)):I&&(I.d(1),I=null),L[4].show_thread_actions?N?(N.p(L,x),x[0]&16&&A(N,1)):(N=bl(L),N.c(),A(N,1),N.m(c,null)):N&&(Ae(),F(N,1,1,()=>{N=null}),Se()),x[0]&16&&we(t,"mailbox",L[4].click_action==="mailbox");let Oe=h;h=ee(L),h===Oe?le[h].p(L,x):(Ae(),F(le[Oe],1,1,()=>{le[Oe]=null}),Se(),b=le[h],b?b.p(L,x):(b=le[h]=oe[h](L),b.c()),A(b,1),b.m(e,_)),L[7].drafts.length?Z?(Z.p(L,x),x[0]&128&&A(Z,1)):(Z=Dl(L),Z.c(),A(Z,1),Z.m(e,null)):Z&&(Ae(),F(Z,1,1,()=>{Z=null}),Se()),(!P||x[0]&16&&O!==(O="email-row expanded "+(L[4].click_action==="mailbox"?"expanded-mailbox-thread":"")))&&f(e,"class",O)},i(L){P||(A(C),A(N),A(b),A(Z),P=!0)},o(L){F(C),F(N),F(b),F(Z),P=!1},d(L){L&&u(e),C&&C.d(),I&&I.d(),N&&N.d(),le[h].d(),Z&&Z.d()}}}function kc(i){return{c:k,m:k,p:k,i:k,o:k,d:k}}function Ec(i){var De,ke,Me;let e,t,n,r,a,l,s,o,c,d,m,h,b=(i[14]?`Sorry, looks like this thread is currently unavailable. It may
                    have been deleted in your provider inbox.`:!((De=i[3])==null?void 0:De.snippet)&&i[133]?"This is a draft email":((ke=i[3])==null?void 0:ke.snippet)?i[3].snippet.replace(/\u200C /g,""):"")+"",_,O,P=Object.keys(i[15]).length>0,C,I,N=i[7].has_attachments&&Object.keys(i[15]).length>0,oe,le,ee,Z,X=i[4].show_star&&il(i),L=i[4].show_contact_avatar&&nl(i);function x(R,Ee){return R[14]?Oc:Sc}let Oe=x(i),Ne=Oe(i),ye=i[4].show_number_of_messages&&dl(i),he=((Me=i[3])==null?void 0:Me.subject)&&fl(i),de=P&&ul(i),te=N&&_l();const Le=[Pc,Dc],U=[];function _e(R,Ee){return R[4].show_thread_actions?0:R[4].show_received_timestamp?1:-1}return~(le=_e(i))&&(ee=U[le]=Le[le](i)),{c(){e=v("div"),X&&X.c(),t=z(),n=v("div"),L&&L.c(),r=z(),a=v("div"),Ne.c(),s=z(),ye&&ye.c(),o=z(),c=v("div"),d=v("div"),he&&he.c(),m=z(),h=v("span"),_=J(b),O=z(),de&&de.c(),C=z(),I=v("div"),te&&te.c(),oe=z(),ee&&ee.c(),f(a,"class","from-participants"),f(n,"class","from-message-count"),f(e,"class",l="from"+(i[4].show_star?"-star":"")),f(h,"class","snippet"),we(h,"deleted",i[14]),f(d,"class","subject-snippet"),f(c,"class","subject-snippet-attachment"),we(I,"date",i[4].show_received_timestamp),we(I,"action-icons",i[4].show_thread_actions)},m(R,Ee){g(R,e,Ee),X&&X.m(e,null),y(e,t),y(e,n),L&&L.m(n,null),y(n,r),y(n,a),Ne.m(a,null),g(R,s,Ee),ye&&ye.m(R,Ee),g(R,o,Ee),g(R,c,Ee),y(c,d),he&&he.m(d,null),y(d,m),y(d,h),y(h,_),y(c,O),de&&de.m(c,null),g(R,C,Ee),g(R,I,Ee),te&&te.m(I,null),y(I,oe),~le&&U[le].m(I,null),Z=!0},p(R,Ee){var H,ge,M;R[4].show_star?X?X.p(R,Ee):(X=il(R),X.c(),X.m(e,t)):X&&(X.d(1),X=null),R[4].show_contact_avatar?L?(L.p(R,Ee),Ee[0]&16&&A(L,1)):(L=nl(R),L.c(),A(L,1),L.m(n,r)):L&&(Ae(),F(L,1,1,()=>{L=null}),Se()),Oe===(Oe=x(R))&&Ne?Ne.p(R,Ee):(Ne.d(1),Ne=Oe(R),Ne&&(Ne.c(),Ne.m(a,null))),(!Z||Ee[0]&16&&l!==(l="from"+(R[4].show_star?"-star":"")))&&f(e,"class",l),R[4].show_number_of_messages?ye?ye.p(R,Ee):(ye=dl(R),ye.c(),ye.m(o.parentNode,o)):ye&&(ye.d(1),ye=null),((H=R[3])==null?void 0:H.subject)?he?he.p(R,Ee):(he=fl(R),he.c(),he.m(d,m)):he&&(he.d(1),he=null),(!Z||Ee[0]&16512)&&b!==(b=(R[14]?`Sorry, looks like this thread is currently unavailable. It may
                    have been deleted in your provider inbox.`:!((ge=R[3])==null?void 0:ge.snippet)&&R[133]?"This is a draft email":((M=R[3])==null?void 0:M.snippet)?R[3].snippet.replace(/\u200C /g,""):"")+"")&&pe(_,b),Ee[0]&16384&&we(h,"deleted",R[14]),Ee[0]&32768&&(P=Object.keys(R[15]).length>0),P?de?de.p(R,Ee):(de=ul(R),de.c(),de.m(c,null)):de&&(de.d(1),de=null),Ee[0]&32896&&(N=R[7].has_attachments&&Object.keys(R[15]).length>0),N?te?Ee[0]&32896&&A(te,1):(te=_l(),te.c(),A(te,1),te.m(I,oe)):te&&(Ae(),F(te,1,1,()=>{te=null}),Se());let Xe=le;le=_e(R),le===Xe?~le&&U[le].p(R,Ee):(ee&&(Ae(),F(U[Xe],1,1,()=>{U[Xe]=null}),Se()),~le?(ee=U[le],ee?ee.p(R,Ee):(ee=U[le]=Le[le](R),ee.c()),A(ee,1),ee.m(I,null)):ee=null),Ee[0]&16&&we(I,"date",R[4].show_received_timestamp),Ee[0]&16&&we(I,"action-icons",R[4].show_thread_actions)},i(R){Z||(A(L),A(te),A(ee),Z=!0)},o(R){F(L),F(te),F(ee),Z=!1},d(R){R&&u(e),X&&X.d(),L&&L.d(),Ne.d(),R&&u(s),ye&&ye.d(R),R&&u(o),R&&u(c),he&&he.d(),de&&de.d(),R&&u(C),R&&u(I),te&&te.d(),~le&&U[le].d()}}}function il(i){let e,t,n,r,a,l,s,o,c;return{c(){e=v("div"),t=v("button"),f(t,"id",n=`thread-star-${i[4].thread_id}`),f(t,"class",r=i[7].starred?"starred":""),t.value=a=i[4].thread_id,f(t,"role","switch"),f(t,"aria-checked",l=i[7].starred),f(t,"aria-label",s=`Star button for thread ${i[4].thread_id}`),f(e,"class","starred")},m(d,m){g(d,e,m),y(e,t),o||(c=Y(t,"click",Da(i[25])),o=!0)},p(d,m){m[0]&16&&n!==(n=`thread-star-${d[4].thread_id}`)&&f(t,"id",n),m[0]&128&&r!==(r=d[7].starred?"starred":"")&&f(t,"class",r),m[0]&16&&a!==(a=d[4].thread_id)&&(t.value=a),m[0]&128&&l!==(l=d[7].starred)&&f(t,"aria-checked",l),m[0]&16&&s!==(s=`Star button for thread ${d[4].thread_id}`)&&f(t,"aria-label",s)},d(d){d&&u(e),o=!1,c()}}}function nl(i){let e,t,n=i[7]&&rl(i);return{c(){e=v("div"),n&&n.c(),f(e,"class","default-avatar"),we(e,"deleted",i[14]),we(e,"draft-icon",i[133])},m(r,a){g(r,e,a),n&&n.m(e,null),t=!0},p(r,a){r[7]?n?(n.p(r,a),a[0]&128&&A(n,1)):(n=rl(r),n.c(),A(n,1),n.m(e,null)):n&&(Ae(),F(n,1,1,()=>{n=null}),Se()),a[0]&16384&&we(e,"deleted",r[14]),a[0]&128&&we(e,"draft-icon",r[133])},i(r){t||(A(n),t=!0)},o(r){F(n),t=!1},d(r){r&&u(e),n&&n.d()}}}function rl(i){let e,t,n,r;const a=[Ac,Cc,Tc],l=[];function s(o,c){return o[133]?0:o[7].messages.length<=0?1:2}return e=s(i),t=l[e]=a[e](i),{c(){t.c(),n=Be()},m(o,c){l[e].m(o,c),g(o,n,c),r=!0},p(o,c){let d=e;e=s(o),e===d?l[e].p(o,c):(Ae(),F(l[d],1,1,()=>{l[d]=null}),Se(),t=l[e],t?t.p(o,c):(t=l[e]=a[e](o),t.c()),A(t,1),t.m(n.parentNode,n))},i(o){r||(A(t),r=!0)},o(o){F(t),r=!1},d(o){l[e].d(o),o&&u(n)}}}function Tc(i){let e;return{c(){e=v("nylas-contact-image"),S(e,"contact_query",i[12]),S(e,"contact",i[10])},m(t,n){g(t,e,n)},p(t,n){n[0]&4096&&S(e,"contact_query",t[12]),n[0]&1024&&S(e,"contact",t[10])},i:k,o:k,d(t){t&&u(e)}}}function Cc(i){let e,t;return e=new Cs({}),{c(){He(e.$$.fragment)},m(n,r){Fe(e,n,r),t=!0},p:k,i(n){t||(A(e.$$.fragment,n),t=!0)},o(n){F(e.$$.fragment,n),t=!1},d(n){Ie(e,n)}}}function Ac(i){let e,t;return e=new Tr({}),{c(){He(e.$$.fragment)},m(n,r){Fe(e,n,r),t=!0},p:k,i(n){t||(A(e.$$.fragment,n),t=!0)},o(n){F(e.$$.fragment,n),t=!1},d(n){Ie(e,n)}}}function Sc(i){let e,t,n,r,a=rn(i[7].messages,i[7].participants),l={ctx:i,current:null,token:null,hasCatch:!1,pending:Nc,then:Mc,catch:Lc,value:18};vt(t=i[35](i[7]),l);let s=a&&ol(i);return{c(){e=v("span"),l.block.c(),n=z(),r=v("div"),s&&s.c(),f(e,"class","participants-name"),we(e,"condensed",rn(i[7].messages,i[7].participants)),f(r,"class","participants-count")},m(o,c){g(o,e,c),l.block.m(e,l.anchor=null),l.mount=()=>e,l.anchor=null,g(o,n,c),g(o,r,c),s&&s.m(r,null)},p(o,c){i=o,l.ctx=i,c[0]&128&&t!==(t=i[35](i[7]))&&vt(t,l)||li(l,i,c),c[0]&128&&we(e,"condensed",rn(i[7].messages,i[7].participants)),c[0]&128&&(a=rn(i[7].messages,i[7].participants)),a?s?s.p(i,c):(s=ol(i),s.c(),s.m(r,null)):s&&(s.d(1),s=null)},d(o){o&&u(e),l.block.d(),l.token=null,l=null,o&&u(n),o&&u(r),s&&s.d()}}}function Oc(i){let e;return{c(){e=v("div"),e.innerHTML='<span class="from-sub-section deleted-email">Deleted Email</span>',f(e,"class","participants-name")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function Lc(i){return{c:k,m:k,p:k,d:k}}function Mc(i){let e,t=i[18],n=[];for(let r=0;r<t.length;r+=1)n[r]=al(Br(i,t,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=Be()},m(r,a){for(let l=0;l<n.length;l+=1)n[l].m(r,a);g(r,e,a)},p(r,a){if(a[0]&128|a[1]&16){t=r[18];let l;for(l=0;l<t.length;l+=1){const s=Br(r,t,l);n[l]?n[l].p(s,a):(n[l]=al(s),n[l].c(),n[l].m(e.parentNode,e))}for(;l<n.length;l+=1)n[l].d(1);n.length=t.length}},d(r){bt(n,r),r&&u(e)}}}function ll(i){let e;return{c(){e=v("span"),e.textContent=",\xA0",f(e,"class","from-sub-section")},m(t,n){g(t,e,n)},d(t){t&&u(e)}}}function al(i){let e,t=i[139]+"",n,r,a,l=i[141]<i[18].length-1&&ll();return{c(){e=v("span"),n=J(t),r=z(),l&&l.c(),a=Be(),f(e,"class","from-sub-section participant-label"),we(e,"draft-label",i[139]==="Draft")},m(s,o){g(s,e,o),y(e,n),g(s,r,o),l&&l.m(s,o),g(s,a,o)},p(s,o){o[0]&128&&t!==(t=s[139]+"")&&pe(n,t),o[0]&128|o[1]&16&&we(e,"draft-label",s[139]==="Draft"),s[141]<s[18].length-1?l||(l=ll(),l.c(),l.m(a.parentNode,a)):l&&(l.d(1),l=null)},d(s){s&&u(e),s&&u(r),l&&l.d(s),s&&u(a)}}}function Nc(i){return{c:k,m:k,p:k,d:k}}function ol(i){let e,t,n=i[7].participants.length>=2&&sl(i),r=i[7].participants.length>2&&cl(i);return{c(){n&&n.c(),e=z(),r&&r.c(),t=Be()},m(a,l){n&&n.m(a,l),g(a,e,l),r&&r.m(a,l),g(a,t,l)},p(a,l){a[7].participants.length>=2?n?n.p(a,l):(n=sl(a),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null),a[7].participants.length>2?r?r.p(a,l):(r=cl(a),r.c(),r.m(t.parentNode,t)):r&&(r.d(1),r=null)},d(a){n&&n.d(a),a&&u(e),r&&r.d(a),a&&u(t)}}}function sl(i){let e,t,n=i[7].participants.length-Bl+"",r;return{c(){e=v("span"),t=J("+"),r=J(n),f(e,"class","show-on-mobile")},m(a,l){g(a,e,l),y(e,t),y(e,r)},p(a,l){l[0]&128&&n!==(n=a[7].participants.length-Bl+"")&&pe(r,n)},d(a){a&&u(e)}}}function cl(i){let e,t,n=i[7].participants.length-Ul+"",r;return{c(){e=v("span"),t=J("\xA0 + "),r=J(n),f(e,"class","show-on-desktop")},m(a,l){g(a,e,l),y(e,t),y(e,r)},p(a,l){l[0]&128&&n!==(n=a[7].participants.length-Ul+"")&&pe(r,n)},d(a){a&&u(e)}}}function dl(i){var r,a;let e,t=(((a=(r=i[7])==null?void 0:r.messages)==null?void 0:a.length)>0?i[7].messages.length:"")+"",n;return{c(){e=v("span"),n=J(t),f(e,"class","thread-message-count")},m(l,s){g(l,e,s),y(e,n)},p(l,s){var o,c;s[0]&128&&t!==(t=(((c=(o=l[7])==null?void 0:o.messages)==null?void 0:c.length)>0?l[7].messages.length:"")+"")&&pe(n,t)},d(l){l&&u(e)}}}function fl(i){var r;let e,t=((r=i[3])==null?void 0:r.subject)+"",n;return{c(){e=v("span"),n=J(t),f(e,"class","subject")},m(a,l){g(a,e,l),y(e,n)},p(a,l){var s;l[0]&128&&t!==(t=((s=a[3])==null?void 0:s.subject)+"")&&pe(n,t)},d(a){a&&u(e)}}}function ul(i){let e,t=Object.values(i[15]),n=[];for(let r=0;r<t.length;r+=1)n[r]=hl(xr(i,t,r));return{c(){e=v("div");for(let r=0;r<n.length;r+=1)n[r].c();f(e,"class","attachment")},m(r,a){g(r,e,a);for(let l=0;l<n.length;l+=1)n[l].m(e,null)},p(r,a){if(a[0]&32768|a[1]&32){t=Object.values(r[15]);let l;for(l=0;l<t.length;l+=1){const s=xr(r,t,l);n[l]?n[l].p(s,a):(n[l]=hl(s),n[l].c(),n[l].m(e,null))}for(;l<n.length;l+=1)n[l].d(1);n.length=t.length}},d(r){r&&u(e),bt(n,r)}}}function ml(i){let e,t=(i[129].filename||i[129].id)+"",n,r,a,l;function s(...o){return i[91](i[129],...o)}return{c(){e=v("button"),n=J(t),r=z()},m(o,c){g(o,e,c),y(e,n),y(e,r),a||(l=Y(e,"click",s),a=!0)},p(o,c){i=o,c[0]&32768&&t!==(t=(i[129].filename||i[129].id)+"")&&pe(n,t)},d(o){o&&u(e),a=!1,l()}}}function hl(i){let e,t=i[134],n=[];for(let r=0;r<t.length;r+=1)n[r]=ml(Ur(i,t,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=Be()},m(r,a){for(let l=0;l<n.length;l+=1)n[l].m(r,a);g(r,e,a)},p(r,a){if(a[0]&32768|a[1]&32){t=r[134];let l;for(l=0;l<t.length;l+=1){const s=Ur(r,t,l);n[l]?n[l].p(s,a):(n[l]=ml(s),n[l].c(),n[l].m(e.parentNode,e))}for(;l<n.length;l+=1)n[l].d(1);n.length=t.length}},d(r){bt(n,r),r&&u(e)}}}function _l(i){let e,t,n;return t=new vs({}),{c(){e=v("span"),He(t.$$.fragment)},m(r,a){g(r,e,a),Fe(t,e,null),n=!0},i(r){n||(A(t.$$.fragment,r),n=!0)},o(r){F(t.$$.fragment,r),n=!1},d(r){r&&u(e),Ie(t)}}}function Dc(i){let e,t=i[33](new Date(i[3].last_message_timestamp*1e3))+"",n;return{c(){e=v("span"),n=J(t)},m(r,a){g(r,e,a),y(e,n)},p(r,a){a[0]&128&&t!==(t=r[33](new Date(r[3].last_message_timestamp*1e3))+"")&&pe(n,t)},i:k,o:k,d(r){r&&u(e)}}}function Pc(i){let e,t,n,r,a,l,s,o,c,d,m,h,b;n=new yr({});const _=[Rc,jc],O=[];function P(C,I){return C[7].unread?0:1}return s=P(i),o=O[s]=_[s](i),{c(){e=v("div"),t=v("button"),He(n.$$.fragment),r=z(),a=v("div"),l=v("button"),o.c(),f(t,"title","Delete thread"),f(t,"aria-label","Delete thread"),f(e,"class","delete"),f(l,"title",c=`Mark thread as ${i[7].unread?"":"un"}read`),f(l,"aria-label",d=`Mark thread as ${i[7].unread?"":"un"}read`),f(a,"class","read-status")},m(C,I){g(C,e,I),y(e,t),Fe(n,t,null),g(C,r,I),g(C,a,I),y(a,l),O[s].m(l,null),m=!0,h||(b=[Y(t,"click",Ke(i[21])),Y(l,"click",Ke(i[20]))],h=!0)},p(C,I){let N=s;s=P(C),s!==N&&(Ae(),F(O[N],1,1,()=>{O[N]=null}),Se(),o=O[s],o||(o=O[s]=_[s](C),o.c()),A(o,1),o.m(l,null)),(!m||I[0]&128&&c!==(c=`Mark thread as ${C[7].unread?"":"un"}read`))&&f(l,"title",c),(!m||I[0]&128&&d!==(d=`Mark thread as ${C[7].unread?"":"un"}read`))&&f(l,"aria-label",d)},i(C){m||(A(n.$$.fragment,C),A(o),m=!0)},o(C){F(n.$$.fragment,C),F(o),m=!1},d(C){C&&u(e),Ie(n),C&&u(r),C&&u(a),O[s].d(),h=!1,ot(b)}}}function jc(i){let e,t;return e=new Er({props:{"aria-hidden":"true"}}),{c(){He(e.$$.fragment)},m(n,r){Fe(e,n,r),t=!0},i(n){t||(A(e.$$.fragment,n),t=!0)},o(n){F(e.$$.fragment,n),t=!1},d(n){Ie(e,n)}}}function Rc(i){let e,t;return e=new kr({props:{"aria-hidden":"true"}}),{c(){He(e.$$.fragment)},m(n,r){Fe(e,n,r),t=!0},i(n){t||(A(e.$$.fragment,n),t=!0)},o(n){F(e.$$.fragment,n),t=!1},d(n){Ie(e,n)}}}function Ic(i){return{c:k,m:k,p:k,i:k,o:k,d:k}}function pl(i){let e,t,n,r,a;return t=new ks({}),{c(){e=v("button"),He(t.$$.fragment),f(e,"title","Return to Mailbox"),f(e,"aria-label","Return to Mailbox")},m(l,s){g(l,e,s),Fe(t,e,null),n=!0,r||(a=Y(e,"click",Ke(i[23])),r=!0)},p:k,i(l){n||(A(t.$$.fragment,l),n=!0)},o(l){F(t.$$.fragment,l),n=!1},d(l){l&&u(e),Ie(t),r=!1,a()}}}function gl(i){let e,t,n,r,a,l,s,o;return{c(){e=v("div"),t=v("button"),f(t,"class",n=i[3].starred?"starred":""),f(t,"title",r=i[3].starred?"Unstar thread":"Star thread"),f(t,"aria-label",a=i[3].starred?"Unstar thread":"Star thread"),f(t,"role","switch"),f(t,"aria-checked",l=i[3].starred),f(e,"class","starred")},m(c,d){g(c,e,d),y(e,t),s||(o=Y(t,"click",Ke(i[25])),s=!0)},p(c,d){d[0]&128&&n!==(n=c[3].starred?"starred":"")&&f(t,"class",n),d[0]&128&&r!==(r=c[3].starred?"Unstar thread":"Star thread")&&f(t,"title",r),d[0]&128&&a!==(a=c[3].starred?"Unstar thread":"Star thread")&&f(t,"aria-label",a),d[0]&128&&l!==(l=c[3].starred)&&f(t,"aria-checked",l)},d(c){c&&u(e),s=!1,o()}}}function bl(i){let e,t,n,r,a,l,s,o,c,d,m,h,b;n=new yr({});const _=[xc,Fc],O=[];function P(C,I){return C[7].unread?0:1}return s=P(i),o=O[s]=_[s](i),{c(){e=v("div"),t=v("button"),He(n.$$.fragment),r=z(),a=v("div"),l=v("button"),o.c(),f(t,"title","Delete thread / Move to trash"),f(t,"aria-label","Delete thread (Move to trash)"),f(e,"class","delete"),f(l,"title",c=`Mark thread as ${i[7].unread?"":"un"}read`),f(l,"aria-label",d=`Mark thread as ${i[7].unread?"":"un"}read`),f(a,"class","read-status")},m(C,I){g(C,e,I),y(e,t),Fe(n,t,null),g(C,r,I),g(C,a,I),y(a,l),O[s].m(l,null),m=!0,h||(b=[Y(t,"click",Ke(i[80])),Y(l,"click",Ke(i[20]))],h=!0)},p(C,I){let N=s;s=P(C),s!==N&&(Ae(),F(O[N],1,1,()=>{O[N]=null}),Se(),o=O[s],o||(o=O[s]=_[s](C),o.c()),A(o,1),o.m(l,null)),(!m||I[0]&128&&c!==(c=`Mark thread as ${C[7].unread?"":"un"}read`))&&f(l,"title",c),(!m||I[0]&128&&d!==(d=`Mark thread as ${C[7].unread?"":"un"}read`))&&f(l,"aria-label",d)},i(C){m||(A(n.$$.fragment,C),A(o),m=!0)},o(C){F(n.$$.fragment,C),F(o),m=!1},d(C){C&&u(e),Ie(n),C&&u(r),C&&u(a),O[s].d(),h=!1,ot(b)}}}function Fc(i){let e,t;return e=new Er({props:{"aria-hidden":"true"}}),{c(){He(e.$$.fragment)},m(n,r){Fe(e,n,r),t=!0},i(n){t||(A(e.$$.fragment,n),t=!0)},o(n){F(e.$$.fragment,n),t=!1},d(n){Ie(e,n)}}}function xc(i){let e,t;return e=new kr({props:{"aria-hidden":"true"}}),{c(){He(e.$$.fragment)},m(n,r){Fe(e,n,r),t=!0},i(n){t||(A(e.$$.fragment,n),t=!0)},o(n){F(e.$$.fragment,n),t=!1},d(n){Ie(e,n)}}}function Uc(i){let e,t=i[3].snippet+"",n;return{c(){e=v("span"),n=J(t),f(e,"class","snippet")},m(r,a){g(r,e,a),y(e,n)},p(r,a){a[0]&128&&t!==(t=r[3].snippet+"")&&pe(n,t)},i:k,o:k,d(r){r&&u(e)}}}function Bc(i){let e,t,n=i[7].messages,r=[];for(let l=0;l<n.length;l+=1)r[l]=Nl(Vr(i,n,l));const a=l=>F(r[l],1,1,()=>{r[l]=null});return{c(){for(let l=0;l<r.length;l+=1)r[l].c();e=Be()},m(l,s){for(let o=0;o<r.length;o+=1)r[o].m(l,s);g(l,e,s),t=!0},p(l,s){if(s[0]&2080944626|s[1]&200){n=l[7].messages;let o;for(o=0;o<n.length;o+=1){const c=Vr(l,n,o);r[o]?(r[o].p(c,s),A(r[o],1)):(r[o]=Nl(c),r[o].c(),A(r[o],1),r[o].m(e.parentNode,e))}for(Ae(),o=n.length;o<r.length;o+=1)a(o);Se()}},i(l){if(!t){for(let s=0;s<n.length;s+=1)A(r[s]);t=!0}},o(l){r=r.filter(Boolean);for(let s=0;s<r.length;s+=1)F(r[s]);t=!1},d(l){bt(r,l),l&&u(e)}}}function Hc(i){var ee,Z,X;let e,t,n,r,a,l=(i[8]&&((ee=i[2])==null?void 0:ee.from[0].email)===i[8]?"me":((Z=i[2])==null?void 0:Z.from[0].name)||((X=i[2])==null?void 0:X.from[0].email))+"",s,o,c,d,m,h,b,_,O,P=i[2].snippet+"",C,I,N,oe=i[4].show_contact_avatar&&vl(i),le=i[4].show_received_timestamp&&wl(i);return{c(){var L,x;e=v("div"),t=v("div"),oe&&oe.c(),n=z(),r=v("div"),a=v("span"),s=J(l),o=z(),c=v("nylas-tooltip"),h=z(),b=v("section"),le&&le.c(),_=z(),O=v("div"),C=J(P),f(a,"class","name"),S(c,"id",d=(L=i[2])==null?void 0:L.id.slice(0,3)),S(c,"current_tooltip_id",i[13]),S(c,"icon",ki),S(c,"content",m=(x=i[2])==null?void 0:x.from[0].email),f(r,"class","message-from"),f(t,"class","avatar-info"),f(e,"class","message-head"),f(O,"class","snippet")},m(L,x){g(L,e,x),y(e,t),oe&&oe.m(t,null),y(t,n),y(t,r),y(r,a),y(a,s),y(r,o),y(r,c),y(e,h),y(e,b),le&&le.m(b,null),g(L,_,x),g(L,O,x),y(O,C),I||(N=Y(c,"toggleTooltip",i[34]),I=!0)},p(L,x){var Oe,Ne,ye,he,de;L[4].show_contact_avatar?oe?oe.p(L,x):(oe=vl(L),oe.c(),oe.m(t,n)):oe&&(oe.d(1),oe=null),x[0]&384&&l!==(l=(L[8]&&((Oe=L[2])==null?void 0:Oe.from[0].email)===L[8]?"me":((Ne=L[2])==null?void 0:Ne.from[0].name)||((ye=L[2])==null?void 0:ye.from[0].email))+"")&&pe(s,l),x[0]&128&&d!==(d=(he=L[2])==null?void 0:he.id.slice(0,3))&&S(c,"id",d),x[0]&8192&&S(c,"current_tooltip_id",L[13]),x[0]&128&&m!==(m=(de=L[2])==null?void 0:de.from[0].email)&&S(c,"content",m),L[4].show_received_timestamp?le?le.p(L,x):(le=wl(L),le.c(),le.m(b,null)):le&&(le.d(1),le=null),x[0]&128&&P!==(P=L[2].snippet+"")&&pe(C,P)},i:k,o:k,d(L){L&&u(e),oe&&oe.d(),le&&le.d(),L&&u(_),L&&u(O),I=!1,N()}}}function zc(i){var Me,R,Ee,Xe;let e,t,n,r,a,l,s=(i[8]&&((Me=i[2])==null?void 0:Me.from[0].email)===i[8]?"me":((R=i[2])==null?void 0:R.from[0].name)||((Ee=i[2])==null?void 0:Ee.from[0].email))+"",o,c,d,m,h,b,_,O,P,C,I,N,oe=i[4].show_reply_all&&i[28](i[2]),le,ee,Z,X,L,x,Oe,Ne,ye=i[4].show_contact_avatar&&yl(i),he=((Xe=i[2])==null?void 0:Xe.to)&&kl(i),de=i[4].show_received_timestamp&&Cl(i),te=i[4].show_reply&&Al(i),Le=oe&&Sl(i),U=i[4].show_forward&&Ol(i);const _e=[ed,$c,qc,Qc],De=[];function ke(H,ge){return H[4].clean_conversation&&H[2].conversation?0:H[2]&&H[2].body!=null?1:!!H[4].thread&&!H[4].thread_id&&H[1]!="mailbox"?2:3}return X=ke(i),L=De[X]=_e[X](i),{c(){var H,ge;e=v("div"),t=v("div"),n=v("div"),ye&&ye.c(),r=z(),a=v("div"),l=v("span"),o=J(s),c=z(),d=v("nylas-tooltip"),b=z(),_=v("div"),he&&he.c(),O=z(),P=v("div"),de&&de.c(),C=z(),I=v("div"),te&&te.c(),N=z(),Le&&Le.c(),le=z(),U&&U.c(),ee=z(),Z=v("div"),L.c(),f(l,"class","name"),S(d,"id",m=(H=i[2])==null?void 0:H.id.slice(0,3)),S(d,"current_tooltip_id",i[13]),S(d,"icon",ki),S(d,"content",h=(ge=i[2])==null?void 0:ge.from[0].email),f(a,"class","message-from"),f(n,"class","avatar-info"),f(_,"class","message-to"),f(t,"class","message-from-to"),f(I,"aria-label","Email Actions"),f(I,"role","toolbar"),f(P,"class",""),f(e,"class","message-head"),f(Z,"class","message-body")},m(H,ge){g(H,e,ge),y(e,t),y(t,n),ye&&ye.m(n,null),y(n,r),y(n,a),y(a,l),y(l,o),y(a,c),y(a,d),y(t,b),y(t,_),he&&he.m(_,null),y(e,O),y(e,P),de&&de.m(P,null),y(P,C),y(P,I),te&&te.m(I,null),y(I,N),Le&&Le.m(I,null),y(I,le),U&&U.m(I,null),g(H,ee,ge),g(H,Z,ge),De[X].m(Z,null),x=!0,Oe||(Ne=Y(d,"toggleTooltip",i[34]),Oe=!0)},p(H,ge){var ct,se,qe,Ze,Pe,je;H[4].show_contact_avatar?ye?ye.p(H,ge):(ye=yl(H),ye.c(),ye.m(n,r)):ye&&(ye.d(1),ye=null),(!x||ge[0]&384)&&s!==(s=(H[8]&&((ct=H[2])==null?void 0:ct.from[0].email)===H[8]?"me":((se=H[2])==null?void 0:se.from[0].name)||((qe=H[2])==null?void 0:qe.from[0].email))+"")&&pe(o,s),(!x||ge[0]&128&&m!==(m=(Ze=H[2])==null?void 0:Ze.id.slice(0,3)))&&S(d,"id",m),(!x||ge[0]&8192)&&S(d,"current_tooltip_id",H[13]),(!x||ge[0]&128&&h!==(h=(Pe=H[2])==null?void 0:Pe.from[0].email))&&S(d,"content",h),((je=H[2])==null?void 0:je.to)?he?he.p(H,ge):(he=kl(H),he.c(),he.m(_,null)):he&&(he.d(1),he=null),H[4].show_received_timestamp?de?de.p(H,ge):(de=Cl(H),de.c(),de.m(P,C)):de&&(de.d(1),de=null),H[4].show_reply?te?(te.p(H,ge),ge[0]&16&&A(te,1)):(te=Al(H),te.c(),A(te,1),te.m(I,N)):te&&(Ae(),F(te,1,1,()=>{te=null}),Se()),ge[0]&144&&(oe=H[4].show_reply_all&&H[28](H[2])),oe?Le?(Le.p(H,ge),ge[0]&144&&A(Le,1)):(Le=Sl(H),Le.c(),A(Le,1),Le.m(I,le)):Le&&(Ae(),F(Le,1,1,()=>{Le=null}),Se()),H[4].show_forward?U?(U.p(H,ge),ge[0]&16&&A(U,1)):(U=Ol(H),U.c(),A(U,1),U.m(I,null)):U&&(Ae(),F(U,1,1,()=>{U=null}),Se());let M=X;X=ke(H),X===M?De[X].p(H,ge):(Ae(),F(De[M],1,1,()=>{De[M]=null}),Se(),L=De[X],L?L.p(H,ge):(L=De[X]=_e[X](H),L.c()),A(L,1),L.m(Z,null))},i(H){x||(A(te),A(Le),A(U),A(L),x=!0)},o(H){F(te),F(Le),F(U),F(L),x=!1},d(H){H&&u(e),ye&&ye.d(),he&&he.d(),de&&de.d(),te&&te.d(),Le&&Le.d(),U&&U.d(),H&&u(ee),H&&u(Z),De[X].d(),Oe=!1,Ne()}}}function vl(i){let e,t,n;return{c(){var r;e=v("div"),t=v("nylas-contact-image"),S(t,"contact_query",i[12]),S(t,"contact",n=i[5][(r=i[2])==null?void 0:r.from[0].email]),f(e,"class","default-avatar")},m(r,a){g(r,e,a),y(e,t)},p(r,a){var l;a[0]&4096&&S(t,"contact_query",r[12]),a[0]&160&&n!==(n=r[5][(l=r[2])==null?void 0:l.from[0].email])&&S(t,"contact",n)},d(r){r&&u(e)}}}function wl(i){let e,t,n=Kt(new Date(i[2].date*1e3))+"",r;return{c(){e=v("div"),t=v("span"),r=J(n),f(e,"class","message-date")},m(a,l){g(a,e,l),y(e,t),y(t,r)},p(a,l){l[0]&128&&n!==(n=Kt(new Date(a[2].date*1e3))+"")&&pe(r,n)},d(a){a&&u(e)}}}function yl(i){let e,t,n;return{c(){var r;e=v("div"),t=v("nylas-contact-image"),S(t,"contact_query",i[12]),S(t,"contact",n=i[5][(r=i[2])==null?void 0:r.from[0].email]),f(e,"class","default-avatar")},m(r,a){g(r,e,a),y(e,t)},p(r,a){var l;a[0]&4096&&S(t,"contact_query",r[12]),a[0]&160&&n!==(n=r[5][(l=r[2])==null?void 0:l.from[0].email])&&S(t,"contact",n)},d(r){r&&u(e)}}}function kl(i){let e,t,n={ctx:i,current:null,token:null,hasCatch:!1,pending:Xc,then:Gc,catch:Vc,value:123};return vt(t=i[38]({to:i[2].to,cc:i[2].cc,bcc:i[2].bcc}),n),{c(){e=Be(),n.block.c()},m(r,a){g(r,e,a),n.block.m(r,n.anchor=a),n.mount=()=>e.parentNode,n.anchor=e},p(r,a){i=r,n.ctx=i,a[0]&128&&t!==(t=i[38]({to:i[2].to,cc:i[2].cc,bcc:i[2].bcc}))&&vt(t,n)||li(n,i,a)},d(r){r&&u(e),n.block.d(r),n.token=null,n=null}}}function Vc(i){return{c:k,m:k,p:k,d:k}}function Gc(i){let e,t,n=i[123].slice(0,st),r=[];for(let l=0;l<n.length;l+=1)r[l]=El(Wr(i,n,l));let a=i[123].length>st&&Tl(i);return{c(){for(let l=0;l<r.length;l+=1)r[l].c();e=z(),a&&a.c(),t=Be()},m(l,s){for(let o=0;o<r.length;o+=1)r[o].m(l,s);g(l,e,s),a&&a.m(l,s),g(l,t,s)},p(l,s){if(s[0]&144|s[1]&128){n=l[123].slice(0,st);let o;for(o=0;o<n.length;o+=1){const c=Wr(l,n,o);r[o]?r[o].p(c,s):(r[o]=El(c),r[o].c(),r[o].m(e.parentNode,e))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}l[123].length>st?a?a.p(l,s):(a=Tl(l),a.c(),a.m(t.parentNode,t)):a&&(a.d(1),a=null)},d(l){bt(r,l),l&&u(e),a&&a.d(l),l&&u(t)}}}function Wc(i){let e;return{c(){e=J("bcc:")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function Zc(i){let e;return{c(){e=J("cc:")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function Jc(i){let e=`to ${i[4].you&&i[124].email===i[4].you.email_address?"Me":""}`,t;return{c(){t=J(e)},m(n,r){g(n,t,r)},p(n,r){r[0]&144&&e!==(e=`to ${n[4].you&&n[124].email===n[4].you.email_address?"Me":""}`)&&pe(t,e)},d(n){n&&u(t)}}}function Yc(i){let e=i[124].email+"",t;return{c(){t=J(e)},m(n,r){g(n,t,r)},p(n,r){r[0]&128&&e!==(e=n[124].email+"")&&pe(t,e)},d(n){n&&u(t)}}}function Kc(i){var s;let e=((s=i[124].name)!=null?s:i[4].you.name)+"",t,n,r=i[124].email+"",a,l;return{c(){t=J(e),n=J(" <"),a=J(r),l=J(">")},m(o,c){g(o,t,c),g(o,n,c),g(o,a,c),g(o,l,c)},p(o,c){var d;c[0]&144&&e!==(e=((d=o[124].name)!=null?d:o[4].you.name)+"")&&pe(t,e),c[0]&128&&r!==(r=o[124].email+"")&&pe(a,r)},d(o){o&&u(t),o&&u(n),o&&u(a),o&&u(l)}}}function El(i){let e,t;function n(c,d){if(c[126]===0)return Jc;if(c[124]._type==="cc"&&c[126]===c[2].to.length)return Zc;if(c[124]._type==="bcc"&&c[126]===c[2].to.length+c[2].cc.length)return Wc}let r=n(i),a=r&&r(i);function l(c,d){if(c[124].email&&c[124].name)return Kc;if(c[124].email&&!c[124].name)return Yc}let s=l(i),o=s&&s(i);return{c(){e=v("p"),a&&a.c(),t=z(),o&&o.c()},m(c,d){g(c,e,d),a&&a.m(e,null),y(e,t),o&&o.m(e,null)},p(c,d){r===(r=n(c))&&a?a.p(c,d):(a&&a.d(1),a=r&&r(c),a&&(a.c(),a.m(e,t))),s===(s=l(c))&&o?o.p(c,d):(o&&o.d(1),o=s&&s(c),o&&(o.c(),o.m(e,null)))},d(c){c&&u(e),a&&a.d(),o&&o.d()}}}function Tl(i){let e,t,n,r,a,l,s;return{c(){e=v("div"),t=v("nylas-tooltip"),S(t,"id",n=`show-more-participants-${i[2].id}`),S(t,"current_tooltip_id",i[13]),S(t,"icon",ki),S(t,"text",r=`And ${i[123].length-st} more`),S(t,"content",a=`${Ti(i[123])}`)},m(o,c){g(o,e,c),y(e,t),l||(s=Y(t,"toggleTooltip",i[34]),l=!0)},p(o,c){c[0]&128&&n!==(n=`show-more-participants-${o[2].id}`)&&S(t,"id",n),c[0]&8192&&S(t,"current_tooltip_id",o[13]),c[0]&128&&r!==(r=`And ${o[123].length-st} more`)&&S(t,"text",r),c[0]&128&&a!==(a=`${Ti(o[123])}`)&&S(t,"content",a)},d(o){o&&u(e),l=!1,s()}}}function Xc(i){return{c:k,m:k,p:k,d:k}}function Cl(i){let e,t,n=Kt(new Date(i[2].date*1e3))+"",r;return{c(){e=v("div"),t=v("span"),r=J(n),f(e,"class","message-date")},m(a,l){g(a,e,l),y(e,t),y(t,r)},p(a,l){l[0]&128&&n!==(n=Kt(new Date(a[2].date*1e3))+"")&&pe(r,n)},d(a){a&&u(e)}}}function Al(i){let e,t,n,r,a,l;n=new jr({props:{"aria-hidden":"true"}});function s(...o){return i[81](i[2],...o)}return{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Reply"),f(t,"aria-label","Reply"),f(e,"class","reply")},m(o,c){g(o,e,c),y(e,t),Fe(n,t,null),r=!0,a||(l=Y(t,"click",Ke(s)),a=!0)},p(o,c){i=o},i(o){r||(A(n.$$.fragment,o),r=!0)},o(o){F(n.$$.fragment,o),r=!1},d(o){o&&u(e),Ie(n),a=!1,l()}}}function Sl(i){let e,t,n,r,a,l;n=new Rr({props:{"aria-hidden":"true"}});function s(...o){return i[82](i[2],...o)}return{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Reply all"),f(t,"aria-label","Reply all"),f(e,"class","reply-all")},m(o,c){g(o,e,c),y(e,t),Fe(n,t,null),r=!0,a||(l=Y(t,"click",Ke(s)),a=!0)},p(o,c){i=o},i(o){r||(A(n.$$.fragment,o),r=!0)},o(o){F(n.$$.fragment,o),r=!1},d(o){o&&u(e),Ie(n),a=!1,l()}}}function Ol(i){let e,t,n,r,a,l;n=new Ir({props:{"aria-hidden":"true"}});function s(...o){return i[83](i[2],...o)}return{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Forward"),f(t,"aria-label","Forward"),f(e,"class","forward")},m(o,c){g(o,e,c),y(e,t),Fe(n,t,null),r=!0,a||(l=Y(t,"click",Ke(s)),a=!0)},p(o,c){i=o},i(o){r||(A(n.$$.fragment,o),r=!0)},o(o){F(n.$$.fragment,o),r=!1},d(o){o&&u(e),Ie(n),a=!1,l()}}}function Qc(i){let e,t,n,r;return t=new Gs({props:{class:"spinner"}}),{c(){e=v("div"),He(t.$$.fragment),n=J(`
                          Loading...`),f(e,"class","email-loader")},m(a,l){g(a,e,l),Fe(t,e,null),y(e,n),r=!0},p:k,i(a){r||(A(t.$$.fragment,a),r=!0)},o(a){F(t.$$.fragment,a),r=!1},d(a){a&&u(e),Ie(t)}}}function qc(i){var s;let e=((s=i[2].body)!=null?s:i[2].snippet)+"",t,n,r=i[15][i[2].id]&&Array.isArray(i[15][i[2].id])&&i[15][i[2].id].length>0,a,l=r&&Ll(i);return{c(){t=J(e),n=z(),l&&l.c(),a=Be()},m(o,c){g(o,t,c),g(o,n,c),l&&l.m(o,c),g(o,a,c)},p(o,c){var d;c[0]&128&&e!==(e=((d=o[2].body)!=null?d:o[2].snippet)+"")&&pe(t,e),c[0]&32896&&(r=o[15][o[2].id]&&Array.isArray(o[15][o[2].id])&&o[15][o[2].id].length>0),r?l?l.p(o,c):(l=Ll(o),l.c(),l.m(a.parentNode,a)):l&&(l.d(1),l=null)},i:k,o:k,d(o){o&&u(t),o&&u(n),l&&l.d(o),o&&u(a)}}}function $c(i){let e,t,n,r,a;return{c(){e=v("nylas-message-body"),S(e,"message",t=i[2]),S(e,"body",n=i[2].body)},m(l,s){g(l,e,s),r||(a=Y(e,"downloadClicked",i[37]),r=!0)},p(l,s){s[0]&128&&t!==(t=l[2])&&S(e,"message",t),s[0]&128&&n!==(n=l[2].body)&&S(e,"body",n)},i:k,o:k,d(l){l&&u(e),r=!1,a()}}}function ed(i){let e,t=Ei.sanitize(i[2].conversation)+"",n;return{c(){e=new mn,n=Be(),e.a=n},m(r,a){e.m(t,r,a),g(r,n,a)},p(r,a){a[0]&128&&t!==(t=Ei.sanitize(r[2].conversation)+"")&&e.p(t)},i:k,o:k,d(r){r&&u(n),r&&e.d()}}}function Ll(i){let e,t=i[15][i[2].id],n=[];for(let r=0;r<t.length;r+=1)n[r]=Ml(Gr(i,t,r));return{c(){e=v("div");for(let r=0;r<n.length;r+=1)n[r].c();f(e,"class","attachment")},m(r,a){g(r,e,a);for(let l=0;l<n.length;l+=1)n[l].m(e,null)},p(r,a){if(a[0]&557184){t=r[15][r[2].id];let l;for(l=0;l<t.length;l+=1){const s=Gr(r,t,l);n[l]?n[l].p(s,a):(n[l]=Ml(s),n[l].c(),n[l].m(e,null))}for(;l<n.length;l+=1)n[l].d(1);n.length=t.length}},d(r){r&&u(e),bt(n,r)}}}function Ml(i){let e,t=(i[129].filename||i[129].id)+"",n,r,a,l;function s(...o){return i[84](i[129],...o)}return{c(){e=v("button"),n=J(t),r=z()},m(o,c){g(o,e,c),y(e,n),y(e,r),a||(l=Y(e,"click",Ke(s)),a=!0)},p(o,c){i=o,c[0]&32896&&t!==(t=(i[129].filename||i[129].id)+"")&&pe(n,t)},d(o){o&&u(e),a=!1,l()}}}function Nl(i){let e,t,n,r,a,l=i[128],s,o,c;const d=[zc,Hc],m=[];function h(C,I){return C[2].expanded||C[128]===C[7].messages.length-1?0:1}t=h(i),n=m[t]=d[t](i);const b=()=>i[85](e,l),_=()=>i[85](null,l);function O(...C){return i[86](i[128],...C)}function P(...C){return i[87](i[128],...C)}return{c(){e=v("div"),n.c(),r=z(),f(e,"class",a=`individual-message ${i[128]===i[7].messages.length-1||i[2].expanded?"expanded":"condensed"}`),we(e,"last-message",i[128]===i[7].messages.length-1)},m(C,I){g(C,e,I),m[t].m(e,null),y(e,r),b(),s=!0,o||(c=[Y(e,"click",Ke(O)),Y(e,"keypress",P)],o=!0)},p(C,I){i=C;let N=t;t=h(i),t===N?m[t].p(i,I):(Ae(),F(m[N],1,1,()=>{m[N]=null}),Se(),n=m[t],n?n.p(i,I):(n=m[t]=d[t](i),n.c()),A(n,1),n.m(e,r)),(!s||I[0]&128&&a!==(a=`individual-message ${i[128]===i[7].messages.length-1||i[2].expanded?"expanded":"condensed"}`))&&f(e,"class",a),l!==i[128]&&(_(),l=i[128],b()),I[0]&128&&we(e,"last-message",i[128]===i[7].messages.length-1)},i(C){s||(A(n),s=!0)},o(C){F(n),s=!1},d(C){C&&u(e),m[t].d(),_(),o=!1,ot(c)}}}function Dl(i){let e,t,n=i[7].drafts,r=[];for(let l=0;l<n.length;l+=1)r[l]=xl(Hr(i,n,l));const a=l=>F(r[l],1,1,()=>{r[l]=null});return{c(){for(let l=0;l<r.length;l+=1)r[l].c();e=Be()},m(l,s){for(let o=0;o<r.length;o+=1)r[o].m(l,s);g(l,e,s),t=!0},p(l,s){if(s[0]&8400|s[1]&139){n=l[7].drafts;let o;for(o=0;o<n.length;o+=1){const c=Hr(l,n,o);r[o]?(r[o].p(c,s),A(r[o],1)):(r[o]=xl(c),r[o].c(),A(r[o],1),r[o].m(e.parentNode,e))}for(Ae(),o=n.length;o<r.length;o+=1)a(o);Se()}},i(l){if(!t){for(let s=0;s<n.length;s+=1)A(r[s]);t=!0}},o(l){r=r.filter(Boolean);for(let s=0;s<r.length;s+=1)F(r[s]);t=!1},d(l){bt(r,l),l&&u(e)}}}function Pl(i){let e,t,n;return t=new Tr({}),{c(){e=v("div"),He(t.$$.fragment),f(e,"class","default-avatar draft")},m(r,a){g(r,e,a),Fe(t,e,null),n=!0},i(r){n||(A(t.$$.fragment,r),n=!0)},o(r){F(t.$$.fragment,r),n=!1},d(r){r&&u(e),Ie(t)}}}function jl(i){let e,t,n={ctx:i,current:null,token:null,hasCatch:!1,pending:sd,then:id,catch:td,value:123};return vt(t=i[38]({to:i[120].to,cc:i[120].cc,bcc:i[120].bcc}),n),{c(){e=Be(),n.block.c()},m(r,a){g(r,e,a),n.block.m(r,n.anchor=a),n.mount=()=>e.parentNode,n.anchor=e},p(r,a){i=r,n.ctx=i,a[0]&128&&t!==(t=i[38]({to:i[120].to,cc:i[120].cc,bcc:i[120].bcc}))&&vt(t,n)||li(n,i,a)},d(r){r&&u(e),n.block.d(r),n.token=null,n=null}}}function td(i){return{c:k,m:k,p:k,d:k}}function id(i){let e,t,n=i[123].slice(0,st),r=[];for(let l=0;l<n.length;l+=1)r[l]=Rl(zr(i,n,l));let a=i[123].length>st&&Il(i);return{c(){for(let l=0;l<r.length;l+=1)r[l].c();e=z(),a&&a.c(),t=Be()},m(l,s){for(let o=0;o<r.length;o+=1)r[o].m(l,s);g(l,e,s),a&&a.m(l,s),g(l,t,s)},p(l,s){if(s[0]&144|s[1]&128){n=l[123].slice(0,st);let o;for(o=0;o<n.length;o+=1){const c=zr(l,n,o);r[o]?r[o].p(c,s):(r[o]=Rl(c),r[o].c(),r[o].m(e.parentNode,e))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}l[123].length>st?a?a.p(l,s):(a=Il(l),a.c(),a.m(t.parentNode,t)):a&&(a.d(1),a=null)},d(l){bt(r,l),l&&u(e),a&&a.d(l),l&&u(t)}}}function nd(i){let e;return{c(){e=J("bcc:")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function rd(i){let e;return{c(){e=J("cc:")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function ld(i){let e=`to ${i[4].you&&i[124].email===i[4].you.email_address?"Me":""}`,t;return{c(){t=J(e)},m(n,r){g(n,t,r)},p(n,r){r[0]&144&&e!==(e=`to ${n[4].you&&n[124].email===n[4].you.email_address?"Me":""}`)&&pe(t,e)},d(n){n&&u(t)}}}function ad(i){let e=i[124].email+"",t;return{c(){t=J(e)},m(n,r){g(n,t,r)},p(n,r){r[0]&128&&e!==(e=n[124].email+"")&&pe(t,e)},d(n){n&&u(t)}}}function od(i){var s;let e=((s=i[124].name)!=null?s:i[4].you.name)+"",t,n,r=i[124].email+"",a,l;return{c(){t=J(e),n=J(" <"),a=J(r),l=J(">")},m(o,c){g(o,t,c),g(o,n,c),g(o,a,c),g(o,l,c)},p(o,c){var d;c[0]&144&&e!==(e=((d=o[124].name)!=null?d:o[4].you.name)+"")&&pe(t,e),c[0]&128&&r!==(r=o[124].email+"")&&pe(a,r)},d(o){o&&u(t),o&&u(n),o&&u(a),o&&u(l)}}}function Rl(i){let e,t,n;function r(d,m){if(d[126]===0)return ld;if(d[124]._type==="cc"&&d[126]===d[120].to.length)return rd;if(d[124]._type==="bcc"&&d[126]===d[120].to.length+d[120].cc.length)return nd}let a=r(i),l=a&&a(i);function s(d,m){if(d[124].email&&d[124].name)return od;if(d[124].email&&!d[124].name)return ad}let o=s(i),c=o&&o(i);return{c(){e=v("p"),t=J(`Draft
                                `),l&&l.c(),n=z(),c&&c.c()},m(d,m){g(d,e,m),y(e,t),l&&l.m(e,null),y(e,n),c&&c.m(e,null)},p(d,m){a===(a=r(d))&&l?l.p(d,m):(l&&l.d(1),l=a&&a(d),l&&(l.c(),l.m(e,n))),o===(o=s(d))&&c?c.p(d,m):(c&&c.d(1),c=o&&o(d),c&&(c.c(),c.m(e,null)))},d(d){d&&u(e),l&&l.d(),c&&c.d()}}}function Il(i){let e,t,n,r,a,l,s;return{c(){e=v("div"),t=v("nylas-tooltip"),S(t,"id",n=`show-more-participants-${i[120].id}`),S(t,"current_tooltip_id",i[13]),S(t,"icon",ki),S(t,"text",r=`And ${i[123].length-st} more`),S(t,"content",a=`${Ti(i[123])}`)},m(o,c){g(o,e,c),y(e,t),l||(s=Y(t,"toggleTooltip",i[34]),l=!0)},p(o,c){c[0]&128&&n!==(n=`show-more-participants-${o[120].id}`)&&S(t,"id",n),c[0]&8192&&S(t,"current_tooltip_id",o[13]),c[0]&128&&r!==(r=`And ${o[123].length-st} more`)&&S(t,"text",r),c[0]&128&&a!==(a=`${Ti(o[123])}`)&&S(t,"content",a)},d(o){o&&u(e),l=!1,s()}}}function sd(i){return{c:k,m:k,p:k,d:k}}function Fl(i){let e,t,n,r=Kt(new Date(i[120].date*1e3))+"",a;return{c(){e=v("div"),t=v("span"),n=J("Saved at: "),a=J(r),f(e,"class","message-date")},m(l,s){g(l,e,s),y(e,t),y(t,n),y(t,a)},p(l,s){s[0]&128&&r!==(r=Kt(new Date(l[120].date*1e3))+"")&&pe(a,r)},d(l){l&&u(e)}}}function xl(i){var X;let e,t,n,r,a,l,s,o,c,d=i[120].snippet+"",m,h,b=i[122],_,O,P,C=i[4].show_contact_avatar&&Pl(),I=((X=i[120])==null?void 0:X.to)&&jl(i),N=i[4].show_received_timestamp&&Fl(i);const oe=()=>i[88](e,b),le=()=>i[88](null,b);function ee(...L){return i[89](i[120],...L)}function Z(...L){return i[90](i[120],...L)}return{c(){e=v("div"),t=v("div"),n=v("div"),C&&C.c(),r=z(),a=v("div"),I&&I.c(),l=z(),s=v("section"),N&&N.c(),o=z(),c=v("div"),m=J(d),h=z(),f(a,"class","draft-to"),f(n,"class","avatar-info"),f(t,"class","message-head draft"),f(c,"class","snippet"),f(e,"tabindex","0"),f(e,"class","individual-message condensed draft-message"),we(e,"active-draft",i[120].active)},m(L,x){g(L,e,x),y(e,t),y(t,n),C&&C.m(n,null),y(n,r),y(n,a),I&&I.m(a,null),y(t,l),y(t,s),N&&N.m(s,null),y(e,o),y(e,c),y(c,m),y(e,h),oe(),_=!0,O||(P=[Y(e,"click",Ke(ee)),Y(e,"keypress",Z)],O=!0)},p(L,x){var Oe;i=L,i[4].show_contact_avatar?C?x[0]&16&&A(C,1):(C=Pl(),C.c(),A(C,1),C.m(n,r)):C&&(Ae(),F(C,1,1,()=>{C=null}),Se()),((Oe=i[120])==null?void 0:Oe.to)?I?I.p(i,x):(I=jl(i),I.c(),I.m(a,null)):I&&(I.d(1),I=null),i[4].show_received_timestamp?N?N.p(i,x):(N=Fl(i),N.c(),N.m(s,null)):N&&(N.d(1),N=null),(!_||x[0]&128)&&d!==(d=i[120].snippet+"")&&pe(m,d),b!==i[122]&&(le(),b=i[122],oe()),x[0]&128&&we(e,"active-draft",i[120].active)},i(L){_||(A(C),_=!0)},o(L){F(C),_=!1},d(L){L&&u(e),C&&C.d(),I&&I.d(),N&&N.d(),le(),O=!1,ot(P)}}}function cd(i){let e;return{c(){e=J("Loading...")},m(t,n){g(t,e,n)},p:k,i:k,o:k,d(t){t&&u(e)}}}function dd(i){let e,t,n,r,a,l,s,o,c,d=i[16]&&Zr(i);const m=[oc,ac],h=[];function b(_,O){return _[4].thread||_[4].thread_id?0:_[4].message?1:-1}return~(a=b(i))&&(l=h[a]=m[a](i)),{c(){e=v("nylas-error"),t=z(),d&&d.c(),n=z(),r=v("main"),l&&l.c(),this.c=k,S(e,"id",i[0]),f(r,"class","nylas-email"),f(r,"data-cy","nylas-email"),f(r,"tabindex","0")},m(_,O){g(_,e,O),g(_,t,O),d&&d.m(_,O),g(_,n,O),g(_,r,O),~a&&h[a].m(r,null),i[95](r),s=!0,o||(c=[Y(r,"click",i[22]),Y(r,"keypress",i[24])],o=!0)},p(_,O){(!s||O[0]&1)&&S(e,"id",_[0]),_[16]?d?d.p(_,O):(d=Zr(_),d.c(),d.m(n.parentNode,n)):d&&(d.d(1),d=null);let P=a;a=b(_),a===P?~a&&h[a].p(_,O):(l&&(Ae(),F(h[P],1,1,()=>{h[P]=null}),Se()),~a?(l=h[a],l?l.p(_,O):(l=h[a]=m[a](_),l.c()),A(l,1),l.m(r,null)):l=null)},i(_){s||(A(l),s=!0)},o(_){F(l),s=!1},d(_){_&&u(e),_&&u(t),d&&d.d(_),_&&u(n),_&&u(r),~a&&h[a].d(),i[95](null),o=!1,ot(c)}}}const st=3,Ul=2,Bl=1,fd=20;function Hl(i){i.stopImmediatePropagation()}function Kt(i){return i.toLocaleDateString("en-US",{weekday:"short",month:"long",day:"numeric"})+", "+i.toLocaleTimeString("en-US",{hour12:!0,hour:"numeric",minute:"2-digit"})}function rn(i,e){var t,n;return i&&e&&i.length>1&&e.length>=2&&((t=i[0])===null||t===void 0?void 0:t.from.length)&&e[0].email!==((n=i[i.length-1])===null||n===void 0?void 0:n.from[0].email)}function zl(i){var e;return i&&((e=i.drafts)===null||e===void 0?void 0:e.length)>0}function Ti(i){return i.reduce((e,t,n)=>{const r=t.name&&t.name!==t.email?`${t.name} <${t.email}>`:t.email;return n===0?e+=`to: ${r},
`:t._type==="cc"&&!e.includes("cc:")?e+=`cc: ${r},
`:t._type==="bcc"&&!e.includes("bcc:")?e+=`bcc: ${r},
`:e+=`${r},
`,e},"")}function ud(i,e,t){let n,r,a,l,s,o,c;Wt(i,vn,p=>t(101,l=p)),Wt(i,Do,p=>t(76,s=p)),Wt(i,nr,p=>t(102,o=p)),Wt(i,nn,p=>t(77,c=p));var d=this&&this.__awaiter||function(p,T,V,ae){function Ve(xe){return xe instanceof V?xe:new V(function($e){$e(xe)})}return new(V||(V=Promise))(function(xe,$e){function pi(mt){try{ii(ae.next(mt))}catch(Lt){$e(Lt)}}function ji(mt){try{ii(ae.throw(mt))}catch(Lt){$e(Lt)}}function ii(mt){mt.done?xe(mt.value):Ve(mt.value).then(pi,ji)}ii((ae=ae.apply(p,T||[])).next())})},m,h,b,_,O,P,C,I,N,oe,le;const ee=Ui(Zt());let{id:Z=""}=e,{access_token:X=""}=e,{clean_conversation:L}=e,{click_action:x="default"}=e,{message_id:Oe}=e,{message:Ne}=e,{show_contact_avatar:ye}=e,{show_expanded_email_view_onload:he}=e,{show_number_of_messages:de}=e,{show_received_timestamp:te}=e,{show_star:Le}=e,{show_thread_actions:U}=e,{theme:_e}=e,{thread_id:De}=e,{thread:ke}=e,{you:Me}=e,{show_reply:R}=e,{show_reply_all:Ee}=e,{show_forward:Xe}=e;const H={clean_conversation:!1,click_action:"default",message_id:"",show_contact_avatar:!0,show_expanded_email_view_onload:!1,show_number_of_messages:!0,show_received_timestamp:!0,show_star:!1,show_thread_actions:!1,theme:"auto",thread_id:"",you:{},show_reply:!1,show_reply_all:!1,show_forward:!1};let ge={},M=wi({},{},H),ct,se=!1,qe=!1,Ze=!1;hn(()=>d(void 0,void 0,void 0,function*(){var p,T,V;if(yield Nn(),t(66,qe=!0),t(65,ge=(yield o[JSON.stringify({component_id:Z,access_token:X})])||{}),t(67,Ze=!0),t(4,M=wi(e,ge,H)),je(),Z&&!((p=M.you)===null||p===void 0?void 0:p.id)&&!di){t(4,M.you=yield Vn({component_id:Ye.component_id,access_token:X}),M);const ae={component_id:Z,access_token:X};((T=M.you)===null||T===void 0?void 0:T.organization_unit)===yi.Label?t(70,Je=yield pr.getLabels(ae)):((V=M.you)===null||V===void 0?void 0:V.organization_unit)===yi.Folder&&t(71,pt=yield mr.getFolders(ae))}}));let Pe=e;function je(){return d(this,void 0,void 0,function*(){const p=Pe.thread_id;t(68,Pe=e),t(4,M.thread_id=!ke&&!Oe&&!Ne?M.thread_id||ge.thread_id:"",M),Z&&!M.thread_id&&!M.thread&&M.message_id&&mi(),(!j||p!==M.thread_id)&&(yield ci())})}let Qe={},Ut={},G=!1;function q(p){var T;return d(this,void 0,void 0,function*(){const V=((T=p.messages)===null||T===void 0?void 0:T.reduce((Ve,xe)=>{const $e=xe.from[0];return Ve[$e.email]=$e,Ve},{}))||{},ae=Array.from(Object.values(V))||[];for(const Ve of ae){const xe=Ve.email;!Qe[xe]&&xe&&t(5,Qe[xe]=yield Ci(Ve),Qe)}})}let ue,be=[],Je=[],pt=[],ft=[],Ye,Dt,j,si;function ci(){var p,T;return d(this,void 0,void 0,function*(){if(Z&&M.thread_id){si=lo({component_id:Z,thread_id:M.thread_id,access_token:X}).catch(Yt);const V=yield si;if(si=null,((p=V==null?void 0:V.messages)===null||p===void 0?void 0:p.length)>0){const ae=V.messages.length-1;V.messages[ae]=yield Ot(V.messages[ae].id)}V&&(V.expanded=(T=j==null?void 0:j.expanded)!==null&&T!==void 0?T:M.show_expanded_email_view_onload,t(7,j=V),ee("threadLoaded",V))}})}let di;function Hi(){j?Gn({access_token:X,component_id:Z,message_id:j.messages.slice(-fd).map(p=>p.id)}).then(p=>{p.forEach(T=>{let V=j.messages.find(ae=>ae.id===T.id);V&&(V.conversation=T.conversation)}),t(7,j),t(4,M),t(76,s),t(73,Dt),t(59,P),t(3,ke),t(60,C),t(61,I),t(66,qe),t(67,Ze),t(103,d),t(68,Pe),t(119,e),t(65,ge),t(72,Ye),t(39,X),t(0,Z)}):M.message&&Gn({component_id:Z,message_id:[M.message.id]}).then(p=>{p.forEach(T=>{M.message&&t(4,M.message.conversation=T.conversation,M)}),t(7,j),t(4,M),t(76,s),t(73,Dt),t(59,P),t(3,ke),t(60,C),t(61,I),t(66,qe),t(67,Ze),t(103,d),t(68,Pe),t(119,e),t(65,ge),t(72,Ye),t(39,X),t(0,Z)})}let yt;function Ci(p){var T;return d(this,void 0,void 0,function*(){if(t(12,yt.query=`?email=${p.email}`,yt),Z){let V=l[JSON.stringify(yt)];return V||(V=yield vn.addContact(yt)),(T=V[0])!==null&&T!==void 0?T:p}else return p})}function Rt(){return d(this,void 0,void 0,function*(){j&&Ye.component_id&&M.thread_id&&(yield Hn(Ye,j).catch(Yt))})}let Xt=!1;function St(p){return d(this,void 0,void 0,function*(){if(Xt)return;const T=Vt(j);if(!(j[T].length<=0)){if(Xt=!0,M.click_action==="default"||M.click_action==="mailbox"){if(j&&M.click_action==="default"&&(j.unread&&(t(7,j.unread=!j.unread,j),yield Rt()),t(7,j.expanded=!j.expanded,j)),!di&&T!==xt.DRAFTS){const{messages:V}=j,ae=V.length-1;V[ae].expanded=!V[ae].expanded,V[ae].body||(V[ae]=yield Ot(V[ae].id))}}else T!==xt.DRAFTS&&!j.expanded&&t(7,j.expanded=!j.expanded,j);Xt=!1,ee("threadClicked",{event:p,thread:j,messageType:T}),t(13,D="")}})}function fi(p){return d(this,void 0,void 0,function*(){if(j){t(7,j=Object.assign(Object.assign({},j),{unread:!j.unread})),yield Rt(),ee("toggleThreadUnreadStatus",{event:p,thread:j});return}})}function kt(p){var T;return d(this,void 0,void 0,function*(){if(M.click_action!=="mailbox")if(r){const V=((T=j.labels)===null||T===void 0?void 0:T.map(ae=>ae.id))||[];t(7,j.label_ids=[...V,r],j),yield Rt()}else a&&(t(7,j.folder_id=a,j),Ye.component_id&&M.thread_id&&j.messages.forEach((V,ae)=>d(this,void 0,void 0,function*(){yield bn(Ye.component_id,Object.assign(Object.assign({},V),{folder_id:a}),X)})));ee("threadDeleted",{event:p,thread:j})})}function Ai(p){M.message&&(!M.thread_id||!M.thread)||M.click_action==="mailbox"&&j.expanded||(p.preventDefault(),St(p))}function Qt(p){ee("returnToMailbox",{event:p,thread:j})}function qt(p){M.message&&(!M.thread_id||!M.thread)||M.click_action==="mailbox"&&j.expanded||(p.preventDefault(),p.code==="Enter"&&St(p))}function zi(p){return d(this,void 0,void 0,function*(){p.stopImmediatePropagation(),j&&(t(7,j=Object.assign(Object.assign({},j),{starred:!j.starred})),yield Rt()),ee("threadStarred",{event:p,thread:j})})}function Bt(p,T,V){var ae,Ve;return d(this,void 0,void 0,function*(){p.stopImmediatePropagation();const xe={name:M.you.name,email:M.you.email_address},$e=[xe],{to:pi,cc:ji}=ls({myEmail:xe.email,message:T,type:V}),ii=((ae=T.subject)===null||ae===void 0?void 0:ae.toLowerCase().startsWith("re:"))?T.subject:`Re: ${T.subject}`,mt={reply_to_message_id:T.id,from:$e,to:pi,reply_to:$e,cc:ji,bcc:T.bcc,body:T.body,subject:ii};let Lt;switch(V){case"reply":Lt="replyClicked";break;case"reply_all":Lt="replyAllClicked";break}const gi=(Ve=j==null?void 0:j.drafts)===null||Ve===void 0?void 0:Ve.find(Tt=>Tt.reply_to_message_id===T.id);if(gi){if(!M.thread&&gi.id){const Tt=yield Ot(gi.id);gi.body=Tt.body,mt.body=Tt.body}ee(Lt,{event:p,message:Object.assign({},gi),thread:j,value:mt})}else ee(Lt,{event:p,message:Object.assign({},T),thread:j,value:mt})})}function Ht(p,T){var V;return d(this,void 0,void 0,function*(){const ae=(V=j==null?void 0:j.drafts)===null||V===void 0?void 0:V.find($e=>$e.reply_to_message_id===T.id),Ve=`Fwd: ${T.subject}`,xe={reply_to_message_id:T.id,subject:Ve,body:T.body};if(ae){if(!M.thread&&ae.id){const $e=yield Ot(ae.id);ae.body=$e.body,xe.body=$e.body}ee("forwardClicked",{event:p,message:Object.assign({},ae),thread:j,value:xe})}else ee("forwardClicked",{event:p,message:Object.assign({},T),thread:j,value:xe})})}function Vi(p){var T,V;return((T=p==null?void 0:p.to)===null||T===void 0?void 0:T.length)+((V=p==null?void 0:p.cc)===null||V===void 0?void 0:V.length)>1&&!gr(M.you.email_address,p,"from")}function ui(p,T){p.stopImmediatePropagation(),T===j.messages.length-1?Hl(p):(t(7,j.messages[T].expanded=!j.messages[T].expanded,j),ee("messageClicked",{event:p,message:j.messages[T],thread:j}),M.thread||Ot(j.messages[T].id).then(V=>{t(7,j.messages[T].body=V.body,j)}))}function gt(p,T){p.stopImmediatePropagation(),p.code==="Enter"&&(T===j.messages.length-1?Hl(p):t(7,j.messages[T].expanded=!j.messages[T].expanded,j))}function Ot(p){return Z?zn(Ye,p).then(T=>d(this,void 0,void 0,function*(){if(oi.hasInlineFiles(T)){const V=yield At(T);return ee("messageLoaded",V),V}return ee("messageLoaded",T),T})):new Promise(()=>null)}function mi(){oo({access_token:X,component_id:Z,message_id:M.message_id}).then(p=>d(this,void 0,void 0,function*(){if(t(4,M.message=p,M),oi.hasInlineFiles(M.message)){const T=yield At(M.message);t(4,M.message=T,M)}ee("messageLoaded",M.message)}))}function Si(p,T){p.stopImmediatePropagation(),Li(p,T)}function Oi(p,T){p.stopImmediatePropagation(),p.code==="Enter"&&Li(p,T)}function Li(p,T){var V;return d(this,void 0,void 0,function*(){if(T){if(T.draft_id=T.id,(V=j==null?void 0:j.drafts)===null||V===void 0||V.forEach(ae=>ae.active=ae.id===T.id),!M.thread&&T.id){const ae=yield Ot(T.id);T.body=ae.body}ee("draftClicked",{event:p,message:T,thread:j})}})}const Mi=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];function E(p){const T=new Date(new Date().setHours(0,0,0,0)),V=new Date(T.getFullYear(),T.getMonth(),T.getDate()-1,0,0,0,0),ae=new Date(T.getFullYear(),T.getMonth(),T.getDate()-6,0,0,0,0),Ve=new Date(T.getFullYear(),0,1);return p>=T?p.toLocaleTimeString("en-US",{hour12:!0,hour:"numeric",minute:"2-digit"}):p>=V?"Yesterday":p>=ae?Mi[p.getDay()]:p>=Ve?p.toLocaleDateString("en-US",{month:"long",day:"numeric"}):p.toLocaleDateString("en-US",{month:"long",day:"numeric",year:"numeric"})}let D="";function me(p){t(13,D=p.detail.tooltipID)}function $(p){let T=[];const V=p.messages,ae=p.drafts;for(let Ve=V.length-1;Ve>=0&&T.length!=2;Ve--){const xe=V[Ve].from;if(xe&&xe.length>0&&xe){const $e=xe[0].email===ct?"Me":xe[0].name||xe[0].email;T.includes($e)||T.push($e)}}return ae.length&&T.unshift("Draft"),T}let Re=!1,Ce={};function ze(){var p;const T=Vt(j);t(15,Ce=(p=j[T])===null||p===void 0?void 0:p.reduce((V,ae)=>{for(const[Ve,xe]of ae.files.entries())Cr(xe)&&(V[ae.id]||(V[ae.id]=[]),V[ae.id]=[...V[ae.id],ae.files[Ve]]);return V},{}))}function At(p){var T;return d(this,void 0,void 0,function*(){const V=yield oi.getFilesForMessage(p,{component_id:Z,access_token:X});for(const ae of Object.values(V))p.body&&(p.body=(T=p.body)===null||T===void 0?void 0:T.replaceAll(`src="cid:${ae.content_id}"`,`src="data:${ae.content_type};base64,${ae.data}"`));return p})}function Pt(p,T){return d(this,void 0,void 0,function*(){if(p.stopImmediatePropagation(),Z&&(j&&M.thread_id||M.message_id)){const V=yield yn({file_id:T.id,component_id:Z,access_token:X});sr(V,T)}ee("downloadClicked",{event:p,thread:j,file:T})})}function zt(p){return d(this,void 0,void 0,function*(){const T=p.detail.file;Pt(p,T)})}let ut=null,Et=!1;function Vt(p){return p[xt.DRAFTS].length&&!p[xt.MESSAGES].length?xt.DRAFTS:xt.MESSAGES}function Gi({to:p,cc:T,bcc:V}){return Promise.resolve([...kn(p,{_type:"to"}),...kn(T,{_type:"cc"}),...kn(V,{_type:"bcc"})])}let hi;const $t=()=>t(9,se=!0),Ni=()=>t(9,se=!0),Di=p=>kt(p),ln=(p,T)=>Bt(T,p,"reply"),Wi=(p,T)=>Bt(T,p,"reply_all"),_i=(p,T)=>Ht(T,p),ei=(p,T)=>ee("fileClicked",{event:T,file:p});function ti(p,T){xi[p?"unshift":"push"](()=>{be[T]=p,t(6,be)})}const an=(p,T)=>ui(T,p),on=(p,T)=>gt(T,p);function sn(p,T){xi[p?"unshift":"push"](()=>{be[T]=p,t(6,be)})}const Zi=(p,T)=>Si(T,p),cn=(p,T)=>Oi(T,p),Ji=(p,T)=>Pt(T,p),Yi=p=>Bt(p,M.message,"reply"),It=p=>Bt(p,M.message,"reply_all"),Pi=p=>Ht(p,Ne);function Ki(p){xi[p?"unshift":"push"](()=>{ue=p,t(11,ue)})}return i.$$set=p=>{t(119,e=ie(ie({},e),ve(p))),"id"in p&&t(0,Z=p.id),"access_token"in p&&t(39,X=p.access_token),"clean_conversation"in p&&t(40,L=p.clean_conversation),"click_action"in p&&t(1,x=p.click_action),"message_id"in p&&t(41,Oe=p.message_id),"message"in p&&t(2,Ne=p.message),"show_contact_avatar"in p&&t(42,ye=p.show_contact_avatar),"show_expanded_email_view_onload"in p&&t(43,he=p.show_expanded_email_view_onload),"show_number_of_messages"in p&&t(44,de=p.show_number_of_messages),"show_received_timestamp"in p&&t(45,te=p.show_received_timestamp),"show_star"in p&&t(46,Le=p.show_star),"show_thread_actions"in p&&t(47,U=p.show_thread_actions),"theme"in p&&t(48,_e=p.theme),"thread_id"in p&&t(49,De=p.thread_id),"thread"in p&&t(3,ke=p.thread),"you"in p&&t(50,Me=p.you),"show_reply"in p&&t(51,R=p.show_reply),"show_reply_all"in p&&t(52,Ee=p.show_reply_all),"show_forward"in p&&t(53,Xe=p.show_forward)},i.$$.update=()=>{if(i.$$.dirty[2]&8&&ee("manifestLoaded",ge),i.$$.dirty[2]&32768&&Object.keys(c).length&&ee("onError",c),qe&&Ze&&(()=>d(void 0,void 0,void 0,function*(){JSON.stringify(Pe)!==JSON.stringify(e)&&(t(4,M=wi(e,ge,H)),yield je())}))(),i.$$.dirty[0]&16|i.$$.dirty[1]&8388608&&t(8,ct=t(54,m=M.you)===null||m===void 0?void 0:m.email_address),i.$$.dirty[0]&17|i.$$.dirty[1]&256&&t(72,Ye={access_token:X,component_id:Z,thread_id:M.thread_id}),i.$$.dirty[2]&1024&&t(73,Dt=JSON.stringify(Ye)),i.$$.dirty[0]&24|i.$$.dirty[1]&1879048192|i.$$.dirty[2]&18432&&M.thread&&M.thread.id){const p=t(60,C=t(59,P=s[Dt])===null||P===void 0?void 0:P.find(T=>T&&T.id===(ke==null?void 0:ke.id)))!==null&&C!==void 0?C:M.thread;if(M.show_expanded_email_view_onload){p.expanded=M.show_expanded_email_view_onload;const T=p.messages[p.messages.length-1];T.body=t(61,I=T.body)!==null&&I!==void 0?I:T.snippet}t(7,j=p)}i.$$.dirty[0]&184|i.$$.dirty[2]&128&&(()=>d(void 0,void 0,void 0,function*(){if(G||!Qe){if(t(69,G=!1),ke&&ke.messages)yield q(ke);else if(j)yield q(j);else if(M.message){const p=M.message.from[0];t(5,Qe[p.email]=yield Ci(p),Qe)}}}))(),i.$$.dirty[0]&160|i.$$.dirty[1]&16777216&&t(10,Ut=j&&Qe?Qe[t(55,h=j.messages[j.messages.length-1])===null||h===void 0?void 0:h.from[0].email]:{}),i.$$.dirty[0]&48|i.$$.dirty[1]&33554432&&t(17,n=M.message&&Qe?Qe[t(56,b=M.message)===null||b===void 0?void 0:b.from[0].email]:{}),i.$$.dirty[0]&16&&(M.thread_id,t(69,G=!0)),i.$$.dirty[1]&67108864|i.$$.dirty[2]&256&&(r=Je&&Je.length?t(57,_=Je.find(p=>p.name==="trash"))===null||_===void 0?void 0:_.id:null),i.$$.dirty[1]&134217728|i.$$.dirty[2]&512&&(a=pt&&pt.length?t(58,O=pt.find(p=>p.name==="trash"))===null||O===void 0?void 0:O.id:null),i.$$.dirty[0]&128&&t(18,ft=j?j.participants:[]),i.$$.dirty[0]&16&&(di=!!M.thread),i.$$.dirty[0]&16&&M.clean_conversation&&(M.thread_id||M.message_id)&&Hi(),i.$$.dirty[0]&1|i.$$.dirty[1]&256&&t(12,yt={component_id:Z,access_token:X,query:""}),i.$$.dirty[0]&128|i.$$.dirty[2]&3&&t(14,Re=!(t(62,N=j==null?void 0:j.messages)===null||N===void 0?void 0:N.length)&&!(t(63,oe=j==null?void 0:j.drafts)===null||oe===void 0?void 0:oe.length)),i.$$.dirty[0]&128&&j&&ze(),i.$$.dirty[0]&192|i.$$.dirty[2]&4&&t(74,ut=be[(t(64,le=j==null?void 0:j.messages)===null||le===void 0?void 0:le.length)-1]),i.$$.dirty[2]&12288&&ut&&!Et&&ut.offsetTop>window.innerHeight&&(ut.scrollIntoView({behavior:"smooth",block:"end"}),t(75,Et=!0)),i.$$.dirty[0]&16&&M.theme&&(M.theme.startsWith(".")||M.theme.startsWith("http")?t(16,hi=M.theme):M.theme&&t(16,hi=`https://unpkg.com/@nylas/components-email@${lc.version}/themes/${M.theme}.css`))},e=ve(e),[Z,x,Ne,ke,M,Qe,be,j,ct,se,Ut,ue,yt,D,Re,Ce,hi,n,ft,ee,fi,kt,Ai,Qt,qt,zi,Bt,Ht,Vi,ui,gt,Si,Oi,E,me,$,Pt,zt,Gi,X,L,Oe,ye,he,de,te,Le,U,_e,De,Me,R,Ee,Xe,m,h,b,_,O,P,C,I,N,oe,le,ge,qe,Ze,Pe,G,Je,pt,Ye,Dt,ut,Et,s,c,$t,Ni,Di,ln,Wi,_i,ei,ti,an,on,sn,Zi,cn,Ji,Yi,It,Pi,Ki]}class md extends Jt{constructor(e){super();this.shadowRoot.innerHTML='<style>@charset "UTF-8";*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}.sr-only{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}main{--black:#161717;--grey-dark:#636671;--grey:#bdc0cb;--grey-lighter:#dfe1e8;--grey-dark-warm:#9fa4b5;--grey-lightest:#f7f7f8;--grey-background:#f0f1f5;--white:#ffffff;--blue:#314fa9;--blue-lighter:#f0f3ff;--red:#ee3248;--red-lighter:#ffeef0;--fs-12:0.75rem;--fs-14:0.875rem;--fs-16:1rem;--black-90:#2c2e2e;--grey-light:#f7f7f8;--grey-warm:#cbcbcb}main{height:100%;width:100%;position:relative;display:grid;font-family:var(--nylas-email-font-family, -apple-system, BlinkMacSystemFont, sans-serif)}main .email-row{background:var(--nylas-email-background, var(--grey-lightest));border:1px solid var(--nylas-email-border-style, var(--grey-lighter))}main .email-row nylas-tooltip{position:relative}main .email-row .default-avatar{background:var(--nylas-default-avatar-background, var(--blue));border-radius:50%;color:var(--nylas-default-avatar-color, var(--white));font-family:sans-serif;font-size:1rem;font-weight:bold;height:32px;line-height:35px;text-align:center;text-transform:uppercase;width:32px}main .email-row .default-avatar.deleted{background:var(--red)}main .email-row .default-avatar.draft{background:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row header{font-size:1.2rem;font-weight:700;padding:0.5rem;padding-bottom:0}main .email-row div.starred{position:relative;display:flex;justify-content:center;align-items:center}main .email-row div.starred button{background-color:transparent;cursor:pointer}main .email-row div.starred button:before{content:"\u2605";display:inline-block;font-size:1.1em;color:var(--nylas-email-star-button-inactive-color, #8d94a5);-webkit-user-select:none;-moz-user-select:none;user-select:none}main .email-row div.starred button.starred:before{color:var(--nylas-email-star-button-active-color, #ffc107)}main .email-row div.starred button:hover:before{color:var(--nylas-email-star-button-hover-color, #ffc107)}main .email-row.expanded{background:var(--nylas-email-body-background, var(--white));padding:0;border:1px solid var(--nylas-email-border-style-expanded, var(--grey-lighter));border-radius:4px}main .email-row.expanded .email-loader{height:3rem;display:flex;align-items:center;justify-content:center}main .email-row.expanded .email-loader .spinner{height:18px;animation:rotate 2s linear infinite;margin-right:10px}@keyframes rotate{to{transform:rotate(360deg)}}main .email-row.expanded .subject-header{outline:1px solid var(--grey-lighter);display:flex;align-items:center;padding:24px 16px;gap:8px;border-radius:4px 4px 0 0;font-weight:bold;display:flex;justify-content:space-between;color:var(--nylas-email-subject-color, black);background:var(--nylas-email-header-background, white)}main .email-row.expanded .subject-header.mailbox{cursor:default}main .email-row.expanded .subject-header>div{display:flex;align-items:center;gap:1rem}main .email-row.expanded .subject-header>div button{display:flex;background:none;border:none;outline:0;width:32px;height:32px;border-radius:6px;justify-content:center;align-items:center;cursor:pointer}main .email-row.expanded .subject-header>div button:hover{background:var(--nylas-email-button-hover-background, var(--grey-lighter))}main .email-row.expanded .subject-header>div button *{width:1em;height:1em;fill:var(--nylas-email-subject-color, var(--grey-dark));stroke:var(--nylas-email-subject-color, var(--grey-dark))}main .email-row.expanded .subject-header [role=toolbar]{outline:none}main .email-row.expanded .subject-header [role=toolbar] button *{width:1em;height:1em}main .email-row.expanded [role=toolbar]{outline:1px solid var(--grey-lighter);display:flex;align-items:center;padding:24px 16px;gap:8px;padding:0.7rem 1rem;gap:1rem}main .email-row.expanded [role=toolbar] button{background:none;cursor:pointer;display:flex}main .email-row.expanded [role=toolbar] button *{width:1em;height:1em;stroke:var(--nylas-email-body-color, var(--grey-dark))}main .email-row.expanded .message-head [role=toolbar]{outline:none}main .email-row.expanded .message-head [role=toolbar] button{background:none;outline:none;cursor:pointer}main .email-row.expanded .icon-container,main .email-row.expanded .icon-container>*{pointer-events:none}main .email-row.expanded.expanded-mailbox-thread .message-from .name{font-weight:600}main .email-row.expanded div.individual-message{box-sizing:border-box;padding:0.5rem}main .email-row.expanded div.individual-message div.message-body{overflow:auto;display:inline-flex;flex-direction:column;width:100%;color:var(--nylas-email-body-color, black)}main .email-row.expanded div.individual-message div.message-body div.attachment{overflow-x:auto}main .email-row.expanded div.individual-message div.message-body div.attachment button{margin:0.5rem;height:fit-content;padding:0.3rem 1rem;border:1px solid var(--nylas-email-attachment-border-style, var(--grey));border-radius:30px;color:var(--nylas-email-attachment-button-color, inherit);background:var(--nylas-email-attachment-button-bg, white);cursor:pointer}main .email-row.expanded div.individual-message div.message-body div.attachment button:hover{background:var(--nylas-email-attachment-button-hover-bg, var(--grey-light))}main .email-row.expanded div.individual-message.condensed div.snippet{text-overflow:ellipsis;overflow:hidden;display:block;max-width:inherit;color:var(--nylas-email-snippet-color, var(--grey-dark));margin-top:0.5rem}main .email-row.expanded div.individual-message.condensed div.message-head .avatar-info{display:flex;align-items:center;gap:0.7rem}main .email-row.expanded div.individual-message.condensed div.message-head .avatar-info .draft-to{color:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row.expanded div.individual-message:not(:last-of-type){border-bottom:1px solid var(--nylas-email-border-style-expanded, var(--grey-lighter))}main .email-row.expanded div.individual-message:not(.last-message).expanded div.message-head:hover{cursor:n-resize}main .email-row.expanded div.individual-message.last-message .message-head:hover,main .email-row.expanded div.individual-message.last-message .message-body:hover{cursor:default}main .email-row.expanded div.individual-message.active-draft{border:1px solid var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row.expanded div.individual-message div.message-head{display:flex;justify-content:space-between;align-items:baseline;gap:0.5rem}main .email-row.expanded div.individual-message div.message-date{display:flex;color:var(--nylas-email-message-date-color, var(--grey));font-size:12px}main .email-row.expanded div.individual-message div.message-from{display:flex;align-items:center;color:var(--nylas-email-message-from-color, black)}main .email-row.expanded div.individual-message div.message-from span.name{font-weight:600;margin-right:0.5rem}main .email-row.expanded.expanded div.message-head.draft{flex-flow:column}main .email-row.expanded.expanded div.message-head div.message-from-to{margin:0.5rem 0}main .email-row.expanded.expanded div.message-head div.message-from-to .avatar-info{display:flex;align-items:center;gap:0.7rem}main .email-row.expanded.expanded div.message-head div.message-from-to div.message-to{color:var(--nylas-email-message-to-color, var(--grey));max-width:150px;margin-left:calc(32px + 0.7rem)}main .email-row.expanded.expanded div.message-head div.message-from-to div.message-to div{display:grid;grid-template-columns:1fr 16px}main .email-row.expanded.expanded div.message-head div.message-from-to div.message-to div span{text-overflow:ellipsis;overflow:hidden}main .email-row.expanded.expanded.condensed{gap:1rem}main .email-row.expanded.expanded.condensed:hover,main .email-row.expanded.expanded.condensed:focus{cursor:s-resize;outline:none}main .email-row.expanded.expanded.condensed span.snippet{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row:hover{cursor:pointer}main .email-row .from-message-count{align-items:center;display:grid;grid-template-columns:repeat(2, auto);grid-gap:1rem;justify-content:flex-start;max-width:350px;color:var(--nylas-email-participant-color, var(--grey-dark))}main .email-row .from-message-count .from-participants{display:grid;grid-template-columns:1fr fit-content(60px)}main .email-row .from-message-count .from-participants .participants-name{overflow:hidden;white-space:nowrap;position:relative;text-overflow:ellipsis;display:flex}main .email-row .from-message-count .from-participants .participants-name .from-sub-section.deleted-email{color:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row .from-message-count .from-participants .participants-name .from-sub-section.second{display:none}main .email-row .from-message-count .from-participants .participants-name .from-sub-section.participant-label{text-overflow:ellipsis;overflow:hidden}main .email-row .from-message-count .from-participants .participants-name .from-sub-section.draft-label{color:var(--nylas-email-draft-label-color, #dd4b39);overflow:visible}main .email-row .from-message-count .from-participants .participants-count .show-on-mobile{display:inline-block}main .email-row .from-message-count .from-participants .participants-count .show-on-desktop{display:none}main .email-row .subject-snippet-attachment{padding:0.5rem;padding-top:0.4rem;overflow:hidden}main .email-row .subject-snippet-attachment .subject-snippet{display:flex;flex-direction:column;gap:0.5rem;color:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row .subject-snippet-attachment .subject-snippet .subject{color:var(--nylas-email-subject-color, var(--black));white-space:nowrap;overflow:hidden;text-overflow:ellipsis}main .email-row .subject-snippet-attachment .subject-snippet .snippet{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}main .email-row .subject-snippet-attachment .subject-snippet .snippet.deleted{color:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row .subject-snippet-attachment .attachment{margin-top:0.5rem;gap:1rem;display:flex;overflow-x:auto}main .email-row .subject-snippet-attachment .attachment button{padding:0.3rem 1rem;border:1px solid var(--nylas-email-attachment-border-style, var(--grey));border-radius:30px;color:var(--nylas-email-attachment-button-color, inherit);background:var(--nylas-email-attachment-button-bg, white);cursor:pointer}main .email-row .subject-snippet-attachment .attachment button:hover{background:var(--nylas-email-attachment-button-hover-bg, var(--grey-light))}main .email-row .subject-snippet-attachment div{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:var(--nylas-email-snippet-color, var(--grey-dark))}main .email-row .subject-snippet-attachment div span.subject{color:var(--nylas-email-subject-color, var(--black))}main .email-row .subject-snippet-attachment div.date{display:flex;justify-content:flex-end;gap:0.5rem;width:100%;font-size:14px;color:var(--nylas-email-message-date-color, var(--grey))}main .email-row .date{display:flex;justify-content:flex-end;align-items:center;width:100%;gap:1rem}main .email-row .date>:last-child{padding-right:1rem}main .email-row .date button,main .email-row .date span{background:none;cursor:pointer;display:flex}main .email-row .date button *,main .email-row .date span *{width:1em;height:1em;fill:var(--nylas-email-action-icons-color, var(--grey-dark))}main .email-row.condensed{height:fit-content;padding:0.5rem;flex-wrap:wrap;overflow:hidden;flex-wrap:wrap;display:grid;gap:0.5rem;align-items:flex-start;grid-template-areas:"a a a a b c" "d d d d d d"}main .email-row.condensed .from-star{grid-area:a}main .email-row.condensed .thread-message-count{grid-area:b}main .email-row.condensed .subject-snippet-attachment{grid-area:d}main .email-row.condensed .date{grid-area:c}@media(min-width: 640px){main .email-row.condensed{display:grid;column-gap:1rem;grid-template-areas:unset;grid-template-columns:minmax(250px, 18%) 6% auto 130px}main .email-row.condensed .from-star{grid-area:unset}main .email-row.condensed .thread-message-count{grid-area:unset;min-height:2rem;display:flex;align-items:center;justify-content:center}main .email-row.condensed .subject-snippet-attachment{grid-area:unset}main .email-row.condensed .date{grid-area:unset;min-height:2rem;display:flex;align-items:center}}main .email-row.condensed.disable-click{cursor:not-allowed;display:grid;align-items:flex-start;background:var(--grey-lighter)}main .email-row.condensed .from-star{display:grid;grid-template-columns:25px auto;column-gap:0.5rem}main .email-row.condensed .thread-message-count{color:var(--nylas-email-thread-message-count-color, var(--black));font-size:12px;text-align:left}main .email-row.condensed .date{text-align:right}main .email-row.condensed.unread{background:var(--nylas-email-unread-background, white)}main .email-row.condensed.unread .from-message-count,main .email-row.condensed.unread .date,main .email-row.condensed.unread .subject{font-weight:600;color:var(--nylas-email-unread-subject-color, var(--black))}main .email-row.condensed.unread .thread-message-count{color:var(--nylas-email-unread-thread-message-count-color, var(--blue))}main .email-row.expanded.singular:hover{box-shadow:none;cursor:default}main .email-row.expanded.singular div.individual-message:not(.last-message).expanded .message-head:hover,main .email-row.expanded.singular div.individual-message:not(.last-message).expanded .message-body:hover{cursor:default}@media(min-width: 640px){main .email-row .from-message-count{max-width:350px}main .email-row .from-message-count .from-participants .participants-name{overflow:hidden;white-space:nowrap;position:relative}main .email-row .from-message-count .from-participants .participants-name .from-sub-section.second{display:inline-block}main .email-row .from-message-count .from-participants .participants-count .show-on-mobile{display:none}main .email-row .from-message-count .from-participants .participants-count .show-on-desktop{display:inline-block}main .email-row.expanded.singular .individual-message.expanded{padding-top:0.5rem}main .email-row.condensed{padding:0.5rem;justify-content:initial}main .email-row.condensed div.starred button:hover:before{color:var(--nylas-email-star-button-hover-color, #ffc107)}main .email-row.condensed .date{text-align:right;padding-right:0.5rem;display:flex;justify-content:flex-end;gap:0.5rem;font-size:14px;color:var(--nylas-email-message-date-color, var(--grey))}main .email-row.condensed .thread-message-count{text-align:center}main .email-row.expanded{display:flex;flex-direction:column;box-sizing:border-box;width:100%;overflow-x:hidden}main .email-row.expanded header{padding:1rem 2.5rem}main .email-row.expanded div.individual-message{display:flex;flex-direction:column;align-items:center;padding:1rem 0;width:inherit}main .email-row.expanded div.individual-message div.message-head,main .email-row.expanded div.individual-message div.message-body{width:100%;box-sizing:border-box;padding:0 2.5rem}main .email-row.expanded div.individual-message div.message-body{display:flex;flex-direction:column}main .email-row.expanded div.individual-message.condensed div.snippet{width:100%;box-sizing:border-box;padding:0 2.5rem;white-space:pre-wrap;max-width:95vw;align-self:flex-start}main .email-row.expanded div.individual-message.condensed div.message-head.draft{flex-flow:row}main .email-row.expanded div.individual-message div.message-date{font-size:14px;align-self:center}main .email-row.expanded div.individual-message.expanded div.message-head div.message-from-to{margin:0.5rem 0}main .email-row.expanded div.individual-message.expanded div.message-head div.message-from-to div.message-to{max-width:inherit;overflow:inherit}main .email-row.expanded div.individual-message.expanded div.message-head div.message-from-to div.message-to div{display:grid;grid-template-columns:1fr 16px;align-items:center}main .email-row.expanded div.individual-message.expanded div.message-head div.message-from-to div.message-to div span{text-overflow:ellipsis;overflow:hidden}main .email-row .subject-snippet-attachment .subject-snippet{display:grid;grid-template-columns:auto 1fr;gap:1rem}}</style>',We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},ud,dd,Ue,{id:0,access_token:39,clean_conversation:40,click_action:1,message_id:41,message:2,show_contact_avatar:42,show_expanded_email_view_onload:43,show_number_of_messages:44,show_received_timestamp:45,show_star:46,show_thread_actions:47,theme:48,thread_id:49,thread:3,you:50,show_reply:51,show_reply_all:52,show_forward:53},null,[-1,-1,-1,-1,-1]),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["id","access_token","clean_conversation","click_action","message_id","message","show_contact_avatar","show_expanded_email_view_onload","show_number_of_messages","show_received_timestamp","show_star","show_thread_actions","theme","thread_id","thread","you","show_reply","show_reply_all","show_forward"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),re()}get access_token(){return this.$$.ctx[39]}set access_token(e){this.$$set({access_token:e}),re()}get clean_conversation(){return this.$$.ctx[40]}set clean_conversation(e){this.$$set({clean_conversation:e}),re()}get click_action(){return this.$$.ctx[1]}set click_action(e){this.$$set({click_action:e}),re()}get message_id(){return this.$$.ctx[41]}set message_id(e){this.$$set({message_id:e}),re()}get message(){return this.$$.ctx[2]}set message(e){this.$$set({message:e}),re()}get show_contact_avatar(){return this.$$.ctx[42]}set show_contact_avatar(e){this.$$set({show_contact_avatar:e}),re()}get show_expanded_email_view_onload(){return this.$$.ctx[43]}set show_expanded_email_view_onload(e){this.$$set({show_expanded_email_view_onload:e}),re()}get show_number_of_messages(){return this.$$.ctx[44]}set show_number_of_messages(e){this.$$set({show_number_of_messages:e}),re()}get show_received_timestamp(){return this.$$.ctx[45]}set show_received_timestamp(e){this.$$set({show_received_timestamp:e}),re()}get show_star(){return this.$$.ctx[46]}set show_star(e){this.$$set({show_star:e}),re()}get show_thread_actions(){return this.$$.ctx[47]}set show_thread_actions(e){this.$$set({show_thread_actions:e}),re()}get theme(){return this.$$.ctx[48]}set theme(e){this.$$set({theme:e}),re()}get thread_id(){return this.$$.ctx[49]}set thread_id(e){this.$$set({thread_id:e}),re()}get thread(){return this.$$.ctx[3]}set thread(e){this.$$set({thread:e}),re()}get you(){return this.$$.ctx[50]}set you(e){this.$$set({you:e}),re()}get show_reply(){return this.$$.ctx[51]}set show_reply(e){this.$$set({show_reply:e}),re()}get show_reply_all(){return this.$$.ctx[52]}set show_reply_all(e){this.$$set({show_reply_all:e}),re()}get show_forward(){return this.$$.ctx[53]}set show_forward(e){this.$$set({show_forward:e}),re()}}customElements.define("nylas-email",md);function hd(i){let e,t,n=[{width:"12"},{height:"13"},{viewBox:"0 0 12 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M4.125 5.5625H7.875C8.0625 5.5625 8.25 5.39844 8.25 5.1875V4.8125C8.25 4.625 8.0625 4.4375 7.875 4.4375H4.125C3.91406 4.4375 3.75 4.625 3.75 4.8125V5.1875C3.75 5.39844 3.91406 5.5625 4.125 5.5625ZM3.75 7.4375C3.75 7.64844 3.91406 7.8125 4.125 7.8125H7.875C8.0625 7.8125 8.25 7.64844 8.25 7.4375V7.0625C8.25 6.875 8.0625 6.6875 7.875 6.6875H4.125C3.91406 6.6875 3.75 6.875 3.75 7.0625V7.4375ZM6 10.2969C5.60156 10.2969 5.22656 10.1797 4.89844 9.92188L0 6.38281V11.375C0 12.0078 0.492188 12.5 1.125 12.5H10.875C11.4844 12.5 12 12.0078 12 11.375V6.38281L7.07812 9.92188C6.75 10.1797 6.375 10.2969 6 10.2969ZM11.5547 4.32031C11.3438 4.17969 11.1562 4.01562 10.875 3.80469V2.75C10.875 2.14062 10.3594 1.625 9.75 1.625H7.92188C7.85156 1.57812 7.78125 1.53125 7.71094 1.48438C7.3125 1.20312 6.53906 0.5 6 0.5C5.4375 0.5 4.66406 1.20312 4.26562 1.48438C4.19531 1.53125 4.125 1.57812 4.05469 1.625H2.25C1.61719 1.625 1.125 2.14062 1.125 2.75V3.80469C0.820312 4.01562 0.632812 4.17969 0.421875 4.32031C0.164062 4.53125 0 4.85938 0 5.21094V5.46875L2.25 7.08594V2.75H9.75V7.08594L12 5.46875V5.21094C12 4.85938 11.8359 4.55469 11.5547 4.32031Z"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"12"},{height:"13"},{viewBox:"0 0 12 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function _d(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class pd extends it{constructor(e){super();We(this,e,_d,hd,Ue,{})}}function gd(i){let e,t,n=[{width:"12"},{height:"9"},{viewBox:"0 0 12 9"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M11.7656 2.97656C11.2266 3.39844 10.5469 3.91406 8.15625 5.64844C7.6875 6 6.82031 6.77344 6 6.77344C5.15625 6.77344 4.3125 6 3.82031 5.64844C1.42969 3.91406 0.75 3.39844 0.210938 2.97656C0.117188 2.90625 0 2.97656 0 3.09375V7.875C0 8.50781 0.492188 9 1.125 9H10.875C11.4844 9 12 8.50781 12 7.875V3.09375C12 2.97656 11.8594 2.90625 11.7656 2.97656ZM6 6C6.53906 6.02344 7.3125 5.32031 7.71094 5.03906C10.8281 2.78906 11.0625 2.57812 11.7656 2.01562C11.9062 1.92188 12 1.75781 12 1.57031V1.125C12 0.515625 11.4844 0 10.875 0H1.125C0.492188 0 0 0.515625 0 1.125V1.57031C0 1.75781 0.0703125 1.92188 0.210938 2.01562C0.914062 2.57812 1.14844 2.78906 4.26562 5.03906C4.66406 5.32031 5.4375 6.02344 6 6Z"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"12"},{height:"9"},{viewBox:"0 0 12 9"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function bd(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class vd extends it{constructor(e){super();We(this,e,bd,gd,Ue,{})}}function wd(i){let e,t,n,r,a,l,s,o,c,d,m,h=[{id:"Capa_1"},{"enable-background":"new 0 0 497 497"},{height:"512"},{viewBox:"0 0 497 497"},{width:"512"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],b={};for(let _=0;_<h.length;_+=1)b=ie(b,h[_]);return{c(){e=W("svg"),t=W("g"),n=W("circle"),r=W("circle"),a=W("circle"),l=W("ellipse"),s=W("ellipse"),o=W("ellipse"),c=W("ellipse"),d=W("ellipse"),m=W("circle"),this.h()},l(_){e=Q(_,"svg",{id:!0,"enable-background":!0,height:!0,viewBox:!0,width:!0,xmlns:!0});var O=K(e);t=Q(O,"g",{});var P=K(t);n=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(n).forEach(u),r=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(r).forEach(u),a=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(a).forEach(u),l=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(l).forEach(u),s=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(s).forEach(u),o=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(o).forEach(u),c=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(c).forEach(u),d=Q(P,"ellipse",{cx:!0,cy:!0,fill:!0,rx:!0,ry:!0}),K(d).forEach(u),m=Q(P,"circle",{cx:!0,cy:!0,fill:!0,r:!0}),K(m).forEach(u),P.forEach(u),O.forEach(u),this.h()},h(){f(n,"cx","98"),f(n,"cy","376"),f(n,"fill","#909ba6"),f(n,"r","53"),f(r,"cx","439"),f(r,"cy","336"),f(r,"fill","#c8d2dc"),f(r,"r","46"),f(a,"cx","397"),f(a,"cy","112"),f(a,"fill","#e9edf1"),f(a,"r","38"),f(l,"cx","56.245"),f(l,"cy","244.754"),f(l,"fill","#7e8b96"),f(l,"rx","56.245"),f(l,"ry","54.874"),f(s,"cx","217.821"),f(s,"cy","447.175"),f(s,"fill","#a2abb8"),f(s,"rx","51.132"),f(s,"ry","49.825"),f(o,"cx","349.229"),f(o,"cy","427.873"),f(o,"fill","#b9c3cd"),f(o,"rx","48.575"),f(o,"ry","47.297"),f(c,"cx","117.092"),f(c,"cy","114.794"),f(c,"fill","#5f6c75"),f(c,"rx","58.801"),f(c,"ry","57.397"),f(d,"cx","453.538"),f(d,"cy","216.477"),f(d,"fill","#dce6eb"),f(d,"rx","43.462"),f(d,"ry","42.656"),f(m,"cx","263"),f(m,"cy","62"),f(m,"fill","#4e5a61"),f(m,"r","62"),Te(e,b)},m(_,O){et(_,e,O),fe(e,t),fe(t,n),fe(t,r),fe(t,a),fe(t,l),fe(t,s),fe(t,o),fe(t,c),fe(t,d),fe(t,m)},p(_,[O]){Te(e,b=tt(h,[{id:"Capa_1"},{"enable-background":"new 0 0 497 497"},{height:"512"},{viewBox:"0 0 497 497"},{width:"512"},{xmlns:"http://www.w3.org/2000/svg"},O&1&&_[0]]))},i:k,o:k,d(_){_&&u(e)}}}function yd(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class kd extends it{constructor(e){super();We(this,e,yd,wd,Ue,{})}}function Ed(i){let e,t,n=[{width:"11"},{height:"13"},{viewBox:"0 0 11 13"},{fill:"#8d94a5"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M0.75 11.375C0.75 12.0078 1.24219 12.5 1.875 12.5H8.625C9.23438 12.5 9.75 12.0078 9.75 11.375V3.5H0.75V11.375ZM7.125 5.375C7.125 5.1875 7.28906 5 7.5 5C7.6875 5 7.875 5.1875 7.875 5.375V10.625C7.875 10.8359 7.6875 11 7.5 11C7.28906 11 7.125 10.8359 7.125 10.625V5.375ZM4.875 5.375C4.875 5.1875 5.03906 5 5.25 5C5.4375 5 5.625 5.1875 5.625 5.375V10.625C5.625 10.8359 5.4375 11 5.25 11C5.03906 11 4.875 10.8359 4.875 10.625V5.375ZM2.625 5.375C2.625 5.1875 2.78906 5 3 5C3.1875 5 3.375 5.1875 3.375 5.375V10.625C3.375 10.8359 3.1875 11 3 11C2.78906 11 2.625 10.8359 2.625 10.625V5.375ZM10.125 1.25H7.3125L7.07812 0.828125C6.98438 0.640625 6.79688 0.5 6.58594 0.5H3.89062C3.67969 0.5 3.49219 0.640625 3.39844 0.828125L3.1875 1.25H0.375C0.164062 1.25 0 1.4375 0 1.625V2.375C0 2.58594 0.164062 2.75 0.375 2.75H10.125C10.3125 2.75 10.5 2.58594 10.5 2.375V1.625C10.5 1.4375 10.3125 1.25 10.125 1.25Z"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"11"},{height:"13"},{viewBox:"0 0 11 13"},{fill:"#8d94a5"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function Td(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Cd extends it{constructor(e){super();We(this,e,Td,Ed,Ue,{})}}function Ad(i){let e,t,n,r=[{width:"29"},{height:"24"},{viewBox:"0 0 29 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],a={};for(let l=0;l<r.length;l+=1)a=ie(a,r[l]);return{c(){e=W("svg"),t=W("path"),n=W("path"),this.h()},l(l){e=Q(l,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=K(e);t=Q(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(t).forEach(u),n=Q(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(n).forEach(u),s.forEach(u),this.h()},h(){f(t,"d","M14 16L9.77612 12.0014L14 8"),f(t,"stroke","#6A7285"),f(t,"stroke-width","1.5"),f(t,"stroke-miterlimit","10"),f(n,"d","M19 16L14.7761 12.0014L19 8"),f(n,"stroke","#6A7285"),f(n,"stroke-width","1.5"),f(n,"stroke-miterlimit","10"),Te(e,a)},m(l,s){et(l,e,s),fe(e,t),fe(e,n)},p(l,[s]){Te(e,a=tt(r,[{width:"29"},{height:"24"},{viewBox:"0 0 29 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&l[0]]))},i:k,o:k,d(l){l&&u(e)}}}function Sd(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Od extends it{constructor(e){super();We(this,e,Sd,Ad,Ue,{})}}function Ld(i){let e,t,n=[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M14 16L9.77612 12.0014L14 8"),f(t,"stroke","#6A7285"),f(t,"stroke-width","1.5"),f(t,"stroke-miterlimit","10"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function Md(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Nd extends it{constructor(e){super();We(this,e,Md,Ld,Ue,{})}}function Dd(i){let e,t,n=[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],r={};for(let a=0;a<n.length;a+=1)r=ie(r,n[a]);return{c(){e=W("svg"),t=W("path"),this.h()},l(a){e=Q(a,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var l=K(e);t=Q(l,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(t).forEach(u),l.forEach(u),this.h()},h(){f(t,"d","M10 8L14.2239 11.9986L10 16"),f(t,"stroke","#6A7285"),f(t,"stroke-width","1.5"),f(t,"stroke-miterlimit","10"),Te(e,r)},m(a,l){et(a,e,l),fe(e,t)},p(a,[l]){Te(e,r=tt(n,[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},l&1&&a[0]]))},i:k,o:k,d(a){a&&u(e)}}}function Pd(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class jd extends it{constructor(e){super();We(this,e,Pd,Dd,Ue,{})}}function Rd(i){let e,t,n,r=[{width:"29"},{height:"24"},{viewBox:"0 0 29 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},i[0]],a={};for(let l=0;l<r.length;l+=1)a=ie(a,r[l]);return{c(){e=W("svg"),t=W("path"),n=W("path"),this.h()},l(l){e=Q(l,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=K(e);t=Q(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(t).forEach(u),n=Q(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),K(n).forEach(u),s.forEach(u),this.h()},h(){f(t,"d","M15 8L19.2239 11.9986L15 16"),f(t,"stroke","#6A7285"),f(t,"stroke-width","1.5"),f(t,"stroke-miterlimit","10"),f(n,"d","M10 8L14.2239 11.9986L10 16"),f(n,"stroke","#6A7285"),f(n,"stroke-width","1.5"),f(n,"stroke-miterlimit","10"),Te(e,a)},m(l,s){et(l,e,s),fe(e,t),fe(e,n)},p(l,[s]){Te(e,a=tt(r,[{width:"29"},{height:"24"},{viewBox:"0 0 29 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&l[0]]))},i:k,o:k,d(l){l&&u(e)}}}function Id(i,e,t){return i.$$set=n=>{t(0,e=ie(ie({},e),ve(n)))},e=ve(e),[e]}class Fd extends it{constructor(e){super();We(this,e,Id,Rd,Ue,{})}}function Vl(i){let e,t,n=i[0]*i[1]+1+"",r,a,l,s=Math.min((i[0]+1)*i[1],i[3])+"",o,c,d,m;return{c(){e=v("span"),t=v("span"),r=J(n),a=J(`
      -
      `),l=v("span"),o=J(s),c=J(`
      of
      `),d=v("span"),m=J(i[3]),f(t,"class","page-start"),f(l,"class","page-end"),f(d,"class","total"),f(e,"class","page-indicator")},m(h,b){g(h,e,b),y(e,t),y(t,r),y(e,a),y(e,l),y(l,o),y(e,c),y(e,d),y(d,m)},p(h,b){b&3&&n!==(n=h[0]*h[1]+1+"")&&pe(r,n),b&11&&s!==(s=Math.min((h[0]+1)*h[1],h[3])+"")&&pe(o,s),b&8&&pe(m,h[3])},d(h){h&&u(e)}}}function Gl(i){let e,t,n,r,a,l,s,o,c,d,m,h,b,_,O,P,C,I;return t=new Od({props:{style:"width: 24px; height: 24px;"}}),l=new Nd({props:{style:"width: 24px; height: 24px;"}}),d=new jd({props:{style:"height:24px;width:24px;"}}),_=new Fd({props:{style:"height:24px;width:24px;"}}),{c(){e=v("button"),He(t.$$.fragment),r=z(),a=v("button"),He(l.$$.fragment),o=z(),c=v("button"),He(d.$$.fragment),h=z(),b=v("button"),He(_.$$.fragment),f(e,"class","paginate-btn first-btn"),e.disabled=n=i[0]===0,f(a,"class","paginate-btn back-btn"),a.disabled=s=i[0]===0,f(c,"class","paginate-btn next-btn"),c.disabled=m=i[0]===i[2]-1,f(b,"class","paginate-btn last-btn"),b.disabled=O=i[0]===i[2]-1},m(N,oe){g(N,e,oe),Fe(t,e,null),g(N,r,oe),g(N,a,oe),Fe(l,a,null),g(N,o,oe),g(N,c,oe),Fe(d,c,null),g(N,h,oe),g(N,b,oe),Fe(_,b,null),P=!0,C||(I=[Y(e,"click",i[6]),Y(a,"click",i[7]),Y(c,"click",i[8]),Y(b,"click",i[9])],C=!0)},p(N,oe){(!P||oe&1&&n!==(n=N[0]===0))&&(e.disabled=n),(!P||oe&1&&s!==(s=N[0]===0))&&(a.disabled=s),(!P||oe&5&&m!==(m=N[0]===N[2]-1))&&(c.disabled=m),(!P||oe&5&&O!==(O=N[0]===N[2]-1))&&(b.disabled=O)},i(N){P||(A(t.$$.fragment,N),A(l.$$.fragment,N),A(d.$$.fragment,N),A(_.$$.fragment,N),P=!0)},o(N){F(t.$$.fragment,N),F(l.$$.fragment,N),F(d.$$.fragment,N),F(_.$$.fragment,N),P=!1},d(N){N&&u(e),Ie(t),N&&u(r),N&&u(a),Ie(l),N&&u(o),N&&u(c),Ie(d),N&&u(h),N&&u(b),Ie(_),C=!1,ot(I)}}}function xd(i){let e,t,n,r=i[4]&&Vl(i),a=i[2]>1&&Gl(i);return{c(){e=v("nav"),r&&r.c(),t=z(),a&&a.c(),this.c=k,f(e,"class","pagination-nav")},m(l,s){g(l,e,s),r&&r.m(e,null),y(e,t),a&&a.m(e,null),n=!0},p(l,[s]){l[4]?r?r.p(l,s):(r=Vl(l),r.c(),r.m(e,t)):r&&(r.d(1),r=null),l[2]>1?a?(a.p(l,s),s&4&&A(a,1)):(a=Gl(l),a.c(),A(a,1),a.m(e,null)):a&&(Ae(),F(a,1,1,()=>{a=null}),Se())},i(l){n||(A(a),n=!0)},o(l){F(a),n=!1},d(l){l&&u(e),r&&r.d(),a&&a.d()}}}function Ud(i,e,t){let{current_page:n=0}=e,{items_per_page:r}=e,{num_pages:a=1}=e,{num_items:l}=e,{num_pages_visible:s=!0}=e;const o=Ui(Zt());function c(_){o("changePage",{newPage:_})}const d=()=>c(0),m=()=>c(n-1),h=()=>c(n+1),b=()=>c(a-1);return i.$$set=_=>{"current_page"in _&&t(0,n=_.current_page),"items_per_page"in _&&t(1,r=_.items_per_page),"num_pages"in _&&t(2,a=_.num_pages),"num_items"in _&&t(3,l=_.num_items),"num_pages_visible"in _&&t(4,s=_.num_pages_visible)},[n,r,a,l,s,c,d,m,h,b]}class Bd extends Jt{constructor(e){super();this.shadowRoot.innerHTML="<style>.pagination-nav{--disabled-text:#454954;--font:-apple-system, BlinkMacSystemFont, sans-serif;display:flex;align-items:center}.pagination-nav .page-indicator{color:var(--nylas-mailbox-pagination-indicator-color, #454954);height:38px;margin:2em 1em 0 1em}.pagination-nav .paginate-btn{display:flex;justify-content:center;align-items:center;margin-top:1em;text-align:center;min-width:38px;min-height:38px;margin-right:-1px;font-family:var(--font);cursor:pointer;border:1px solid var(--nylas-mailbox-pagination-button-border-color, #e3e8ee);background-color:var(--nylas-mailbox-pagination-button-background, #f7f7f8);color:var(--nylas-mailbox-pagination-button-color, #454954)}.pagination-nav .paginate-btn *{stroke:var(--nylas-mailbox-pagination-button-color, #454954)}.pagination-nav .paginate-btn:hover{background-color:var(--nylas-mailbox-pagination-button-hover-color, #eaeaea)}.pagination-nav .paginate-btn:disabled{cursor:default;background-color:var(--nylas-mailbox-pagination-button-background-disabled, #f7f7f8);border:1px solid var(--nylas-mailbox-pagination-button-background-disabled, #f7f7f8)}</style>",We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},Ud,xd,Ue,{current_page:0,items_per_page:1,num_pages:2,num_items:3,num_pages_visible:4},null),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["current_page","items_per_page","num_pages","num_items","num_pages_visible"]}get current_page(){return this.$$.ctx[0]}set current_page(e){this.$$set({current_page:e}),re()}get items_per_page(){return this.$$.ctx[1]}set items_per_page(e){this.$$set({items_per_page:e}),re()}get num_pages(){return this.$$.ctx[2]}set num_pages(e){this.$$set({num_pages:e}),re()}get num_items(){return this.$$.ctx[3]}set num_items(e){this.$$set({num_items:e}),re()}get num_pages_visible(){return this.$$.ctx[4]}set num_pages_visible(e){this.$$set({num_pages_visible:e}),re()}}customElements.define("pagination-nav",Bd);var Hd="@nylas/components-mailbox",zd="1.1.6-canary.27",Vd={type:"git",url:"github:nylas/components.git",directory:"components/mailbox"},Gd={build:"rollup -c",dev:"rollup -c -w",tscheck:"tsc && svelte-check",start:"echo 'Nothing to start'"},Wd="index.js",Zd="cca94159c114ecff613f41caa0a4468e0f698e2c",Jd={dompurify:"^2.3.3"},Yd={"@types/dompurify":"^2.3.1"},Kd={name:Hd,version:zd,repository:Vd,scripts:Gd,main:Wd,gitHead:Zd,dependencies:Jd,devDependencies:Yd};function Wl(i,e,t){const n=i.slice();return n[88]=e[t],n}function Zl(i,e,t){const n=i.slice();return n[91]=e[t],n}function Jl(i,e,t){const n=i.slice();return n[94]=e[t],n}function Yl(i,e,t){const n=i.slice();return n[97]=e[t],n}function Kl(i){let e,t,n;return{c(){e=v("link"),f(e,"rel","stylesheet"),f(e,"href",i[16])},m(r,a){g(r,e,a),t||(n=[Y(e,"load",i[60]),Y(e,"error",i[61])],t=!0)},p(r,a){a[0]&65536&&f(e,"href",r[16])},d(r){r&&u(e),t=!1,ot(n)}}}function Xd(i){let e,t,n,r,a;return t=new kd({props:{class:"spinner",style:"height:18px; animation: rotate 2s linear infinite; margin:10px;"}}),{c(){e=v("div"),He(t.$$.fragment),n=z(),r=v("p"),r.textContent="Loading...",f(e,"class","mailbox-loader")},m(l,s){g(l,e,s),Fe(t,e,null),y(e,n),y(e,r),a=!0},p:k,i(l){a||(A(t.$$.fragment,l),a=!0)},o(l){F(t.$$.fragment,l),a=!1},d(l){l&&u(e),Ie(t)}}}function Qd(i){let e,t,n,r;const a=[$d,qd],l=[];function s(o,c){return o[7]?0:1}return e=s(i),t=l[e]=a[e](i),{c(){t.c(),n=Be()},m(o,c){l[e].m(o,c),g(o,n,c),r=!0},p(o,c){let d=e;e=s(o),e===d?l[e].p(o,c):(Ae(),F(l[d],1,1,()=>{l[d]=null}),Se(),t=l[e],t?t.p(o,c):(t=l[e]=a[e](o),t.c()),A(t,1),t.m(n.parentNode,n))},i(o){r||(A(t),r=!0)},o(o){F(t),r=!1},d(o){l[e].d(o),o&&u(n)}}}function qd(i){let e,t,n,r,a,l=i[1].header&&Xl(i),s=i[1].show_thread_checkbox&&i[1].actions_bar.length&&Ql(i),o=i[5],c=[];for(let h=0;h<o.length;h+=1)c[h]=ca(Wl(i,o,h));let d=null;o.length||(d=la(i));let m=i[5]&&i[5].length>0&&da(i);return{c(){l&&l.c(),e=z(),s&&s.c(),t=z(),n=v("ul");for(let h=0;h<c.length;h+=1)c[h].c();d&&d.c(),r=z(),m&&m.c(),f(n,"id","mailboxlist"),we(n,"refreshing",i[14]),we(n,"deleting",i[15])},m(h,b){l&&l.m(h,b),g(h,e,b),s&&s.m(h,b),g(h,t,b),g(h,n,b);for(let _=0;_<c.length;_+=1)c[_].m(n,null);d&&d.m(n,null),y(n,r),m&&m.m(n,null),a=!0},p(h,b){if(h[1].header?l?l.p(h,b):(l=Xl(h),l.c(),l.m(e.parentNode,e)):l&&(l.d(1),l=null),h[1].show_thread_checkbox&&h[1].actions_bar.length?s?(s.p(h,b),b[0]&2&&A(s,1)):(s=Ql(h),s.c(),A(s,1),s.m(t.parentNode,t)):s&&(Ae(),F(s,1,1,()=>{s=null}),Se()),b[0]&1789854755){o=h[5];let _;for(_=0;_<o.length;_+=1){const O=Wl(h,o,_);c[_]?c[_].p(O,b):(c[_]=ca(O),c[_].c(),c[_].m(n,r))}for(;_<c.length;_+=1)c[_].d(1);c.length=o.length,!o.length&&d?d.p(h,b):o.length?d&&(d.d(1),d=null):(d=la(h),d.c(),d.m(n,r))}h[5]&&h[5].length>0?m?m.p(h,b):(m=da(h),m.c(),m.m(n,null)):m&&(m.d(1),m=null),b[0]&16384&&we(n,"refreshing",h[14]),b[0]&32768&&we(n,"deleting",h[15])},i(h){a||(A(s),a=!0)},o(h){F(s),a=!1},d(h){l&&l.d(h),h&&u(e),s&&s.d(h),h&&u(t),h&&u(n),bt(c,h),d&&d.d(),m&&m.d()}}}function $d(i){let e,t,n,r,a,l,s,o;return{c(){e=v("div"),t=v("nylas-email"),S(t,"clean_conversation",!1),S(t,"thread",i[7]),S(t,"you",i[10]),S(t,"show_star",n=i[1].show_star),S(t,"click_action","mailbox"),S(t,"show_reply",r=i[1].show_reply),S(t,"show_reply_all",a=i[1].show_reply_all),S(t,"show_forward",l=i[1].show_forward),S(t,"theme",i[16]),f(e,"class","email-container")},m(c,d){g(c,e,d),y(e,t),s||(o=[Y(t,"messageClicked",i[17]),Y(t,"draftClicked",Ke(i[18])),Y(t,"forwardClicked",Ke(i[18])),Y(t,"replyClicked",Ke(i[18])),Y(t,"replyAllClicked",Ke(i[18])),Y(t,"threadStarred",i[23]),Y(t,"returnToMailbox",i[30]),Y(t,"toggleThreadUnreadStatus",i[25]),Y(t,"threadDeleted",i[27]),Y(t,"downloadClicked",i[29])],s=!0)},p(c,d){d[0]&128&&S(t,"thread",c[7]),d[0]&1024&&S(t,"you",c[10]),d[0]&2&&n!==(n=c[1].show_star)&&S(t,"show_star",n),d[0]&2&&r!==(r=c[1].show_reply)&&S(t,"show_reply",r),d[0]&2&&a!==(a=c[1].show_reply_all)&&S(t,"show_reply_all",a),d[0]&2&&l!==(l=c[1].show_forward)&&S(t,"show_forward",l),d[0]&65536&&S(t,"theme",c[16])},i:k,o:k,d(c){c&&u(e),s=!1,ot(o)}}}function Xl(i){let e,t,n,r,a,l,s,o,c;return{c(){e=v("header"),t=v("button"),n=W("svg"),r=W("path"),a=z(),l=v("h1"),s=J(i[0]),f(r,"d","M9.41757 0.780979L9.57471 0.00782773C12.9388 0.717887 15.4617 3.80648 15.4617 7.49954C15.4617 8.7935 15.1519 10.0136 14.6046 11.083L16 12.458L11.6994 13.7113L12.7846 9.28951L14.0208 10.5077C14.4473 9.60009 14.6869 8.5795 14.6869 7.49954C14.6869 4.17742 12.4188 1.41444 9.41757 0.780979ZM0 2.90469L4.24241 1.46013L3.3489 5.92625L2.06118 4.7644C1.71079 5.60175 1.51627 6.5265 1.51627 7.49954C1.51627 10.8217 3.7844 13.5847 6.78563 14.2182L6.62849 14.9913C3.26437 14.2812 0.741524 11.1926 0.741524 7.49954C0.741524 6.32506 0.996751 5.21133 1.45323 4.21587L0 2.90469Z"),f(n,"width","16"),f(n,"height","16"),f(n,"viewBox","0 0 16 16"),we(n,"refreshing",i[14])},m(d,m){g(d,e,m),y(e,t),y(t,n),y(n,r),y(e,a),y(e,l),y(l,s),o||(c=Y(t,"click",i[20]),o=!0)},p(d,m){m[0]&16384&&we(n,"refreshing",d[14]),m[0]&1&&pe(s,d[0])},d(d){d&&u(e),o=!1,c()}}}function Ql(i){let e,t=i[1].actions_bar.includes(jt.SELECTALL),n,r=i[5].filter(ua).length,a,l=t&&ql(i),s=r&&ea(i);return{c(){e=v("div"),l&&l.c(),n=z(),s&&s.c(),f(e,"role","toolbar"),f(e,"aria-label","Bulk actions"),f(e,"aria-controls","mailboxlist")},m(o,c){g(o,e,c),l&&l.m(e,null),y(e,n),s&&s.m(e,null),a=!0},p(o,c){c[0]&2&&(t=o[1].actions_bar.includes(jt.SELECTALL)),t?l?l.p(o,c):(l=ql(o),l.c(),l.m(e,n)):l&&(l.d(1),l=null),c[0]&32&&(r=o[5].filter(ua).length),r?s?(s.p(o,c),c[0]&32&&A(s,1)):(s=ea(o),s.c(),A(s,1),s.m(e,null)):s&&(Ae(),F(s,1,1,()=>{s=null}),Se())},i(o){a||(A(s),a=!0)},o(o){F(s),a=!1},d(o){o&&u(e),l&&l.d(),s&&s.d()}}}function ql(i){let e,t=[i[11]?"Deselect all":"Select all"],n=[];for(let r=0;r<1;r+=1)n[r]=$l(Yl(i,t,r));return{c(){e=v("div");for(let r=0;r<1;r+=1)n[r].c();f(e,"class","thread-checkbox")},m(r,a){g(r,e,a);for(let l=0;l<1;l+=1)n[l].m(e,null)},p(r,a){if(a[0]&4196352){t=[r[11]?"Deselect all":"Select all"];let l;for(l=0;l<1;l+=1){const s=Yl(r,t,l);n[l]?n[l].p(s,a):(n[l]=$l(s),n[l].c(),n[l].m(e,null))}for(;l<1;l+=1)n[l].d(1)}},d(r){r&&u(e),bt(n,r)}}}function $l(i){let e,t,n,r,a;return{c(){e=v("input"),f(e,"title",t=i[97]),f(e,"aria-label",n=i[97]),f(e,"type","checkbox"),e.checked=i[11]},m(l,s){g(l,e,s),r||(a=Y(e,"click",i[22]),r=!0)},p(l,s){s[0]&2048&&t!==(t=l[97])&&f(e,"title",t),s[0]&2048&&n!==(n=l[97])&&f(e,"aria-label",n),s[0]&2048&&(e.checked=l[11])},d(l){l&&u(e),r=!1,a()}}}function ea(i){let e=i[1].actions_bar.includes(jt.DELETE),t,n=i[1].show_star&&i[1].actions_bar.includes(jt.STAR),r,a=i[1].actions_bar.includes(jt.UNREAD),l,s,o=e&&ta(i),c=n&&ia(i),d=a&&ra(i);return{c(){o&&o.c(),t=z(),c&&c.c(),r=z(),d&&d.c(),l=Be()},m(m,h){o&&o.m(m,h),g(m,t,h),c&&c.m(m,h),g(m,r,h),d&&d.m(m,h),g(m,l,h),s=!0},p(m,h){h[0]&2&&(e=m[1].actions_bar.includes(jt.DELETE)),e?o?(o.p(m,h),h[0]&2&&A(o,1)):(o=ta(m),o.c(),A(o,1),o.m(t.parentNode,t)):o&&(Ae(),F(o,1,1,()=>{o=null}),Se()),h[0]&2&&(n=m[1].show_star&&m[1].actions_bar.includes(jt.STAR)),n?c?c.p(m,h):(c=ia(m),c.c(),c.m(r.parentNode,r)):c&&(c.d(1),c=null),h[0]&2&&(a=m[1].actions_bar.includes(jt.UNREAD)),a?d?(d.p(m,h),h[0]&2&&A(d,1)):(d=ra(m),d.c(),A(d,1),d.m(l.parentNode,l)):d&&(Ae(),F(d,1,1,()=>{d=null}),Se())},i(m){s||(A(o),A(d),s=!0)},o(m){F(o),F(d),s=!1},d(m){o&&o.d(m),m&&u(t),c&&c.d(m),m&&u(r),d&&d.d(m),m&&u(l)}}}function ta(i){let e,t,n,r,a,l,s;return n=new Cd({}),{c(){e=v("div"),t=v("button"),He(n.$$.fragment),f(t,"title","Delete selected email(s)"),t.disabled=r=!i[5].filter(ma).length,f(t,"aria-label","Delete selected email(s)"),f(e,"class","delete")},m(o,c){g(o,e,c),y(e,t),Fe(n,t,null),a=!0,l||(s=Y(t,"click",i[62]),l=!0)},p(o,c){(!a||c[0]&32&&r!==(r=!o[5].filter(ma).length))&&(t.disabled=r)},i(o){a||(A(n.$$.fragment,o),a=!0)},o(o){F(n.$$.fragment,o),a=!1},d(o){o&&u(e),Ie(n),l=!1,s()}}}function ia(i){let e,t=[i[12]?"Unstar selected email(s)":"Star selected email(s)"],n=[];for(let r=0;r<1;r+=1)n[r]=na(Jl(i,t,r));return{c(){e=v("div");for(let r=0;r<1;r+=1)n[r].c();f(e,"class","starred")},m(r,a){g(r,e,a);for(let l=0;l<1;l+=1)n[l].m(e,null)},p(r,a){if(a[0]&16781344){t=[r[12]?"Unstar selected email(s)":"Star selected email(s)"];let l;for(l=0;l<1;l+=1){const s=Jl(r,t,l);n[l]?n[l].p(s,a):(n[l]=na(s),n[l].c(),n[l].m(e,null))}for(;l<1;l+=1)n[l].d(1)}},d(r){r&&u(e),bt(n,r)}}}function na(i){let e,t,n,r,a,l,s;return{c(){e=v("button"),f(e,"class",t=i[12]?"starred":""),f(e,"title",n=i[94]),f(e,"aria-label",r=i[94]),f(e,"role","switch"),e.disabled=a=!i[5].filter(ha).length,f(e,"aria-checked",i[12])},m(o,c){g(o,e,c),l||(s=Y(e,"click",i[63]),l=!0)},p(o,c){c[0]&4096&&t!==(t=o[12]?"starred":"")&&f(e,"class",t),c[0]&4096&&n!==(n=o[94])&&f(e,"title",n),c[0]&4096&&r!==(r=o[94])&&f(e,"aria-label",r),c[0]&32&&a!==(a=!o[5].filter(ha).length)&&(e.disabled=a),c[0]&4096&&f(e,"aria-checked",o[12])},d(o){o&&u(e),l=!1,s()}}}function ra(i){let e,t,n,r;const a=[tf,ef],l=[];function s(o,c){return o[13]?1:0}return t=s(i),n=l[t]=a[t](i),{c(){e=v("div"),n.c(),f(e,"class","read-status")},m(o,c){g(o,e,c),l[t].m(e,null),r=!0},p(o,c){let d=t;t=s(o),t===d?l[t].p(o,c):(Ae(),F(l[d],1,1,()=>{l[d]=null}),Se(),n=l[t],n?n.p(o,c):(n=l[t]=a[t](o),n.c()),A(n,1),n.m(e,null))},i(o){r||(A(n),r=!0)},o(o){F(n),r=!1},d(o){o&&u(e),l[t].d()}}}function ef(i){let e,t,n,r,a;return t=new vd({}),{c(){e=v("button"),He(t.$$.fragment),f(e,"data-cy","mark-unread"),f(e,"title","Mark selected email(s) as unread"),f(e,"aria-label","Mark selected email(s) as unread")},m(l,s){g(l,e,s),Fe(t,e,null),n=!0,r||(a=Y(e,"click",i[65]),r=!0)},p:k,i(l){n||(A(t.$$.fragment,l),n=!0)},o(l){F(t.$$.fragment,l),n=!1},d(l){l&&u(e),Ie(t),r=!1,a()}}}function tf(i){let e,t,n,r,a,l;return t=new pd({}),{c(){e=v("button"),He(t.$$.fragment),f(e,"data-cy","mark-read"),f(e,"title","Mark selected email(s) as read"),e.disabled=n=!i[5].filter(_a).length,f(e,"aria-label","Mark selected email(s) as read")},m(s,o){g(s,e,o),Fe(t,e,null),r=!0,a||(l=Y(e,"click",i[64]),a=!0)},p(s,o){(!r||o[0]&32&&n!==(n=!s[5].filter(_a).length))&&(e.disabled=n)},i(s){r||(A(t.$$.fragment,s),r=!0)},o(s){F(t.$$.fragment,s),r=!1},d(s){s&&u(e),Ie(t),a=!1,l()}}}function la(i){let e,t,n;function r(s,o){return s[1].header?rf:nf}let a=r(i),l=a(i);return{c(){e=v("div"),t=v("p"),l.c(),n=J(" is empty!"),f(e,"class","mailbox-empty")},m(s,o){g(s,e,o),y(e,t),l.m(t,null),y(t,n)},p(s,o){a===(a=r(s))&&l?l.p(s,o):(l.d(1),l=a(s),l&&(l.c(),l.m(t,n)))},d(s){s&&u(e),l.d()}}}function nf(i){let e;return{c(){e=J("Your Mailbox")},m(t,n){g(t,e,n)},p:k,d(t){t&&u(e)}}}function rf(i){let e;return{c(){e=J(i[0])},m(t,n){g(t,e,n)},p(t,n){n[0]&1&&pe(e,t[0])},d(t){t&&u(e)}}}function aa(i){let e,t,n,r,a,l,s;function o(...c){return i[66](i[88],...c)}return{c(){var c,d,m,h,b;e=v("input"),f(e,"title",t=i[91]),f(e,"aria-label",n=i[91]),f(e,"type","checkbox"),e.checked=r=i[88].selected,e.disabled=a=i[88]&&((c=i[88])==null?void 0:c.messages)&&((m=(d=i[88])==null?void 0:d.messages)==null?void 0:m.length)<=0&&!((b=(h=i[88])==null?void 0:h.drafts)==null?void 0:b.length)},m(c,d){g(c,e,d),l||(s=Y(e,"click",o),l=!0)},p(c,d){var m,h,b,_,O;i=c,d[0]&32&&t!==(t=i[91])&&f(e,"title",t),d[0]&32&&n!==(n=i[91])&&f(e,"aria-label",n),d[0]&32&&r!==(r=i[88].selected)&&(e.checked=r),d[0]&32&&a!==(a=i[88]&&((m=i[88])==null?void 0:m.messages)&&((b=(h=i[88])==null?void 0:h.messages)==null?void 0:b.length)<=0&&!((O=(_=i[88])==null?void 0:_.drafts)==null?void 0:O.length))&&(e.disabled=a)},d(c){c&&u(e),l=!1,s()}}}function oa(i){let e,t,n,r,a,l,s,o,c;return{c(){e=v("nylas-email"),S(e,"clean_conversation",!1),S(e,"thread",t=i[88]),S(e,"you",i[10]),S(e,"show_star",n=i[1].show_star),S(e,"click_action","mailbox"),S(e,"show_reply",r=i[1].show_reply),S(e,"show_reply_all",a=i[1].show_reply_all),S(e,"show_forward",l=i[1].show_forward),S(e,"theme",i[16]),S(e,"show_thread_actions",s=i[88].selected)},m(d,m){g(d,e,m),o||(c=[Y(e,"threadClicked",i[19]),Y(e,"messageClicked",i[17]),Y(e,"draftClicked",Ke(i[18])),Y(e,"forwardClicked",Ke(i[18])),Y(e,"replyClicked",Ke(i[18])),Y(e,"replyAllClicked",Ke(i[18])),Y(e,"threadStarred",i[23]),Y(e,"returnToMailbox",i[30]),Y(e,"toggleThreadUnreadStatus",i[25]),Y(e,"threadDeleted",i[27]),Y(e,"downloadClicked",i[29])],o=!0)},p(d,m){m[0]&32&&t!==(t=d[88])&&S(e,"thread",t),m[0]&1024&&S(e,"you",d[10]),m[0]&2&&n!==(n=d[1].show_star)&&S(e,"show_star",n),m[0]&2&&r!==(r=d[1].show_reply)&&S(e,"show_reply",r),m[0]&2&&a!==(a=d[1].show_reply_all)&&S(e,"show_reply_all",a),m[0]&2&&l!==(l=d[1].show_forward)&&S(e,"show_forward",l),m[0]&65536&&S(e,"theme",d[16]),m[0]&32&&s!==(s=d[88].selected)&&S(e,"show_thread_actions",s)},d(d){d&&u(e),o=!1,ot(c)}}}function sa(i){let e,t,n,r,a=i[88].id,l=i[1].show_thread_checkbox&&aa(i),s=oa(i);return{c(){var o,c,d,m,h;e=v("li"),t=v("div"),l&&l.c(),n=z(),r=v("div"),s.c(),f(t,"class","checkbox-container thread-checkbox"),f(r,"class","email-container"),we(e,"unread",i[88].unread),we(e,"checked",i[88].selected),we(e,"no-messages",i[88]&&((o=i[88])==null?void 0:o.messages)&&((d=(c=i[88])==null?void 0:c.messages)==null?void 0:d.length)<=0&&!((h=(m=i[88])==null?void 0:m.drafts)==null?void 0:h.length))},m(o,c){g(o,e,c),y(e,t),l&&l.m(t,null),y(e,n),y(e,r),s.m(r,null)},p(o,c){var d,m,h,b,_;o[1].show_thread_checkbox?l?l.p(o,c):(l=aa(o),l.c(),l.m(t,null)):l&&(l.d(1),l=null),c[0]&32&&Ue(a,a=o[88].id)?(s.d(1),s=oa(o),s.c(),s.m(r,null)):s.p(o,c),c[0]&32&&we(e,"unread",o[88].unread),c[0]&32&&we(e,"checked",o[88].selected),c[0]&32&&we(e,"no-messages",o[88]&&((d=o[88])==null?void 0:d.messages)&&((h=(m=o[88])==null?void 0:m.messages)==null?void 0:h.length)<=0&&!((_=(b=o[88])==null?void 0:b.drafts)==null?void 0:_.length))},d(o){o&&u(e),l&&l.d(),s.d(o)}}}function ca(i){let e,t=[i[88].selected?`Deselect thread ${i[88].subject}`:`Select thread ${i[88].subject}`],n=[];for(let r=0;r<1;r+=1)n[r]=sa(Zl(i,t,r));return{c(){for(let r=0;r<1;r+=1)n[r].c();e=Be()},m(r,a){for(let l=0;l<1;l+=1)n[l].m(r,a);g(r,e,a)},p(r,a){if(a[0]&1789854754){t=[r[88].selected?`Deselect thread ${r[88].subject}`:`Select thread ${r[88].subject}`];let l;for(l=0;l<1;l+=1){const s=Zl(r,t,l);n[l]?n[l].p(s,a):(n[l]=sa(s),n[l].c(),n[l].m(e.parentNode,e))}for(;l<1;l+=1)n[l].d(1)}},d(r){bt(n,r),r&&u(e)}}}function da(i){let e,t,n,r,a;return{c(){e=v("pagination-nav"),S(e,"current_page",i[3]),S(e,"items_per_page",t=i[1].items_per_page),S(e,"num_pages",i[9]),S(e,"num_items",i[4]),S(e,"visible",!0),S(e,"num_pages_visible",n=!i[1].keyword_to_search)},m(l,s){g(l,e,s),r||(a=Y(e,"changePage",i[31]),r=!0)},p(l,s){s[0]&8&&S(e,"current_page",l[3]),s[0]&2&&t!==(t=l[1].items_per_page)&&S(e,"items_per_page",t),s[0]&512&&S(e,"num_pages",l[9]),s[0]&16&&S(e,"num_items",l[4]),s[0]&2&&n!==(n=!l[1].keyword_to_search)&&S(e,"num_pages_visible",n)},d(l){l&&u(e),r=!1,a()}}}function fa(i){let e,t,n,r,a,l,s,o,c,d,m={ctx:i,current:null,token:null,hasCatch:!1,pending:of,then:af,catch:lf,value:87};return vt(n=i[5].filter(pa).length>1,m),{c(){e=v("div"),t=v("div"),m.block.c(),r=z(),a=v("div"),l=v("button"),l.textContent="Confirm",s=z(),o=v("button"),o.textContent="Cancel",f(l,"class","danger"),f(o,"class","cancel"),f(a,"class","footer"),f(t,"class","modal"),f(e,"class","overlay")},m(h,b){g(h,e,b),y(e,t),m.block.m(t,m.anchor=null),m.mount=()=>t,m.anchor=r,y(t,r),y(t,a),y(a,l),y(a,s),y(a,o),c||(d=[Y(l,"click",i[28]),Y(o,"click",i[67]),Y(e,"click",i[68])],c=!0)},p(h,b){i=h,m.ctx=i,b[0]&32&&n!==(n=i[5].filter(pa).length>1)&&vt(n,m)||li(m,i,b)},d(h){h&&u(e),m.block.d(),m.token=null,m=null,c=!1,ot(d)}}}function lf(i){return{c:k,m:k,p:k,d:k}}function af(i){let e,t=`Are you sure you want to delete the selected email${i[87]?"s":""}?`,n,r,a,l=`Once deleted, ${i[87]?"these emails":"this email"} can only be recovered from your native email
        client.`,s;return{c(){e=v("h3"),n=J(t),r=z(),a=v("p"),s=J(l),f(e,"class","title"),f(a,"class","description")},m(o,c){g(o,e,c),y(e,n),g(o,r,c),g(o,a,c),y(a,s)},p(o,c){c[0]&32&&t!==(t=`Are you sure you want to delete the selected email${o[87]?"s":""}?`)&&pe(n,t),c[0]&32&&l!==(l=`Once deleted, ${o[87]?"these emails":"this email"} can only be recovered from your native email
        client.`)&&pe(s,l)},d(o){o&&u(e),o&&u(r),o&&u(a)}}}function of(i){return{c:k,m:k,p:k,d:k}}function sf(i){let e,t,n,r,a,l,s,o=i[16]&&Kl(i);const c=[Qd,Xd],d=[];function m(b,_){return b[2]?0:1}n=m(i),r=d[n]=c[n](i);let h=i[6].isOpen&&fa(i);return{c(){var b;o&&o.c(),e=z(),t=v("main"),r.c(),a=z(),h&&h.c(),l=Be(),this.c=k,f(t,"class","nylas-mailbox"),f(t,"data-cy","nylas-mailbox"),we(t,"loading",!i[2]),we(t,"empty",!((b=i[5])==null?void 0:b.length)&&i[2])},m(b,_){o&&o.m(b,_),g(b,e,_),g(b,t,_),d[n].m(t,null),g(b,a,_),h&&h.m(b,_),g(b,l,_),s=!0},p(b,_){var P;b[16]?o?o.p(b,_):(o=Kl(b),o.c(),o.m(e.parentNode,e)):o&&(o.d(1),o=null);let O=n;n=m(b),n===O?d[n].p(b,_):(Ae(),F(d[O],1,1,()=>{d[O]=null}),Se(),r=d[n],r?r.p(b,_):(r=d[n]=c[n](b),r.c()),A(r,1),r.m(t,null)),_[0]&4&&we(t,"loading",!b[2]),_[0]&36&&we(t,"empty",!((P=b[5])==null?void 0:P.length)&&b[2]),b[6].isOpen?h?h.p(b,_):(h=fa(b),h.c(),h.m(l.parentNode,l)):h&&(h.d(1),h=null)},i(b){s||(A(r),s=!0)},o(b){F(r),s=!1},d(b){o&&o.d(b),b&&u(e),b&&u(t),d[n].d(),b&&u(a),h&&h.d(b),b&&u(l)}}}const En=1,ua=i=>i.selected,ma=i=>i.selected,ha=i=>i.selected,_a=i=>i.selected,pa=i=>i.selected;function cf(i,e,t){let n,r,a,l,s;Wt(i,wt,E=>t(73,a=E)),Wt(i,nr,E=>t(74,l=E)),Wt(i,nn,E=>t(59,s=E));var o=this&&this.__awaiter||function(E,D,me,$){function Re(Ce){return Ce instanceof me?Ce:new me(function(ze){ze(Ce)})}return new(me||(me=Promise))(function(Ce,ze){function At(ut){try{zt($.next(ut))}catch(Et){ze(Et)}}function Pt(ut){try{zt($.throw(ut))}catch(Et){ze(Et)}}function zt(ut){ut.done?Ce(ut.value):Re(ut.value).then(At,Pt)}zt(($=$.apply(E,D||[])).next())})},c,d,m;const h=Ui(Zt());let{id:b=""}=e,{access_token:_=""}=e,{actions_bar:O}=e,{all_threads:P}=e,{thread_ids:C}=e,{header:I="Mailbox"}=e,{items_per_page:N}=e,{keyword_to_search:oe}=e,{onSelectThread:le=ci}=e,{query_string:ee}=e,{show_star:Z}=e,{show_thread_checkbox:X}=e,{show_reply:L}=e,{show_reply_all:x}=e,{show_forward:Oe}=e,{theme:Ne}=e,{thread_click_action:ye=Bi.DEFAULT}=e;const he={actions_bar:[],items_per_page:13,query_string:"in=inbox",thread_ids:void 0,show_star:!1,show_thread_checkbox:!0,show_reply:!1,show_reply_all:!1,show_forward:!1,theme:"auto",thread_click_action:Bi.DEFAULT};let de;const te={isOpen:!1,type:"",event:de};let Le={},U=wi({},{},he),_e,De=!1,ke=!1,Me,R=0,Ee=En,Xe=0,H=0;hn(()=>o(void 0,void 0,void 0,function*(){yield Nn(),e.all_threads||t(53,Le=(yield l[JSON.stringify({component_id:b,access_token:_})])||{}),t(1,U=wi(e,Le,he)),b&&!Pe.id&&!U.all_threads&&t(10,Pe=yield Vn({component_id:M.component_id,access_token:_}));const E={component_id:b,access_token:_};(Pe==null?void 0:Pe.organization_unit)===yi.Label?pr.getLabels(E).then(D=>t(57,qe=D)):(Pe==null?void 0:Pe.organization_unit)===yi.Folder&&mr.getFolders(E).then(D=>t(58,Ze=D)),yield Qe(),t(2,ke=!0)}));let ge=e,M,ct,se=[],qe=[],Ze=[],Pe={};function je(E){return zn(M,E.id).then(D=>(E.body=D.body,E))}function Qe(E=!1){var D,me;return o(this,void 0,void 0,function*(){Me&&(yield Me),!U.all_threads&&b&&(U.keyword_to_search?(Me=wt.getThreadsWithSearchKeyword(M,E),t(5,se=(D=yield Me)!==null&&D!==void 0?D:[]),U.items_per_page+1===se.length&&(H===0?t(9,Ee=En+1):t(9,Ee=En+Math.ceil(H/U.items_per_page)+1),se.pop())):(Me=wt.getThreads(M,R,U.items_per_page,E),t(5,se=(me=yield Me)!==null&&me!==void 0?me:[]),t(4,Xe=yield wt.getNumberOfItems(M)),t(9,Ee=Math.ceil(Xe/U.items_per_page))))})}function Ut(E){return o(this,void 0,void 0,function*(){t(5,se=wt.hydrateMessageInThread(E,M,R))})}function G(E){return o(this,void 0,void 0,function*(){t(5,se=wt.hydrateDraftInThread(E,M,R));const D=se.find(me=>me.id===E.thread_id);_e&&t(7,_e.drafts=D.drafts,_e)})}let q=!1,ue=!1,be=!1;function Je(E){var D,me;return o(this,void 0,void 0,function*(){let $=E.detail.message;!U.all_threads&&$&&_e&&($=yield je($),t(5,se=wt.hydrateMessageInThread($,M,R)),oi.hasInlineFiles($)&&($=yield j($),t(5,se=wt.hydrateMessageInThread($,M,R))),_e&&(t(7,_e.messages=(me=(D=_e.messages)===null||D===void 0?void 0:D.map(Re=>Re.id===$.id?$:Re))!==null&&me!==void 0?me:[],_e),t(7,_e)))})}function pt(E){return o(this,void 0,void 0,function*(){let D=E.detail.message;const me=E.detail.value;!U.all_threads&&(D==null?void 0:D.object)==="draft"&&_e&&((D==null?void 0:D.body)||(D=yield je(D)),oi.hasInlineFiles(D)&&(D=yield j(D)),me&&(me.body=D.body),G(D)),h(E.type,E.detail)})}function ft(E){return o(this,void 0,void 0,function*(){b&&E&&E.id&&(yield wt.updateThread({access_token:_,component_id:b,thread_id:E.id},ct,E,R,U.items_per_page))})}let Ye=!1;function Dt(E){var D,me;return o(this,void 0,void 0,function*(){const{thread:$,messageType:Re}=E.detail,Ce=$[Re];if(!Ye){if(t(14,Ye=!0),U.thread_click_action===Bi.DEFAULT){let ze=yield je(Ce[Ce.length-1]);if(Re===xt.DRAFTS){yield Bt(E),t(14,Ye=!1);return}t(7,_e=$),$.expanded=!$.expanded,!U.all_threads&&($==null?void 0:$.expanded)&&($.unread&&($.unread=!1,yield ft($)),t(5,se=wt.hydrateMessageInThread(ze,M,R)),oi.hasInlineFiles(ze)&&(ze=yield j(ze),t(5,se=wt.hydrateMessageInThread(ze,M,R))),_e&&(t(7,_e.messages=(me=(D=_e.messages)===null||D===void 0?void 0:D.map(At=>At.id===ze.id?ze:At))!==null&&me!==void 0?me:[],_e),t(7,_e)))}t(14,Ye=!1)}})}function j(E){var D;return o(this,void 0,void 0,function*(){const me=yield oi.getFilesForMessage(E,{component_id:b,access_token:_});for(const $ of Object.values(me))E.body&&(E.body=(D=E.body)===null||D===void 0?void 0:D.replaceAll(`src="cid:${$.content_id}"`,`src="data:${$.content_type};base64,${$.data}"`));return E})}function si(E){return o(this,void 0,void 0,function*(){t(14,Ye=!0),h("refreshClicked",{event:E}),yield Qe(!0),t(14,Ye=!1)})}function ci(E,D){Array.isArray(U.all_threads)?(D.selected=!D.selected,t(5,se=[...se])):t(5,se=wt.updateThreadSelection(JSON.stringify(M),R,D.id)),h("onSelectOneClicked",{event:E,thread:D})}function di(E){Array.isArray(U.all_threads)?t(5,se=se.map(D=>Object.assign(Object.assign({},D),{selected:!q}))):t(5,se=wt.updateThreadSelection(JSON.stringify(M),R)),h("onSelectAllClicked",{event:E,selectedThreads:se.filter(D=>D.selected)})}function Hi(E){return o(this,void 0,void 0,function*(){const D=E.detail.thread;Array.isArray(U.all_threads)||(yield ft(D),t(5,se=a[ct][R].threads)),h("onStarSelected",{event:E,starredThreads:[D]})})}function yt(E){return o(this,void 0,void 0,function*(){if(Array.isArray(U.all_threads))t(5,se=se.map(D=>Object.assign(Object.assign({},D),{starred:!ue})));else{const D=[];for(const me of se.filter($=>$.selected))me.starred=!ue,D.push(ft(me));yield Promise.all(D),t(5,se=a[ct][R].threads)}h("onStarSelected",{event:E,selectedThreads:se.filter(D=>D.selected)})})}function Ci(E){return o(this,void 0,void 0,function*(){Array.isArray(U.all_threads)?t(5,se=[...se]):(yield ft(E.detail.thread),t(5,se=a[ct][R].threads))})}function Rt(E){return o(this,void 0,void 0,function*(){if(Array.isArray(U.all_threads))t(5,se=se.map(D=>(D.selected&&(D.unread=be),Object.assign({},D))));else{const D=[];for(const me of se.filter($=>$.selected))me.unread=be,D.push(ft(me));yield Promise.all(D),t(5,se=a[ct][R].threads)}h("onChangeSelectedReadStatus",{event:E,selectedThreads:se.filter(D=>D.selected)})})}function Xt(E,D=""){t(6,te.isOpen=!0,te),t(6,te.event=E,te),t(6,te.type=D,te)}let St=!1;function fi(){t(15,St=!0),te.type==="selected"?Qt(te.event):kt(te.event),t(6,te.isOpen=!1,te),t(6,te.type="",te),t(6,te.event=de,te)}function kt(E){var D,me;return o(this,void 0,void 0,function*(){const $=E.detail.thread;if(Array.isArray(U.all_threads))t(5,se=se.filter(Re=>Re.id!==$.id));else{if(n){const Re=((D=$.labels)===null||D===void 0?void 0:D.map(ze=>ze.id))||[];$.label_ids=[...Re,n],yield ft($);const Ce=[...$.drafts];for(let ze of Ce){const At=((me=ze.labels)===null||me===void 0?void 0:me.map(Pt=>Pt.id))||[];yield bn(M.component_id,Object.assign(Object.assign({},ze),{label_ids:[...At,n]}),_).catch(Pt=>{})}}else if(r&&($.folder_id=r,b)){const Re=[...$.messages,...$.drafts];for(let Ce of Re)yield bn(M.component_id,Object.assign(Object.assign({},Ce),{folder_id:r}),_).catch(ze=>{t(15,St=!1)})}yield Qe(!0)}t(15,St=!1),qt()})}function Ai(E){return o(this,void 0,void 0,function*(){const D=E.detail.file,me=yield yn({file_id:D.id,component_id:b,access_token:_});sr(me,D)})}function Qt(E){return o(this,void 0,void 0,function*(){if(Array.isArray(U.all_threads)){const D=se.filter(me=>me.selected);t(5,se=se.filter(me=>!D.includes(me)))}else if(n||r){const D=[];for(const me of se.filter($=>$.selected))D.push(kt({detail:{thread:me}}));yield Promise.all(D)}h("onDeleteSelected",{event:E,deletedThreads:_e?[_e]:se}),t(15,St=!1)})}function qt(){_e&&(t(7,_e.expanded=!1,_e),t(7,_e=null))}function zi(E){return o(this,void 0,void 0,function*(){t(14,Ye=!0),t(3,R=E.detail.newPage),t(54,H=U.items_per_page*R),yield Qe(),t(14,Ye=!1)})}function Bt(E){var D,me;return o(this,void 0,void 0,function*(){const{thread:$}=E.detail,Re=(D=E.detail.message)!==null&&D!==void 0?D:$.drafts[0];if((me=Re.cids)===null||me===void 0?void 0:me.length){const ze=yield j(Re);Re.body=ze.body}G(Re);const Ce={to:Re.to,cc:Re.cc,bcc:Re.bcc,from:Re.from,subject:Re.subject,body:Re.body};h("draftThreadClicked",{event:E,message:Re,thread:$,value:Ce}),console.warn("draftThreadEvent is Deprecated and will be removed in a future stable release; Please use draftThreadClicked instead"),h("draftThreadEvent",{warning:"draftThreadEvent is Deprecated and will be removed in a future stable release; Please use draftThreadClicked instead.",event:E,message:Re,thread:$,value:Ce})})}let Ht;const Vi=()=>t(8,De=!0),ui=()=>t(8,De=!0),gt=E=>{Xt(E,"selected")},Ot=E=>yt(E),mi=E=>Rt(E),Si=E=>Rt(E),Oi=(E,D)=>ci(D,E),Li=()=>t(6,te.isOpen=!1,te),Mi=()=>t(6,te.isOpen=!1,te);return i.$$set=E=>{t(86,e=ie(ie({},e),ve(E))),"id"in E&&t(32,b=E.id),"access_token"in E&&t(33,_=E.access_token),"actions_bar"in E&&t(34,O=E.actions_bar),"all_threads"in E&&t(35,P=E.all_threads),"thread_ids"in E&&t(36,C=E.thread_ids),"header"in E&&t(0,I=E.header),"items_per_page"in E&&t(37,N=E.items_per_page),"keyword_to_search"in E&&t(38,oe=E.keyword_to_search),"onSelectThread"in E&&t(39,le=E.onSelectThread),"query_string"in E&&t(40,ee=E.query_string),"show_star"in E&&t(41,Z=E.show_star),"show_thread_checkbox"in E&&t(42,X=E.show_thread_checkbox),"show_reply"in E&&t(43,L=E.show_reply),"show_reply_all"in E&&t(44,x=E.show_reply_all),"show_forward"in E&&t(45,Oe=E.show_forward),"theme"in E&&t(46,Ne=E.theme),"thread_click_action"in E&&t(47,ye=E.thread_click_action)},i.$$.update=()=>{if(i.$$.dirty[1]&4194304&&h("manifestLoaded",Le),i.$$.dirty[1]&268435456&&Object.keys(s).length&&h("onError",s),JSON.stringify(ge)!==JSON.stringify(e)&&(t(1,U=wi(e,Le,he)),t(55,ge=e)),i.$$.dirty[0]&6&&(()=>o(void 0,void 0,void 0,function*(){!U.all_threads&&U.items_per_page&&ke&&(yield Qe(!0))}))(),i.$$.dirty[0]&26&&Array.isArray(U.all_threads)){t(4,Xe=U.all_threads.length),t(9,Ee=Math.ceil(Xe/U.items_per_page));const E=R*U.items_per_page;t(5,se=U.all_threads.slice(E,E+U.items_per_page))}i.$$.dirty[0]&2|i.$$.dirty[1]&8912934&&(t(56,M={component_id:b,access_token:_,query:Object.fromEntries(new URLSearchParams(t(50,c=U.query_string)===null||c===void 0?void 0:c.replaceAll(" ","&"))),thread_ids:C}),U.keyword_to_search&&(t(56,M.keywordToSearch=U.keyword_to_search,M),t(56,M.query.limit=U.items_per_page+1,M),t(56,M.query.offset=H,M))),i.$$.dirty[1]&33554432&&(ct=JSON.stringify(M)),i.$$.dirty[1]&68157440&&(n=qe.length?t(51,d=qe.find(E=>E.name==="trash"))===null||d===void 0?void 0:d.id:null),i.$$.dirty[1]&136314880&&(r=Ze.length?t(52,m=Ze.find(E=>E.name==="trash"))===null||m===void 0?void 0:m.id:null),i.$$.dirty[0]&32&&t(11,q=se.some(E=>E.selected)),i.$$.dirty[0]&32&&t(12,ue=se.filter(E=>E.selected).some(E=>E.starred)),i.$$.dirty[0]&32&&t(13,be=se.filter(E=>E.selected).some(E=>!E.unread)),i.$$.dirty[0]&2&&U.theme&&(U.theme.startsWith(".")||U.theme.startsWith("http")?t(16,Ht=U.theme):U.theme&&t(16,Ht=`https://unpkg.com/@nylas/components-mailbox@${Kd.version}/themes/${U.theme}.css`))},e=ve(e),[I,U,ke,R,Xe,se,te,_e,De,Ee,Pe,q,ue,be,Ye,St,Ht,Je,pt,Dt,si,ci,di,Hi,yt,Ci,Rt,Xt,fi,Ai,qt,zi,b,_,O,P,C,N,oe,le,ee,Z,X,L,x,Oe,Ne,ye,Ut,G,c,d,m,Le,H,ge,M,qe,Ze,s,Vi,ui,gt,Ot,mi,Si,Oi,Li,Mi]}class ga extends Jt{constructor(e){super();this.shadowRoot.innerHTML=`<style>@charset "UTF-8";*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}main{--black:#161717;--grey-dark:#636671;--grey:#bdc0cb;--grey-lighter:#dfe1e8;--grey-dark-warm:#9fa4b5;--grey-lightest:#f7f7f8;--grey-background:#f0f1f5;--white:#ffffff;--blue:#314fa9;--blue-lighter:#f0f3ff;--red:#ee3248;--red-lighter:#ffeef0;--fs-12:0.75rem;--fs-14:0.875rem;--fs-16:1rem;--black-90:#2c2e2e;--grey-light:#f7f7f8;--grey-warm:#cbcbcb}.overlay{background:rgba(0, 0, 0, 0.5);position:fixed;top:0;left:0;width:100%;height:100%;z-index:var(--z-index-overlay, 1001);overflow-x:hidden;overflow-y:auto;display:grid;justify-content:center;align-items:center}.overlay .modal{position:relative;width:calc(100% - 5rem);margin:1rem;z-index:var(--z-index-modal, 1002);background-color:white;padding:1.5rem;display:flex;align-items:center;flex-direction:column}.overlay .modal .title{font-family:sans-serif;font-style:normal;font-weight:bold;font-size:20px;line-height:28px;display:flex;align-items:center;color:var(--black)}.overlay .modal .description{font-family:sans-serif;font-style:normal;font-weight:normal;font-size:16px;line-height:24px;color:#636671;margin-top:0.5rem}.overlay .modal .footer{width:100%;display:flex;justify-content:flex-start;align-items:center;gap:0.75rem;margin-top:1.5rem}.overlay .modal .footer button{display:flex;justify-content:center;align-items:center;font-family:sans-serif;border-radius:4px;padding:0.5rem 1rem;cursor:pointer}.overlay .modal .footer button.danger{background:#ee3248;color:white}.overlay .modal .footer button.cancel{background:transparent}@media(min-width: 640px){.overlay .modal{width:365px}.overlay .modal .footer{width:inherit}}main{height:100%;width:100%;position:relative;display:grid;grid-auto-rows:max-content;font-family:var(--nylas-mailbox-font-family, -apple-system, BlinkMacSystemFont, sans-serif)}main.empty{grid-template-rows:68px 33.5px minmax(auto, calc(100vh - 117.5px))}main.empty ul{height:100%}main header{border:1px solid var(--nylas-mailbox-border-color, var(--grey-lighter));display:flex;align-items:center;padding:24px 16px;gap:8px;border-bottom:none;border-radius:4px 4px 0 0;font-weight:bold;background:var(--nylas-mailbox-header-background, white);color:var(--nylas-email-subject-color, black)}main header button svg{fill:var(--nylas-email-subject-color, black)}main header button svg.refreshing{animation:rotate 1s linear infinite}main button{background:none;display:flex;cursor:pointer}main [role=toolbar]{border:1px solid var(--nylas-mailbox-border-color, var(--grey-lighter));display:flex;align-items:center;padding:24px 16px;gap:8px;border-bottom:0.5px solid var(--nylas-mailbox-border-color, var(--grey-lighter));background:var(--nylas-mailbox-toolbar-background, white);padding:0.5rem 1rem;gap:1rem;min-height:24px}main [role=toolbar] .thread-checkbox{display:flex}main [role=toolbar] button[disabled] svg{fill:var(--grey)}main [role=toolbar] button svg{fill:var(--nylas-email-action-icons-color, var(--grey-dark))}main .thread-checkbox input{padding:4px 2px 2px 2px;width:1rem;height:1rem;background:var(--grey-lighter);border-radius:4px;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;-o-appearance:none;appearance:none;transition-duration:0.3s}main .thread-checkbox input:hover{background:var(--grey-light)}main .thread-checkbox input:checked{background:var(--nylas-mailbox-checkedbox-active-color, var(--blue))}main .thread-checkbox input:checked::before{content:" ";background-image:url("data:image/svg+xml,%3Csvg viewBox='0 0 10 8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8.66344 0.0402832L9.98373 1.36062L3.80759 7.53676L0 3.72925L1.32029 2.40891L3.80759 4.89613L8.66344 0.0402832Z' fill='white'/%3E%3C/svg%3E%0A");height:100%;width:100%;background-repeat:no-repeat;background-size:contain;display:block;text-align:center}main .thread-checkbox input:disabled{cursor:not-allowed}main div.starred{position:relative;display:flex;justify-content:center;align-items:center}main div.starred button{background-color:transparent;cursor:pointer}main div.starred button:before{content:"\u2605";display:inline-block;font-size:1em;color:var(--nylas-email-star-button-disabled-color, var(--grey));-webkit-user-select:none;-moz-user-select:none;user-select:none}main div.starred button:not([disabled]):before,main div.starred button svg{color:var(--nylas-email-star-button-inactive-color, #8d94a5)}main div.starred button:not([disabled]).starred:before{color:var(--nylas-email-star-button-active-color, #ffc107)}main #mailboxlist li{display:grid;grid-template-columns:auto 1fr;align-items:center;justify-content:left;position:relative;--nylas-email-border-style:none !important;border-top:0.5px solid var(--nylas-mailbox-vertical-border-color, var(--nylas-mailbox-border-color, var(--grey-lighter)));border-bottom:0.5px solid var(--nylas-mailbox-vertical-border-color, var(--nylas-mailbox-border-color, var(--grey-lighter)));border-left:1px solid var(--nylas-mailbox-horizontal-border-color, var(--nylas-mailbox-border-color, var(--grey-lighter)));border-right:1px solid var(--nylas-mailbox-horizontal-border-color, var(--nylas-mailbox-border-color, var(--grey-lighter)));--nylas-email-background:transparent;--nylas-email-unread-background:transparent}main #mailboxlist li .checkbox-container.thread-checkbox{padding:1rem 0 0 1rem;align-self:baseline}main #mailboxlist li:hover{box-shadow:inset 1px 0 0 var(--nylas-mailbox-hover-shadow-color, var(--grey-warm)), inset -1px 0 0 var(--nylas-mailbox-hover-shadow-color, var(--grey-warm)), 0 1px 2px 0 rgba(44, 46, 46, 0.2), 0 1px 3px 1px rgba(44, 46, 46, 0.05);border-color:var(--nylas-mailbox-hover-shadow-color, var(--grey-warm));cursor:pointer;z-index:1}main #mailboxlist li:not(.unread){background:var(--nylas-mailbox-read-background, var(--grey-lightest))}main #mailboxlist li.unread{background:var(--nylas-mailbox-unread-background, white)}main #mailboxlist li.no-messages{background:var(--grey-lighter)}main #mailboxlist li.no-messages .thread-checkbox input{background:var(--grey-dark-warm)}main #mailboxlist li.checked{border-left:4px solid var(--nylas-mailbox-checked-border-color, var(--blue));background:var(--nylas-mailbox-checked-bg-color, var(--blue-lighter))}main #mailboxlist li.checked .checkbox-container.thread-checkbox{padding-left:13px}ul::before{z-index:1}ul.deleting,ul.refreshing{position:relative}@keyframes progress{0%{width:0}100%{width:100%}}ul.refreshing::after{background-color:var(--blue-lighter);z-index:-1}ul.refreshing::before{animation:progress 2s ease-in-out infinite;background-color:var(--blue)}ul.refreshing::before,ul.refreshing::after{top:0;left:0;content:"";display:block;height:4px;position:absolute}@keyframes progress{0%{width:0}100%{width:100%}}ul.deleting::after{background-color:var(--red-lighter);z-index:-1}ul.deleting::before{animation:progress 2s ease-in-out infinite;background-color:var(--red)}ul.deleting::before,ul.deleting::after{top:0;left:0;content:"";display:block;height:4px;position:absolute}.checkbox-container{padding:4px}.mailbox-empty{height:100%}.mailbox-loader,.mailbox-empty{display:flex;flex-direction:column;align-items:center;justify-content:center;box-shadow:none}@keyframes rotate{to{transform:rotate(360deg)}}@media(min-width: 640px){main #mailboxlist li .checkbox-container.thread-checkbox{padding:0.6rem 0 0 1rem;display:flex;min-height:2rem;align-items:center}main div.starred button:hover:before{color:var(--nylas-email-star-button-active-color, #ffc107)}}</style>`,We(this,{target:this.shadowRoot,props:ni(this.attributes),customElement:!0},cf,sf,Ue,{id:32,access_token:33,actions_bar:34,all_threads:35,thread_ids:36,header:0,items_per_page:37,keyword_to_search:38,onSelectThread:39,query_string:40,show_star:41,show_thread_checkbox:42,show_reply:43,show_reply_all:44,show_forward:45,theme:46,thread_click_action:47,sentMessageUpdate:48,draftMessageUpdate:49},null,[-1,-1,-1,-1]),e&&(e.target&&g(e.target,this,e.anchor),e.props&&(this.$set(e.props),re()))}static get observedAttributes(){return["id","access_token","actions_bar","all_threads","thread_ids","header","items_per_page","keyword_to_search","onSelectThread","query_string","show_star","show_thread_checkbox","show_reply","show_reply_all","show_forward","theme","thread_click_action","sentMessageUpdate","draftMessageUpdate"]}get id(){return this.$$.ctx[32]}set id(e){this.$$set({id:e}),re()}get access_token(){return this.$$.ctx[33]}set access_token(e){this.$$set({access_token:e}),re()}get actions_bar(){return this.$$.ctx[34]}set actions_bar(e){this.$$set({actions_bar:e}),re()}get all_threads(){return this.$$.ctx[35]}set all_threads(e){this.$$set({all_threads:e}),re()}get thread_ids(){return this.$$.ctx[36]}set thread_ids(e){this.$$set({thread_ids:e}),re()}get header(){return this.$$.ctx[0]}set header(e){this.$$set({header:e}),re()}get items_per_page(){return this.$$.ctx[37]}set items_per_page(e){this.$$set({items_per_page:e}),re()}get keyword_to_search(){return this.$$.ctx[38]}set keyword_to_search(e){this.$$set({keyword_to_search:e}),re()}get onSelectThread(){return this.$$.ctx[39]}set onSelectThread(e){this.$$set({onSelectThread:e}),re()}get query_string(){return this.$$.ctx[40]}set query_string(e){this.$$set({query_string:e}),re()}get show_star(){return this.$$.ctx[41]}set show_star(e){this.$$set({show_star:e}),re()}get show_thread_checkbox(){return this.$$.ctx[42]}set show_thread_checkbox(e){this.$$set({show_thread_checkbox:e}),re()}get show_reply(){return this.$$.ctx[43]}set show_reply(e){this.$$set({show_reply:e}),re()}get show_reply_all(){return this.$$.ctx[44]}set show_reply_all(e){this.$$set({show_reply_all:e}),re()}get show_forward(){return this.$$.ctx[45]}set show_forward(e){this.$$set({show_forward:e}),re()}get theme(){return this.$$.ctx[46]}set theme(e){this.$$set({theme:e}),re()}get thread_click_action(){return this.$$.ctx[47]}set thread_click_action(e){this.$$set({thread_click_action:e}),re()}get sentMessageUpdate(){return this.$$.ctx[48]}get draftMessageUpdate(){return this.$$.ctx[49]}}return customElements.define("nylas-mailbox",ga),ga});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
