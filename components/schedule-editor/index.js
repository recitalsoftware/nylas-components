var mh=Object.defineProperty;var vu=Object.getOwnPropertySymbols;var hh=Object.prototype.hasOwnProperty,_h=Object.prototype.propertyIsEnumerable;var Tu=($t,he,je)=>he in $t?mh($t,he,{enumerable:!0,configurable:!0,writable:!0,value:je}):$t[he]=je,Ai=($t,he)=>{for(var je in he||(he={}))hh.call(he,je)&&Tu($t,je,he[je]);if(vu)for(var je of vu(he))_h.call(he,je)&&Tu($t,je,he[je]);return $t};(function($t,he){typeof exports=="object"&&typeof module!="undefined"?module.exports=he():typeof define=="function"&&define.amd?define(he):($t=typeof globalThis!="undefined"?globalThis:$t||self,$t.app=he())})(this,function(){"use strict";const $t=window.customElements.define.bind(window.customElements);window.customElements.define=(t,...e)=>{if(!customElements.get(t))return $t(t,...e)};function he(){}function je(t,e){for(const n in e)t[n]=e[n];return t}function Zi(t){return t()}function Zr(){return Object.create(null)}function vt(t){t.forEach(Zi)}function wa(t){return typeof t=="function"}function Zt(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}let Si;function Jr(t,e){return Si||(Si=document.createElement("a")),Si.href=e,t===Si.href}function Qr(t,e){return t!=t?e==e:t!==e}function Xr(t){return Object.keys(t).length===0}function $r(t,...e){if(t==null)return he;const n=t.subscribe(...e);return n.unsubscribe?()=>n.unsubscribe():n}function Fn(t,e,n){t.$$.on_destroy.push($r(e,n))}function Mt(t){const e={};for(const n in t)n[0]!=="$"&&(e[n]=t[n]);return e}function eo(t){return t&&wa(t.destroy)?t.destroy:he}let Ci=!1;function ku(){Ci=!0}function Mu(){Ci=!1}function wu(t,e,n,a){for(;t<e;){const r=t+(e-t>>1);n(r)<=a?t=r+1:e=r}return t}function Au(t){if(t.hydrate_init)return;t.hydrate_init=!0;let e=t.childNodes;if(t.nodeName==="HEAD"){const c=[];for(let _=0;_<e.length;_++){const y=e[_];y.claim_order!==void 0&&c.push(y)}e=c}const n=new Int32Array(e.length+1),a=new Int32Array(e.length);n[0]=-1;let r=0;for(let c=0;c<e.length;c++){const _=e[c].claim_order,y=(r>0&&e[n[r]].claim_order<=_?r+1:wu(1,r,k=>e[n[k]].claim_order,_))-1;a[c]=n[y]+1;const v=y+1;n[v]=c,r=Math.max(v,r)}const o=[],s=[];let h=e.length-1;for(let c=n[r]+1;c!=0;c=a[c-1]){for(o.push(e[c-1]);h>=c;h--)s.push(e[h]);h--}for(;h>=0;h--)s.push(e[h]);o.reverse(),s.sort((c,_)=>c.claim_order-_.claim_order);for(let c=0,_=0;c<s.length;c++){for(;_<o.length&&s[c].claim_order>=o[_].claim_order;)_++;const y=_<o.length?o[_]:null;t.insertBefore(s[c],y)}}function m(t,e){t.appendChild(e)}function Bn(t,e){if(Ci){for(Au(t),(t.actual_end_child===void 0||t.actual_end_child!==null&&t.actual_end_child.parentElement!==t)&&(t.actual_end_child=t.firstChild);t.actual_end_child!==null&&t.actual_end_child.claim_order===void 0;)t.actual_end_child=t.actual_end_child.nextSibling;e!==t.actual_end_child?(e.claim_order!==void 0||e.parentNode!==t)&&t.insertBefore(e,t.actual_end_child):t.actual_end_child=e.nextSibling}else(e.parentNode!==t||e.nextSibling!==null)&&t.appendChild(e)}function Y(t,e,n){t.insertBefore(e,n||null)}function Rn(t,e,n){Ci&&!n?Bn(t,e):(e.parentNode!==t||e.nextSibling!=n)&&t.insertBefore(e,n||null)}function W(t){t.parentNode.removeChild(t)}function en(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function b(t){return document.createElement(t)}function Lt(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function ge(t){return document.createTextNode(t)}function O(){return ge(" ")}function Aa(){return ge("")}function te(t,e,n,a){return t.addEventListener(e,n,a),()=>t.removeEventListener(e,n,a)}function p(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function Gi(t,e){const n=Object.getOwnPropertyDescriptors(t.__proto__);for(const a in e)e[a]==null?t.removeAttribute(a):a==="style"?t.style.cssText=e[a]:a==="__value"?t.value=t[a]=e[a]:n[a]&&n[a].set?t[a]=e[a]:p(t,a,e[a])}function Jt(t,e){for(const n in e)p(t,n,e[n])}function Ee(t,e,n){e in t?t[e]=typeof t[e]=="boolean"&&n===""?!0:n:p(t,e,n)}function Qa(t,e,n){const a=new Set;for(let r=0;r<t.length;r+=1)t[r].checked&&a.add(t[r].__value);return n||a.delete(e),Array.from(a)}function Cn(t){return t===""?null:+t}function Pt(t){return Array.from(t.childNodes)}function Su(t){t.claim_info===void 0&&(t.claim_info={last_index:0,total_claimed:0})}function to(t,e,n,a,r=!1){Su(t);const o=(()=>{for(let s=t.claim_info.last_index;s<t.length;s++){const h=t[s];if(e(h)){const c=n(h);return c===void 0?t.splice(s,1):t[s]=c,r||(t.claim_info.last_index=s),h}}for(let s=t.claim_info.last_index-1;s>=0;s--){const h=t[s];if(e(h)){const c=n(h);return c===void 0?t.splice(s,1):t[s]=c,r?c===void 0&&t.claim_info.last_index--:t.claim_info.last_index=s,h}}return a()})();return o.claim_order=t.claim_info.total_claimed,t.claim_info.total_claimed+=1,o}function Cu(t,e,n,a){return to(t,r=>r.nodeName===e,r=>{const o=[];for(let s=0;s<r.attributes.length;s++){const h=r.attributes[s];n[h.name]||o.push(h.name)}o.forEach(s=>r.removeAttribute(s))},()=>a(e))}function Vt(t,e,n){return Cu(t,e,n,Lt)}function Gu(t,e){return to(t,n=>n.nodeType===3,n=>{const a=""+e;if(n.data.startsWith(a)){if(n.data.length!==a.length)return n.splitText(a.length)}else n.data=a},()=>ge(e),!0)}function zu(t){return Gu(t," ")}function He(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}function Re(t,e){t.value=e==null?"":e}function Ie(t,e,n,a){n===null?t.style.removeProperty(e):t.style.setProperty(e,n,a?"important":"")}function Sa(t,e){for(let n=0;n<t.options.length;n+=1){const a=t.options[n];if(a.__value===e){a.selected=!0;return}}t.selectedIndex=-1}function Ji(t){const e=t.querySelector(":checked")||t.options[0];return e&&e.__value}let zi;function Eu(){if(zi===void 0){zi=!1;try{typeof window!="undefined"&&window.parent&&window.parent.document}catch(t){zi=!0}}return zi}function Qi(t,e){getComputedStyle(t).position==="static"&&(t.style.position="relative");const a=b("iframe");a.setAttribute("style","display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;"),a.setAttribute("aria-hidden","true"),a.tabIndex=-1;const r=Eu();let o;return r?(a.src="data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\/script>",o=te(window,"message",s=>{s.source===a.contentWindow&&e()})):(a.src="about:blank",a.onload=()=>{o=te(a.contentWindow,"resize",e)}),m(t,a),()=>{(r||o&&a.contentWindow)&&o(),W(a)}}function xe(t,e,n){t.classList[n?"add":"remove"](e)}function $n(t){const e={};for(const n of t)e[n.name]=n.value;return e}let Xa;function $a(t){Xa=t}function Ca(){if(!Xa)throw new Error("Function called outside component initialization");return Xa}function Ou(t){Ca().$$.before_update.push(t)}function Xi(t){Ca().$$.on_mount.push(t)}function Du(t){Ca().$$.on_destroy.push(t)}const ei=[],ua=[],Ei=[],no=[],ao=Promise.resolve();let $i=!1;function io(){$i||($i=!0,ao.then(X))}function Oi(){return io(),ao}function xn(t){Ei.push(t)}const er=new Set;let Di=0;function X(){const t=Xa;do{for(;Di<ei.length;){const e=ei[Di];Di++,$a(e),Nu(e.$$)}for($a(null),ei.length=0,Di=0;ua.length;)ua.pop()();for(let e=0;e<Ei.length;e+=1){const n=Ei[e];er.has(n)||(er.add(n),n())}Ei.length=0}while(ei.length);for(;no.length;)no.pop()();$i=!1,er.clear(),$a(t)}function Nu(t){if(t.fragment!==null){t.update(),vt(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(xn)}}const Ni=new Set;let ca;function pn(){ca={r:0,c:[],p:ca}}function vn(){ca.r||vt(ca.c),ca=ca.p}function qe(t,e){t&&t.i&&(Ni.delete(t),t.i(e))}function ut(t,e,n,a){if(t&&t.o){if(Ni.has(t))return;Ni.add(t),ca.c.push(()=>{Ni.delete(t),a&&(n&&t.d(1),a())}),t.o(e)}}function ro(t,e){t.d(1),e.delete(t.key)}function Iu(t,e){ut(t,1,1,()=>{e.delete(t.key)})}function tr(t,e,n,a,r,o,s,h,c,_,y,v){let k=t.length,E=o.length,S=k;const N={};for(;S--;)N[t[S].key]=S;const w=[],M=new Map,G=new Map;for(S=E;S--;){const z=v(r,o,S),V=n(z);let L=s.get(V);L?a&&L.p(z,e):(L=_(V,z),L.c()),M.set(V,w[S]=L),V in N&&G.set(V,Math.abs(S-N[V]))}const I=new Set,U=new Set;function B(z){qe(z,1),z.m(h,y),s.set(z.key,z),y=z.first,E--}for(;k&&E;){const z=w[E-1],V=t[k-1],L=z.key,re=V.key;z===V?(y=z.first,k--,E--):M.has(re)?!s.has(L)||I.has(L)?B(z):U.has(re)?k--:G.get(L)>G.get(re)?(U.add(L),B(z)):(I.add(re),k--):(c(V,s),k--)}for(;k--;){const z=t[k];M.has(z.key)||c(z,s)}for(;E;)B(w[E-1]);return w}function jn(t,e){const n={},a={},r={$$scope:1};let o=t.length;for(;o--;){const s=t[o],h=e[o];if(h){for(const c in s)c in h||(a[c]=1);for(const c in h)r[c]||(n[c]=h[c],r[c]=1);t[o]=h}else for(const c in s)r[c]=1}for(const s in a)s in n||(n[s]=void 0);return n}function ea(t){t&&t.c()}function Hn(t,e,n,a){const{fragment:r,on_mount:o,on_destroy:s,after_update:h}=t.$$;r&&r.m(e,n),a||xn(()=>{const c=o.map(Zi).filter(wa);s?s.push(...c):vt(c),t.$$.on_mount=[]}),h.forEach(xn)}function Gn(t,e){const n=t.$$;n.fragment!==null&&(vt(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function Lu(t,e){t.$$.dirty[0]===-1&&(ei.push(t),io(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function Kt(t,e,n,a,r,o,s,h=[-1]){const c=Xa;$a(t);const _=t.$$={fragment:null,ctx:null,props:o,update:he,not_equal:r,bound:Zr(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(c?c.$$.context:[])),callbacks:Zr(),dirty:h,skip_bound:!1,root:e.target||c.$$.root};s&&s(_.root);let y=!1;if(_.ctx=n?n(t,e.props||{},(v,k,...E)=>{const S=E.length?E[0]:k;return _.ctx&&r(_.ctx[v],_.ctx[v]=S)&&(!_.skip_bound&&_.bound[v]&&_.bound[v](S),y&&Lu(t,v)),k}):[],_.update(),y=!0,vt(_.before_update),_.fragment=a?a(_.ctx):!1,e.target){if(e.hydrate){ku();const v=Pt(e.target);_.fragment&&_.fragment.l(v),v.forEach(W)}else _.fragment&&_.fragment.c();e.intro&&qe(t.$$.fragment),Hn(t,e.target,e.anchor,e.customElement),Mu(),X()}$a(c)}let Vn;typeof HTMLElement=="function"&&(Vn=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:t}=this.$$;this.$$.on_disconnect=t.map(Zi).filter(wa);for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(t,e,n){this[t]=n}disconnectedCallback(){vt(this.$$.on_disconnect)}$destroy(){Gn(this,1),this.$destroy=he}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const a=n.indexOf(e);a!==-1&&n.splice(a,1)}}$set(t){this.$$set&&!Xr(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});class fa{$destroy(){Gn(this,1),this.$destroy=he}$on(e,n){const a=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return a.push(n),()=>{const r=a.indexOf(n);r!==-1&&a.splice(r,1)}}$set(e){this.$$set&&!Xr(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const oo=[{title:"Your Name",type:"text",required:!1},{title:"Email Address",type:"text",required:!0,placeholder:"you@example.com"}];var ta;(function(t){t.SHOW_MESSAGE="show_message",t.SEND_MESSAGE="send_message"})(ta||(ta={}));function nr(t){return(e,n)=>{t.dispatchEvent&&t.dispatchEvent(new CustomEvent(e,{detail:n,composed:!0}))}}function Un(t,e,n){return new Proxy(t,{get:(a,r)=>r==="toString"||r==="toJSON"?()=>JSON.stringify(a):Reflect.get(a,r)!==void 0?lo(Reflect.get(a,r),n[r]):e&&r in e?lo(e[r],n[r]):n[r],ownKeys:a=>{const r=new Set([...Reflect.ownKeys(a),...Object.keys(e),...Object.keys(n)]);return Array.from(r)},getOwnPropertyDescriptor:(a,r)=>{var o,s;let h=Reflect.getOwnPropertyDescriptor(a,r);return h||(h=(s=(o=e&&Object.getOwnPropertyDescriptor(e,r))!=null?o:n&&Object.getOwnPropertyDescriptor(n,r))!=null?s:{configurable:!0,enumerable:!0,writable:!0},Reflect.defineProperty(a,r,h)),h}})}function lo(t,e){if(t){if(typeof e=="boolean")return Pu(t);if(typeof e=="number")return Number(t);if(e instanceof Date)return new Date(t)}return t===void 0?e!=null?e:null:t}function Pu(t){return[!0,"true","1"].includes(t)}function Fu(t){return t?t.includes(",")?t.split(",").map(e=>e.trim()):t.includes(" ")?t.split(" ").map(e=>e.trim()):t.includes(`
`)?t.split(`
`).map(e=>e.trim()):[t.trim()]:[]}function so(t,e){return e.every(n=>t.includes(n))}function uo(t){if(!Array.isArray(t)||t.length===0)return"";const e=t[0].timestamp,n=t[t.length-1].timestamp;return n.getMonth()!==e.getMonth()?n.getFullYear()!==e.getFullYear()?`${ti(e,!0)} - ${ti(n,!0)}`:`${ti(e)} - ${ti(n,!0)}`:ti(e,!0)}function Ii(t){const e=t.toLocaleTimeString([],{timeStyle:"short"});return t.getMinutes()===0?t.toLocaleTimeString([],{hour:"numeric",hour12:!0}).replaceAll(/\./g,""):e.replaceAll(/\./g,"")}function na(t){const e=t.toLocaleTimeString([],{timeStyle:"short"});return e==="12:00 p.m."?"Noon":e.replace(/\./g,"")}function ti(t,e=!1){return t.toLocaleDateString("default",{month:"short",year:e?"numeric":void 0}).replaceAll(/\./g,"")}const Bu=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var et;(function(t){t.BASIC_DETAILS="basic-details",t.TIME_DATE_DETAILS="time-date-details",t.STYLE_DETAILS="style-details",t.BOOKING_DETAILS="booking-details",t.CUSTOM_FIELDS="custom-fields",t.NOTIFICATION_DETAILS="notification-details"})(et||(et={}));var co=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function fo(t,e,n){return n={path:e,exports:{},require:function(a,r){return xu(a,r==null?n.path:r)}},t(n,n.exports),n.exports}function Ru(t){return t&&t.default||t}function xu(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var ju=[{label:"Pacific/Midway (GMT-11:00)",tzCode:"Pacific/Midway",name:"(GMT-11:00) Midway",utc:"-11:00"},{label:"Pacific/Niue (GMT-11:00)",tzCode:"Pacific/Niue",name:"(GMT-11:00) Alofi",utc:"-11:00"},{label:"Pacific/Pago_Pago (GMT-11:00)",tzCode:"Pacific/Pago_Pago",name:"(GMT-11:00) Pago Pago, T\u0101funa, Ta`\u016B, Taulaga",utc:"-11:00"},{label:"America/Adak (GMT-10:00)",tzCode:"America/Adak",name:"(GMT-10:00) Adak",utc:"-10:00"},{label:"Pacific/Honolulu (GMT-10:00)",tzCode:"Pacific/Honolulu",name:"(GMT-10:00) Honolulu, East Honolulu, Pearl City, Hilo, Kailua",utc:"-10:00"},{label:"Pacific/Rarotonga (GMT-10:00)",tzCode:"Pacific/Rarotonga",name:"(GMT-10:00) Avarua",utc:"-10:00"},{label:"Pacific/Tahiti (GMT-10:00)",tzCode:"Pacific/Tahiti",name:"(GMT-10:00) Faaa, Papeete, Punaauia, Pirae, Mahina",utc:"-10:00"},{label:"Pacific/Marquesas (GMT-09:30)",tzCode:"Pacific/Marquesas",name:"(GMT-09:30) Taiohae",utc:"-09:30"},{label:"America/Anchorage (GMT-09:00)",tzCode:"America/Anchorage",name:"(GMT-09:00) Anchorage, Fairbanks, Eagle River, Badger, Knik-Fairview",utc:"-09:00"},{label:"America/Juneau (GMT-09:00)",tzCode:"America/Juneau",name:"(GMT-09:00) Juneau",utc:"-09:00"},{label:"America/Metlakatla (GMT-09:00)",tzCode:"America/Metlakatla",name:"(GMT-09:00) Metlakatla",utc:"-09:00"},{label:"America/Nome (GMT-09:00)",tzCode:"America/Nome",name:"(GMT-09:00) Nome",utc:"-09:00"},{label:"America/Sitka (GMT-09:00)",tzCode:"America/Sitka",name:"(GMT-09:00) Sitka, Ketchikan",utc:"-09:00"},{label:"America/Yakutat (GMT-09:00)",tzCode:"America/Yakutat",name:"(GMT-09:00) Yakutat",utc:"-09:00"},{label:"Pacific/Gambier (GMT-09:00)",tzCode:"Pacific/Gambier",name:"(GMT-09:00) Gambier",utc:"-09:00"},{label:"America/Los_Angeles (GMT-08:00)",tzCode:"America/Los_Angeles",name:"(GMT-08:00) Los Angeles, San Diego, San Jose, San Francisco, Seattle",utc:"-08:00"},{label:"America/Tijuana (GMT-08:00)",tzCode:"America/Tijuana",name:"(GMT-08:00) Tijuana, Mexicali, Ensenada, Rosarito, Tecate",utc:"-08:00"},{label:"America/Vancouver (GMT-08:00)",tzCode:"America/Vancouver",name:"(GMT-08:00) Vancouver, Surrey, Okanagan, Victoria, Burnaby",utc:"-08:00"},{label:"Pacific/Pitcairn (GMT-08:00)",tzCode:"Pacific/Pitcairn",name:"(GMT-08:00) Adamstown",utc:"-08:00"},{label:"America/Boise (GMT-07:00)",tzCode:"America/Boise",name:"(GMT-07:00) Boise, Meridian, Nampa, Idaho Falls, Pocatello",utc:"-07:00"},{label:"America/Cambridge_Bay (GMT-07:00)",tzCode:"America/Cambridge_Bay",name:"(GMT-07:00) Cambridge Bay",utc:"-07:00"},{label:"America/Chihuahua (GMT-07:00)",tzCode:"America/Chihuahua",name:"(GMT-07:00) Chihuahua, Ciudad Delicias, Cuauht\xE9moc, Parral, Nuevo Casas Grandes",utc:"-07:00"},{label:"America/Creston (GMT-07:00)",tzCode:"America/Creston",name:"(GMT-07:00) Creston",utc:"-07:00"},{label:"America/Dawson (GMT-07:00)",tzCode:"America/Dawson",name:"(GMT-07:00) Dawson",utc:"-07:00"},{label:"America/Dawson_Creek (GMT-07:00)",tzCode:"America/Dawson_Creek",name:"(GMT-07:00) Fort St. John, Dawson Creek",utc:"-07:00"},{label:"America/Denver (GMT-07:00)",tzCode:"America/Denver",name:"(GMT-07:00) Denver, El Paso, Albuquerque, Colorado Springs, Aurora",utc:"-07:00"},{label:"America/Edmonton (GMT-07:00)",tzCode:"America/Edmonton",name:"(GMT-07:00) Calgary, Edmonton, Fort McMurray, Red Deer, Lethbridge",utc:"-07:00"},{label:"America/Fort_Nelson (GMT-07:00)",tzCode:"America/Fort_Nelson",name:"(GMT-07:00) Fort Nelson",utc:"-07:00"},{label:"America/Hermosillo (GMT-07:00)",tzCode:"America/Hermosillo",name:"(GMT-07:00) Hermosillo, Ciudad Obreg\xF3n, Nogales, San Luis R\xEDo Colorado, Navojoa",utc:"-07:00"},{label:"America/Inuvik (GMT-07:00)",tzCode:"America/Inuvik",name:"(GMT-07:00) Inuvik",utc:"-07:00"},{label:"America/Mazatlan (GMT-07:00)",tzCode:"America/Mazatlan",name:"(GMT-07:00) Culiac\xE1n, Mazatl\xE1n, Tepic, Los Mochis, La Paz",utc:"-07:00"},{label:"America/Ojinaga (GMT-07:00)",tzCode:"America/Ojinaga",name:"(GMT-07:00) Ciudad Ju\xE1rez, Manuel Ojinaga, Ojinaga",utc:"-07:00"},{label:"America/Phoenix (GMT-07:00)",tzCode:"America/Phoenix",name:"(GMT-07:00) Phoenix, Tucson, Mesa, Chandler, Gilbert",utc:"-07:00"},{label:"America/Whitehorse (GMT-07:00)",tzCode:"America/Whitehorse",name:"(GMT-07:00) Whitehorse",utc:"-07:00"},{label:"America/Yellowknife (GMT-07:00)",tzCode:"America/Yellowknife",name:"(GMT-07:00) Yellowknife",utc:"-07:00"},{label:"America/Bahia_Banderas (GMT-06:00)",tzCode:"America/Bahia_Banderas",name:"(GMT-06:00) Mezcales, San Vicente, Bucer\xEDas, Valle de Banderas",utc:"-06:00"},{label:"America/Belize (GMT-06:00)",tzCode:"America/Belize",name:"(GMT-06:00) Belize City, San Ignacio, Orange Walk, Belmopan, Dangriga",utc:"-06:00"},{label:"America/Chicago (GMT-06:00)",tzCode:"America/Chicago",name:"(GMT-06:00) Chicago, Houston, San Antonio, Dallas, Austin",utc:"-06:00"},{label:"America/Costa_Rica (GMT-06:00)",tzCode:"America/Costa_Rica",name:"(GMT-06:00) San Jos\xE9, Lim\xF3n, San Francisco, Alajuela, Liberia",utc:"-06:00"},{label:"America/El_Salvador (GMT-06:00)",tzCode:"America/El_Salvador",name:"(GMT-06:00) San Salvador, Soyapango, Santa Ana, San Miguel, Mejicanos",utc:"-06:00"},{label:"America/Guatemala (GMT-06:00)",tzCode:"America/Guatemala",name:"(GMT-06:00) Guatemala City, Mixco, Villa Nueva, Petapa, San Juan Sacatep\xE9quez",utc:"-06:00"},{label:"America/Indiana/Knox (GMT-06:00)",tzCode:"America/Indiana/Knox",name:"(GMT-06:00) Knox",utc:"-06:00"},{label:"America/Indiana/Tell_City (GMT-06:00)",tzCode:"America/Indiana/Tell_City",name:"(GMT-06:00) Tell City",utc:"-06:00"},{label:"America/Managua (GMT-06:00)",tzCode:"America/Managua",name:"(GMT-06:00) Managua, Le\xF3n, Masaya, Chinandega, Matagalpa",utc:"-06:00"},{label:"America/Matamoros (GMT-06:00)",tzCode:"America/Matamoros",name:"(GMT-06:00) Reynosa, Heroica Matamoros, Nuevo Laredo, Piedras Negras, Ciudad Acu\xF1a",utc:"-06:00"},{label:"America/Menominee (GMT-06:00)",tzCode:"America/Menominee",name:"(GMT-06:00) Menominee, Iron Mountain, Kingsford, Ironwood, Iron River",utc:"-06:00"},{label:"America/Merida (GMT-06:00)",tzCode:"America/Merida",name:"(GMT-06:00) M\xE9rida, Campeche, Ciudad del Carmen, Kanas\xEDn, Valladolid",utc:"-06:00"},{label:"America/Mexico_City (GMT-06:00)",tzCode:"America/Mexico_City",name:"(GMT-06:00) Mexico City, Iztapalapa, Ecatepec de Morelos, Guadalajara, Puebla",utc:"-06:00"},{label:"America/Monterrey (GMT-06:00)",tzCode:"America/Monterrey",name:"(GMT-06:00) Monterrey, Saltillo, Guadalupe, Torre\xF3n, Victoria de Durango",utc:"-06:00"},{label:"America/North_Dakota/Beulah (GMT-06:00)",tzCode:"America/North_Dakota/Beulah",name:"(GMT-06:00) Beulah",utc:"-06:00"},{label:"America/North_Dakota/Center (GMT-06:00)",tzCode:"America/North_Dakota/Center",name:"(GMT-06:00) Center",utc:"-06:00"},{label:"America/North_Dakota/New_Salem (GMT-06:00)",tzCode:"America/North_Dakota/New_Salem",name:"(GMT-06:00) Mandan",utc:"-06:00"},{label:"America/Rainy_River (GMT-06:00)",tzCode:"America/Rainy_River",name:"(GMT-06:00) Rainy River",utc:"-06:00"},{label:"America/Rankin_Inlet (GMT-06:00)",tzCode:"America/Rankin_Inlet",name:"(GMT-06:00) Rankin Inlet",utc:"-06:00"},{label:"America/Regina (GMT-06:00)",tzCode:"America/Regina",name:"(GMT-06:00) Saskatoon, Regina, Prince Albert, Moose Jaw, North Battleford",utc:"-06:00"},{label:"America/Resolute (GMT-06:00)",tzCode:"America/Resolute",name:"(GMT-06:00) Resolute",utc:"-06:00"},{label:"America/Swift_Current (GMT-06:00)",tzCode:"America/Swift_Current",name:"(GMT-06:00) Swift Current",utc:"-06:00"},{label:"America/Tegucigalpa (GMT-06:00)",tzCode:"America/Tegucigalpa",name:"(GMT-06:00) Tegucigalpa, San Pedro Sula, Choloma, La Ceiba, El Progreso",utc:"-06:00"},{label:"America/Winnipeg (GMT-06:00)",tzCode:"America/Winnipeg",name:"(GMT-06:00) Winnipeg, Brandon, Kenora, Portage la Prairie, Thompson",utc:"-06:00"},{label:"Pacific/Easter (GMT-06:00)",tzCode:"Pacific/Easter",name:"(GMT-06:00) Easter",utc:"-06:00"},{label:"Pacific/Galapagos (GMT-06:00)",tzCode:"Pacific/Galapagos",name:"(GMT-06:00) Puerto Ayora, Puerto Baquerizo Moreno",utc:"-06:00"},{label:"America/Atikokan (GMT-05:00)",tzCode:"America/Atikokan",name:"(GMT-05:00) Atikokan",utc:"-05:00"},{label:"America/Bogota (GMT-05:00)",tzCode:"America/Bogota",name:"(GMT-05:00) Bogot\xE1, Cali, Medell\xEDn, Barranquilla, Cartagena",utc:"-05:00"},{label:"America/Cancun (GMT-05:00)",tzCode:"America/Cancun",name:"(GMT-05:00) Canc\xFAn, Chetumal, Playa del Carmen, Cozumel, Felipe Carrillo Puerto",utc:"-05:00"},{label:"America/Cayman (GMT-05:00)",tzCode:"America/Cayman",name:"(GMT-05:00) George Town, West Bay, Bodden Town, East End, North Side",utc:"-05:00"},{label:"America/Detroit (GMT-05:00)",tzCode:"America/Detroit",name:"(GMT-05:00) Detroit, Grand Rapids, Warren, Sterling Heights, Ann Arbor",utc:"-05:00"},{label:"America/Eirunepe (GMT-05:00)",tzCode:"America/Eirunepe",name:"(GMT-05:00) Eirunep\xE9, Benjamin Constant, Envira",utc:"-05:00"},{label:"America/Grand_Turk (GMT-05:00)",tzCode:"America/Grand_Turk",name:"(GMT-05:00) Cockburn Town",utc:"-05:00"},{label:"America/Guayaquil (GMT-05:00)",tzCode:"America/Guayaquil",name:"(GMT-05:00) Guayaquil, Quito, Cuenca, Santo Domingo de los Colorados, Machala",utc:"-05:00"},{label:"America/Havana (GMT-05:00)",tzCode:"America/Havana",name:"(GMT-05:00) Havana, Santiago de Cuba, Camag\xFCey, Holgu\xEDn, Guant\xE1namo",utc:"-05:00"},{label:"America/Indiana/Indianapolis (GMT-05:00)",tzCode:"America/Indiana/Indianapolis",name:"(GMT-05:00) Indianapolis, Fort Wayne, South Bend, Carmel, Bloomington",utc:"-05:00"},{label:"America/Indiana/Marengo (GMT-05:00)",tzCode:"America/Indiana/Marengo",name:"(GMT-05:00) Marengo",utc:"-05:00"},{label:"America/Indiana/Petersburg (GMT-05:00)",tzCode:"America/Indiana/Petersburg",name:"(GMT-05:00) Petersburg",utc:"-05:00"},{label:"America/Indiana/Vevay (GMT-05:00)",tzCode:"America/Indiana/Vevay",name:"(GMT-05:00) Vevay",utc:"-05:00"},{label:"America/Indiana/Vincennes (GMT-05:00)",tzCode:"America/Indiana/Vincennes",name:"(GMT-05:00) Vincennes, Jasper, Washington, Huntingburg",utc:"-05:00"},{label:"America/Indiana/Winamac (GMT-05:00)",tzCode:"America/Indiana/Winamac",name:"(GMT-05:00) Winamac",utc:"-05:00"},{label:"America/Iqaluit (GMT-05:00)",tzCode:"America/Iqaluit",name:"(GMT-05:00) Iqaluit",utc:"-05:00"},{label:"America/Jamaica (GMT-05:00)",tzCode:"America/Jamaica",name:"(GMT-05:00) Kingston, New Kingston, Spanish Town, Portmore, Montego Bay",utc:"-05:00"},{label:"America/Kentucky/Louisville (GMT-05:00)",tzCode:"America/Kentucky/Louisville",name:"(GMT-05:00) Louisville, Jeffersonville, New Albany, Jeffersontown, Pleasure Ridge Park",utc:"-05:00"},{label:"America/Kentucky/Monticello (GMT-05:00)",tzCode:"America/Kentucky/Monticello",name:"(GMT-05:00) Monticello",utc:"-05:00"},{label:"America/Lima (GMT-05:00)",tzCode:"America/Lima",name:"(GMT-05:00) Lima, Arequipa, Callao, Trujillo, Chiclayo",utc:"-05:00"},{label:"America/Nassau (GMT-05:00)",tzCode:"America/Nassau",name:"(GMT-05:00) Nassau, Lucaya, Freeport, West End, Cooper\u2019s Town",utc:"-05:00"},{label:"America/New_York (GMT-05:00)",tzCode:"America/New_York",name:"(GMT-05:00) New York City, Brooklyn, Queens, Philadelphia, Manhattan",utc:"-05:00"},{label:"America/Nipigon (GMT-05:00)",tzCode:"America/Nipigon",name:"(GMT-05:00) Nipigon",utc:"-05:00"},{label:"America/Panama (GMT-05:00)",tzCode:"America/Panama",name:"(GMT-05:00) Panam\xE1, San Miguelito, Juan D\xEDaz, David, Arraij\xE1n",utc:"-05:00"},{label:"America/Pangnirtung (GMT-05:00)",tzCode:"America/Pangnirtung",name:"(GMT-05:00) Pangnirtung",utc:"-05:00"},{label:"America/Port-au-Prince (GMT-05:00)",tzCode:"America/Port-au-Prince",name:"(GMT-05:00) Port-au-Prince, Carrefour, Delmas 73, P\xE9tionville, Port-de-Paix",utc:"-05:00"},{label:"America/Rio_Branco (GMT-05:00)",tzCode:"America/Rio_Branco",name:"(GMT-05:00) Rio Branco, Cruzeiro do Sul, Sena Madureira, Tarauac\xE1, Feij\xF3",utc:"-05:00"},{label:"America/Thunder_Bay (GMT-05:00)",tzCode:"America/Thunder_Bay",name:"(GMT-05:00) Thunder Bay",utc:"-05:00"},{label:"America/Toronto (GMT-05:00)",tzCode:"America/Toronto",name:"(GMT-05:00) Toronto, Montr\xE9al, Ottawa, Mississauga, Qu\xE9bec",utc:"-05:00"},{label:"America/AnguillaSandy Hill (GMT-04:00)",tzCode:"America/AnguillaSandy Hill",name:"(GMT-04:00) The Valley, Blowing Point Village, Sandy Ground Village, The Quarter, Sandy Hill",utc:"-04:00"},{label:"America/Antigua (GMT-04:00)",tzCode:"America/Antigua",name:"(GMT-04:00) Saint John\u2019s, Piggotts, Bolands, Codrington, Parham",utc:"-04:00"},{label:"America/Aruba (GMT-04:00)",tzCode:"America/Aruba",name:"(GMT-04:00) Oranjestad, Tanki Leendert, San Nicolas, Santa Cruz, Paradera",utc:"-04:00"},{label:"America/Asuncion (GMT-04:00)",tzCode:"America/Asuncion",name:"(GMT-04:00) Asunci\xF3n, Ciudad del Este, San Lorenzo, Capiat\xE1, Lambar\xE9",utc:"-04:00"},{label:"America/Barbados (GMT-04:00)",tzCode:"America/Barbados",name:"(GMT-04:00) Bridgetown, Speightstown, Oistins, Bathsheba, Holetown",utc:"-04:00"},{label:"America/Blanc-Sablon (GMT-04:00)",tzCode:"America/Blanc-Sablon",name:"(GMT-04:00) L\xE9vis",utc:"-04:00"},{label:"America/Boa_Vista (GMT-04:00)",tzCode:"America/Boa_Vista",name:"(GMT-04:00) Boa Vista",utc:"-04:00"},{label:"America/Campo_Grande (GMT-04:00)",tzCode:"America/Campo_Grande",name:"(GMT-04:00) Campo Grande, Dourados, Corumb\xE1, Tr\xEAs Lagoas, Ponta Por\xE3",utc:"-04:00"},{label:"America/Caracas (GMT-04:00)",tzCode:"America/Caracas",name:"(GMT-04:00) Caracas, Maracaibo, Maracay, Valencia, Barquisimeto",utc:"-04:00"},{label:"America/Cuiaba (GMT-04:00)",tzCode:"America/Cuiaba",name:"(GMT-04:00) Cuiab\xE1, V\xE1rzea Grande, Rondon\xF3polis, Sinop, Barra do Gar\xE7as",utc:"-04:00"},{label:"America/Curacao (GMT-04:00)",tzCode:"America/Curacao",name:"(GMT-04:00) Willemstad, Sint Michiel Liber",utc:"-04:00"},{label:"America/Dominica (GMT-04:00)",tzCode:"America/Dominica",name:"(GMT-04:00) Roseau, Portsmouth, Berekua, Saint Joseph, Wesley",utc:"-04:00"},{label:"America/Glace_Bay (GMT-04:00)",tzCode:"America/Glace_Bay",name:"(GMT-04:00) Sydney, Glace Bay, Sydney Mines",utc:"-04:00"},{label:"America/Goose_Bay (GMT-04:00)",tzCode:"America/Goose_Bay",name:"(GMT-04:00) Labrador City, Happy Valley-Goose Bay",utc:"-04:00"},{label:"America/Grenada (GMT-04:00)",tzCode:"America/Grenada",name:"(GMT-04:00) Saint George's, Gouyave, Grenville, Victoria, Saint David\u2019s",utc:"-04:00"},{label:"America/Guadeloupe (GMT-04:00)",tzCode:"America/Guadeloupe",name:"(GMT-04:00) Les Abymes, Baie-Mahault, Le Gosier, Petit-Bourg, Sainte-Anne",utc:"-04:00"},{label:"America/Guyana (GMT-04:00)",tzCode:"America/Guyana",name:"(GMT-04:00) Georgetown, Linden, New Amsterdam, Anna Regina, Bartica",utc:"-04:00"},{label:"America/Halifax (GMT-04:00)",tzCode:"America/Halifax",name:"(GMT-04:00) Halifax, Dartmouth, Charlottetown, Lower Sackville, Truro",utc:"-04:00"},{label:"America/Kralendijk (GMT-04:00)",tzCode:"America/Kralendijk",name:"(GMT-04:00) Kralendijk, Oranjestad, The Bottom",utc:"-04:00"},{label:"America/La_Paz (GMT-04:00)",tzCode:"America/La_Paz",name:"(GMT-04:00) Santa Cruz de la Sierra, Cochabamba, La Paz, Sucre, Oruro",utc:"-04:00"},{label:"America/Lower_Princes (GMT-04:00)",tzCode:"America/Lower_Princes",name:"(GMT-04:00) Cul de Sac, Lower Prince\u2019s Quarter, Koolbaai, Philipsburg",utc:"-04:00"},{label:"America/Manaus (GMT-04:00)",tzCode:"America/Manaus",name:"(GMT-04:00) Manaus, Itacoatiara, Parintins, Manacapuru, Coari",utc:"-04:00"},{label:"America/Marigot (GMT-04:00)",tzCode:"America/Marigot",name:"(GMT-04:00) Marigot",utc:"-04:00"},{label:"America/Martinique (GMT-04:00)",tzCode:"America/Martinique",name:"(GMT-04:00) Fort-de-France, Le Lamentin, Le Robert, Sainte-Marie, Le Fran\xE7ois",utc:"-04:00"},{label:"America/Moncton (GMT-04:00)",tzCode:"America/Moncton",name:"(GMT-04:00) Moncton, Saint John, Fredericton, Dieppe, Miramichi",utc:"-04:00"},{label:"America/Montserrat (GMT-04:00)",tzCode:"America/Montserrat",name:"(GMT-04:00) Brades, Saint Peters, Plymouth",utc:"-04:00"},{label:"America/Porto_Velho (GMT-04:00)",tzCode:"America/Porto_Velho",name:"(GMT-04:00) Porto Velho, Ji Paran\xE1, Vilhena, Ariquemes, Cacoal",utc:"-04:00"},{label:"America/Port_of_Spain (GMT-04:00)",tzCode:"America/Port_of_Spain",name:"(GMT-04:00) Chaguanas, Mon Repos, San Fernando, Port of Spain, Rio Claro",utc:"-04:00"},{label:"America/Puerto_Rico (GMT-04:00)",tzCode:"America/Puerto_Rico",name:"(GMT-04:00) San Juan, Bayam\xF3n, Carolina, Ponce, Caguas",utc:"-04:00"},{label:"America/Santiago (GMT-04:00)",tzCode:"America/Santiago",name:"(GMT-04:00) Santiago, Puente Alto, Antofagasta, Vi\xF1a del Mar, Valpara\xEDso",utc:"-04:00"},{label:"America/Santo_Domingo (GMT-04:00)",tzCode:"America/Santo_Domingo",name:"(GMT-04:00) Santo Domingo, Santiago de los Caballeros, Santo Domingo Oeste, Santo Domingo Este, San Pedro de Macor\xEDs",utc:"-04:00"},{label:"America/St_Barthelemy (GMT-04:00)",tzCode:"America/St_Barthelemy",name:"(GMT-04:00) Gustavia",utc:"-04:00"},{label:"America/St_Kitts (GMT-04:00)",tzCode:"America/St_Kitts",name:"(GMT-04:00) Basseterre, Fig Tree, Market Shop, Saint Paul\u2019s, Middle Island",utc:"-04:00"},{label:"America/St_Lucia (GMT-04:00)",tzCode:"America/St_Lucia",name:"(GMT-04:00) Castries, Bisee, Vieux Fort, Micoud, Soufri\xE8re",utc:"-04:00"},{label:"America/St_Thomas (GMT-04:00)",tzCode:"America/St_Thomas",name:"(GMT-04:00) Saint Croix, Charlotte Amalie, Cruz Bay",utc:"-04:00"},{label:"America/St_Vincent (GMT-04:00)",tzCode:"America/St_Vincent",name:"(GMT-04:00) Kingstown, Kingstown Park, Georgetown, Barrouallie, Port Elizabeth",utc:"-04:00"},{label:"America/Thule (GMT-04:00)",tzCode:"America/Thule",name:"(GMT-04:00) Thule",utc:"-04:00"},{label:"America/Tortola (GMT-04:00)",tzCode:"America/Tortola",name:"(GMT-04:00) Road Town",utc:"-04:00"},{label:"Atlantic/Bermuda (GMT-04:00)",tzCode:"Atlantic/Bermuda",name:"(GMT-04:00) Hamilton",utc:"-04:00"},{label:"America/St_Johns (GMT-03:30)",tzCode:"America/St_Johns",name:"(GMT-03:30) St. John's, Mount Pearl, Corner Brook, Conception Bay South, Bay Roberts",utc:"-03:30"},{label:"America/Araguaina (GMT-03:00)",tzCode:"America/Araguaina",name:"(GMT-03:00) Palmas, Aragua\xEDna, Gurupi, Miracema do Tocantins, Porto Franco",utc:"-03:00"},{label:"America/Argentina/Buenos_Aires (GMT-03:00)",tzCode:"America/Argentina/Buenos_Aires",name:"(GMT-03:00) Buenos Aires, La Plata, Mar del Plata, Mor\xF3n, Bah\xEDa Blanca",utc:"-03:00"},{label:"America/Argentina/Catamarca (GMT-03:00)",tzCode:"America/Argentina/Catamarca",name:"(GMT-03:00) San Fernando del Valle de Catamarca, Trelew, Puerto Madryn, Esquel, Rawson",utc:"-03:00"},{label:"America/Argentina/Cordoba (GMT-03:00)",tzCode:"America/Argentina/Cordoba",name:"(GMT-03:00) C\xF3rdoba, Rosario, Santa Fe, Resistencia, Santiago del Estero",utc:"-03:00"},{label:"America/Argentina/Jujuy (GMT-03:00)",tzCode:"America/Argentina/Jujuy",name:"(GMT-03:00) San Salvador de Jujuy, San Pedro de Jujuy, Libertador General San Mart\xEDn, Palpal\xE1, La Quiaca",utc:"-03:00"},{label:"America/Argentina/La_Rioja (GMT-03:00)",tzCode:"America/Argentina/La_Rioja",name:"(GMT-03:00) La Rioja, Chilecito, Arauco, Chamical",utc:"-03:00"},{label:"America/Argentina/Mendoza (GMT-03:00)",tzCode:"America/Argentina/Mendoza",name:"(GMT-03:00) Mendoza, San Rafael, San Mart\xEDn",utc:"-03:00"},{label:"America/Argentina/Rio_Gallegos (GMT-03:00)",tzCode:"America/Argentina/Rio_Gallegos",name:"(GMT-03:00) Comodoro Rivadavia, R\xEDo Gallegos, Caleta Olivia, Pico Truncado, Puerto Deseado",utc:"-03:00"},{label:"America/Argentina/Salta (GMT-03:00)",tzCode:"America/Argentina/Salta",name:"(GMT-03:00) Salta, Neuqu\xE9n, Santa Rosa, San Carlos de Bariloche, Cipolletti",utc:"-03:00"},{label:"America/Argentina/San_Juan (GMT-03:00)",tzCode:"America/Argentina/San_Juan",name:"(GMT-03:00) San Juan, Chimbas, Santa Luc\xEDa, Pocito, Caucete",utc:"-03:00"},{label:"America/Argentina/San_Luis (GMT-03:00)",tzCode:"America/Argentina/San_Luis",name:"(GMT-03:00) San Luis, Villa Mercedes, La Punta, Merlo, Justo Daract",utc:"-03:00"},{label:"America/Argentina/Tucuman (GMT-03:00)",tzCode:"America/Argentina/Tucuman",name:"(GMT-03:00) San Miguel de Tucum\xE1n, Yerba Buena, Taf\xED Viejo, Alderetes, Aguilares",utc:"-03:00"},{label:"America/Argentina/Ushuaia (GMT-03:00)",tzCode:"America/Argentina/Ushuaia",name:"(GMT-03:00) Ushuaia, R\xEDo Grande",utc:"-03:00"},{label:"America/Bahia (GMT-03:00)",tzCode:"America/Bahia",name:"(GMT-03:00) Salvador, Feira de Santana, Vit\xF3ria da Conquista, Itabuna, Cama\xE7ari",utc:"-03:00"},{label:"America/Belem (GMT-03:00)",tzCode:"America/Belem",name:"(GMT-03:00) Bel\xE9m, Ananindeua, Macap\xE1, Parauapebas, Marab\xE1",utc:"-03:00"},{label:"America/Cayenne (GMT-03:00)",tzCode:"America/Cayenne",name:"(GMT-03:00) Cayenne, Matoury, Saint-Laurent-du-Maroni, Kourou, R\xE9mire-Montjoly",utc:"-03:00"},{label:"America/Fortaleza (GMT-03:00)",tzCode:"America/Fortaleza",name:"(GMT-03:00) Fortaleza, S\xE3o Lu\xEDs, Natal, Teresina, Jo\xE3o Pessoa",utc:"-03:00"},{label:"America/Godthab (GMT-03:00)",tzCode:"America/Godthab",name:"(GMT-03:00) Nuuk, Sisimiut, Ilulissat, Qaqortoq, Aasiaat",utc:"-03:00"},{label:"America/Maceio (GMT-03:00)",tzCode:"America/Maceio",name:"(GMT-03:00) Macei\xF3, Aracaju, Arapiraca, Nossa Senhora do Socorro, S\xE3o Crist\xF3v\xE3o",utc:"-03:00"},{label:"America/Miquelon (GMT-03:00)",tzCode:"America/Miquelon",name:"(GMT-03:00) Saint-Pierre, Miquelon",utc:"-03:00"},{label:"America/Montevideo (GMT-03:00)",tzCode:"America/Montevideo",name:"(GMT-03:00) Montevideo, Salto, Paysand\xFA, Las Piedras, Rivera",utc:"-03:00"},{label:"America/Paramaribo (GMT-03:00)",tzCode:"America/Paramaribo",name:"(GMT-03:00) Paramaribo, Lelydorp, Brokopondo, Nieuw Nickerie, Moengo",utc:"-03:00"},{label:"America/Punta_Arenas (GMT-03:00)",tzCode:"America/Punta_Arenas",name:"(GMT-03:00) Punta Arenas, Puerto Natales",utc:"-03:00"},{label:"America/Recife (GMT-03:00)",tzCode:"America/Recife",name:"(GMT-03:00) Recife, Jaboat\xE3o, Jaboat\xE3o dos Guararapes, Olinda, Paulista",utc:"-03:00"},{label:"America/Santarem (GMT-03:00)",tzCode:"America/Santarem",name:"(GMT-03:00) Santar\xE9m, Altamira, Itaituba, Oriximin\xE1, Alenquer",utc:"-03:00"},{label:"America/Sao_Paulo (GMT-03:00)",tzCode:"America/Sao_Paulo",name:"(GMT-03:00) S\xE3o Paulo, Rio de Janeiro, Belo Horizonte, Bras\xEDlia, Curitiba",utc:"-03:00"},{label:"Antarctica/Palmer (GMT-03:00)",tzCode:"Antarctica/Palmer",name:"(GMT-03:00) Palmer",utc:"-03:00"},{label:"Antarctica/Rothera (GMT-03:00)",tzCode:"Antarctica/Rothera",name:"(GMT-03:00) Rothera",utc:"-03:00"},{label:"Atlantic/Stanley (GMT-03:00)",tzCode:"Atlantic/Stanley",name:"(GMT-03:00) Stanley",utc:"-03:00"},{label:"America/Noronha (GMT-02:00)",tzCode:"America/Noronha",name:"(GMT-02:00) Itamarac\xE1",utc:"-02:00"},{label:"Atlantic/South_Georgia (GMT-02:00)",tzCode:"Atlantic/South_Georgia",name:"(GMT-02:00) Grytviken",utc:"-02:00"},{label:"America/Scoresbysund (GMT-01:00)",tzCode:"America/Scoresbysund",name:"(GMT-01:00) Scoresbysund",utc:"-01:00"},{label:"Atlantic/Azores (GMT-01:00)",tzCode:"Atlantic/Azores",name:"(GMT-01:00) Ponta Delgada, Lagoa, Angra do Hero\xEDsmo, Rosto de C\xE3o, Rabo de Peixe",utc:"-01:00"},{label:"Atlantic/Cape_Verde (GMT-01:00)",tzCode:"Atlantic/Cape_Verde",name:"(GMT-01:00) Praia, Mindelo, Santa Maria, Cova Figueira, Santa Cruz",utc:"-01:00"},{label:"Africa/Abidjan (GMT+00:00)",tzCode:"Africa/Abidjan",name:"(GMT+00:00) Abidjan, Abobo, Bouak\xE9, Daloa, San-P\xE9dro",utc:"+00:00"},{label:"Africa/Accra (GMT+00:00)",tzCode:"Africa/Accra",name:"(GMT+00:00) Accra, Kumasi, Tamale, Takoradi, Atsiaman",utc:"+00:00"},{label:"Africa/Bamako (GMT+00:00)",tzCode:"Africa/Bamako",name:"(GMT+00:00) Bamako, Sikasso, Mopti, Koutiala, S\xE9gou",utc:"+00:00"},{label:"Africa/Banjul (GMT+00:00)",tzCode:"Africa/Banjul",name:"(GMT+00:00) Serekunda, Brikama, Bakau, Banjul, Farafenni",utc:"+00:00"},{label:"Africa/Bissau (GMT+00:00)",tzCode:"Africa/Bissau",name:"(GMT+00:00) Bissau, Bafat\xE1, Gab\xFA, Bissor\xE3, Bolama",utc:"+00:00"},{label:"Africa/Casablanca (GMT+00:00)",tzCode:"Africa/Casablanca",name:"(GMT+00:00) Casablanca, Rabat, F\xE8s, Sale, Marrakesh",utc:"+00:00"},{label:"Africa/Conakry (GMT+00:00)",tzCode:"Africa/Conakry",name:"(GMT+00:00) Camayenne, Conakry, Nz\xE9r\xE9kor\xE9, Kindia, Kankan",utc:"+00:00"},{label:"Africa/Dakar (GMT+00:00)",tzCode:"Africa/Dakar",name:"(GMT+00:00) Dakar, Pikine, Touba, Thi\xE8s, Thi\xE8s Nones",utc:"+00:00"},{label:"Africa/El_Aaiun (GMT+00:00)",tzCode:"Africa/El_Aaiun",name:"(GMT+00:00) Laayoune, Dakhla, Laayoune Plage",utc:"+00:00"},{label:"Africa/Freetown (GMT+00:00)",tzCode:"Africa/Freetown",name:"(GMT+00:00) Freetown, Bo, Kenema, Koidu, Makeni",utc:"+00:00"},{label:"Africa/Lome (GMT+00:00)",tzCode:"Africa/Lome",name:"(GMT+00:00) Lom\xE9, Sokod\xE9, Kara, Atakpam\xE9, Kpalim\xE9",utc:"+00:00"},{label:"Africa/Monrovia (GMT+00:00)",tzCode:"Africa/Monrovia",name:"(GMT+00:00) Monrovia, Gbarnga, Kakata, Bensonville, Harper",utc:"+00:00"},{label:"Africa/Nouakchott (GMT+00:00)",tzCode:"Africa/Nouakchott",name:"(GMT+00:00) Nouakchott, Nouadhibou, N\xE9ma, Ka\xE9di, Rosso",utc:"+00:00"},{label:"Africa/Ouagadougou (GMT+00:00)",tzCode:"Africa/Ouagadougou",name:"(GMT+00:00) Ouagadougou, Bobo-Dioulasso, Koudougou, Ouahigouya, Banfora",utc:"+00:00"},{label:"Africa/Sao_Tome (GMT+00:00)",tzCode:"Africa/Sao_Tome",name:"(GMT+00:00) S\xE3o Tom\xE9, Santo Ant\xF3nio",utc:"+00:00"},{label:"America/Danmarkshavn (GMT+00:00)",tzCode:"America/Danmarkshavn",name:"(GMT+00:00) Danmarkshavn",utc:"+00:00"},{label:"Antarctica/Troll (GMT+00:00)",tzCode:"Antarctica/Troll",name:"(GMT+00:00) Troll",utc:"+00:00"},{label:"Atlantic/Canary (GMT+00:00)",tzCode:"Atlantic/Canary",name:"(GMT+00:00) Las Palmas de Gran Canaria, Santa Cruz de Tenerife, La Laguna, Telde, Arona",utc:"+00:00"},{label:"Atlantic/Faroe (GMT+00:00)",tzCode:"Atlantic/Faroe",name:"(GMT+00:00) T\xF3rshavn, Klaksv\xEDk, Fuglafj\xF8r\xF0ur, Tv\xF8royri, Mi\xF0v\xE1gur",utc:"+00:00"},{label:"Atlantic/Madeira (GMT+00:00)",tzCode:"Atlantic/Madeira",name:"(GMT+00:00) Funchal, C\xE2mara de Lobos, S\xE3o Martinho, Cani\xE7o, Machico",utc:"+00:00"},{label:"Atlantic/Reykjavik (GMT+00:00)",tzCode:"Atlantic/Reykjavik",name:"(GMT+00:00) Reykjav\xEDk, K\xF3pavogur, Hafnarfj\xF6r\xF0ur, Akureyri, Gar\xF0ab\xE6r",utc:"+00:00"},{label:"Atlantic/St_Helena (GMT+00:00)",tzCode:"Atlantic/St_Helena",name:"(GMT+00:00) Jamestown, Georgetown, Edinburgh of the Seven Seas",utc:"+00:00"},{label:"Europe/Dublin (GMT+00:00)",tzCode:"Europe/Dublin",name:"(GMT+00:00) Dublin, Cork, Luimneach, Gaillimh, Tallaght",utc:"+00:00"},{label:"Europe/Guernsey (GMT+00:00)",tzCode:"Europe/Guernsey",name:"(GMT+00:00) Saint Peter Port, St Martin, Saint Sampson, St Anne, Saint Saviour",utc:"+00:00"},{label:"Europe/Isle_of_Man (GMT+00:00)",tzCode:"Europe/Isle_of_Man",name:"(GMT+00:00) Douglas, Ramsey, Peel, Port Erin, Castletown",utc:"+00:00"},{label:"Europe/Jersey (GMT+00:00)",tzCode:"Europe/Jersey",name:"(GMT+00:00) Saint Helier, Le Hocq",utc:"+00:00"},{label:"Europe/Lisbon (GMT+00:00)",tzCode:"Europe/Lisbon",name:"(GMT+00:00) Lisbon, Porto, Amadora, Braga, Set\xFAbal",utc:"+00:00"},{label:"Europe/London (GMT+00:00)",tzCode:"Europe/London",name:"(GMT+00:00) London, Birmingham, Liverpool, Sheffield, Bristol",utc:"+00:00"},{label:"Africa/Algiers (GMT+01:00)",tzCode:"Africa/Algiers",name:"(GMT+01:00) Algiers, Boumerdas, Oran, T\xE9bessa, Constantine",utc:"+01:00"},{label:"Africa/Bangui (GMT+01:00)",tzCode:"Africa/Bangui",name:"(GMT+01:00) Bangui, Bimbo, Mba\xEFki, Berb\xE9rati, Kaga Bandoro",utc:"+01:00"},{label:"Africa/Brazzaville (GMT+01:00)",tzCode:"Africa/Brazzaville",name:"(GMT+01:00) Brazzaville, Pointe-Noire, Dolisie, Kayes, Owando",utc:"+01:00"},{label:"Africa/Ceuta (GMT+01:00)",tzCode:"Africa/Ceuta",name:"(GMT+01:00) Ceuta, Melilla",utc:"+01:00"},{label:"Africa/Douala (GMT+01:00)",tzCode:"Africa/Douala",name:"(GMT+01:00) Douala, Yaound\xE9, Garoua, Kouss\xE9ri, Bamenda",utc:"+01:00"},{label:"Africa/Kinshasa (GMT+01:00)",tzCode:"Africa/Kinshasa",name:"(GMT+01:00) Kinshasa, Masina, Kikwit, Mbandaka, Matadi",utc:"+01:00"},{label:"Africa/Lagos (GMT+01:00)",tzCode:"Africa/Lagos",name:"(GMT+01:00) Lagos, Kano, Ibadan, Kaduna, Port Harcourt",utc:"+01:00"},{label:"Africa/Libreville (GMT+01:00)",tzCode:"Africa/Libreville",name:"(GMT+01:00) Libreville, Port-Gentil, Franceville, Oyem, Moanda",utc:"+01:00"},{label:"Africa/Luanda (GMT+01:00)",tzCode:"Africa/Luanda",name:"(GMT+01:00) Luanda, N\u2019dalatando, Huambo, Lobito, Benguela",utc:"+01:00"},{label:"Africa/Malabo (GMT+01:00)",tzCode:"Africa/Malabo",name:"(GMT+01:00) Bata, Malabo, Ebebiyin, Aconibe, A\xF1isoc",utc:"+01:00"},{label:"Africa/Ndjamena (GMT+01:00)",tzCode:"Africa/Ndjamena",name:"(GMT+01:00) N'Djamena, Moundou, Sarh, Ab\xE9ch\xE9, Kelo",utc:"+01:00"},{label:"Africa/Niamey (GMT+01:00)",tzCode:"Africa/Niamey",name:"(GMT+01:00) Niamey, Zinder, Maradi, Agadez, Alaghsas",utc:"+01:00"},{label:"Africa/Porto-Novo (GMT+01:00)",tzCode:"Africa/Porto-Novo",name:"(GMT+01:00) Cotonou, Abomey-Calavi, Djougou, Porto-Novo, Parakou",utc:"+01:00"},{label:"Africa/Tunis (GMT+01:00)",tzCode:"Africa/Tunis",name:"(GMT+01:00) Tunis, Sfax, Sousse, Kairouan, Bizerte",utc:"+01:00"},{label:"Africa/Windhoek (GMT+01:00)",tzCode:"Africa/Windhoek",name:"(GMT+01:00) Windhoek, Rundu, Walvis Bay, Oshakati, Swakopmund",utc:"+01:00"},{label:"Arctic/Longyearbyen (GMT+01:00)",tzCode:"Arctic/Longyearbyen",name:"(GMT+01:00) Longyearbyen, Olonkinbyen",utc:"+01:00"},{label:"Europe/Amsterdam (GMT+01:00)",tzCode:"Europe/Amsterdam",name:"(GMT+01:00) Amsterdam, Rotterdam, The Hague, Utrecht, Eindhoven",utc:"+01:00"},{label:"Europe/Andorra (GMT+01:00)",tzCode:"Europe/Andorra",name:"(GMT+01:00) Andorra la Vella, les Escaldes, Encamp, Sant Juli\xE0 de L\xF2ria, la Massana",utc:"+01:00"},{label:"Europe/Belgrade (GMT+01:00)",tzCode:"Europe/Belgrade",name:"(GMT+01:00) Belgrade, Pristina, Ni\u0161, Novi Sad, Prizren",utc:"+01:00"},{label:"Europe/Berlin (GMT+01:00)",tzCode:"Europe/Berlin",name:"(GMT+01:00) Berlin, Hamburg, Munich, K\xF6ln, Frankfurt am Main",utc:"+01:00"},{label:"Europe/Bratislava (GMT+01:00)",tzCode:"Europe/Bratislava",name:"(GMT+01:00) Bratislava, Ko\u0161ice, Pre\u0161ov, Nitra, \u017Dilina",utc:"+01:00"},{label:"Europe/Brussels (GMT+01:00)",tzCode:"Europe/Brussels",name:"(GMT+01:00) Brussels, Antwerpen, Gent, Charleroi, Li\xE8ge",utc:"+01:00"},{label:"Europe/Budapest (GMT+01:00)",tzCode:"Europe/Budapest",name:"(GMT+01:00) Budapest, Debrecen, Miskolc, Szeged, P\xE9cs",utc:"+01:00"},{label:"Europe/Copenhagen (GMT+01:00)",tzCode:"Europe/Copenhagen",name:"(GMT+01:00) Copenhagen, \xC5rhus, Odense, Aalborg, Frederiksberg",utc:"+01:00"},{label:"Europe/Gibraltar (GMT+01:00)",tzCode:"Europe/Gibraltar",name:"(GMT+01:00) Gibraltar",utc:"+01:00"},{label:"Europe/Ljubljana (GMT+01:00)",tzCode:"Europe/Ljubljana",name:"(GMT+01:00) Ljubljana, Maribor, Celje, Kranj, Velenje",utc:"+01:00"},{label:"Europe/Luxembourg (GMT+01:00)",tzCode:"Europe/Luxembourg",name:"(GMT+01:00) Luxembourg, Esch-sur-Alzette, Dudelange, Schifflange, Bettembourg",utc:"+01:00"},{label:"Europe/Madrid (GMT+01:00)",tzCode:"Europe/Madrid",name:"(GMT+01:00) Madrid, Barcelona, Valencia, Sevilla, Zaragoza",utc:"+01:00"},{label:"Europe/Malta (GMT+01:00)",tzCode:"Europe/Malta",name:"(GMT+01:00) Birkirkara, Qormi, Mosta, \u017Babbar, San Pawl il-Ba\u0127ar",utc:"+01:00"},{label:"Europe/Monaco (GMT+01:00)",tzCode:"Europe/Monaco",name:"(GMT+01:00) Monaco, Monte-Carlo, La Condamine",utc:"+01:00"},{label:"Europe/Oslo (GMT+01:00)",tzCode:"Europe/Oslo",name:"(GMT+01:00) Oslo, Bergen, Trondheim, Stavanger, Drammen",utc:"+01:00"},{label:"Europe/Paris (GMT+01:00)",tzCode:"Europe/Paris",name:"(GMT+01:00) Paris, Marseille, Lyon, Toulouse, Nice",utc:"+01:00"},{label:"Europe/Podgorica (GMT+01:00)",tzCode:"Europe/Podgorica",name:"(GMT+01:00) Podgorica, Nik\u0161i\u0107, Herceg Novi, Pljevlja, Budva",utc:"+01:00"},{label:"Europe/Prague (GMT+01:00)",tzCode:"Europe/Prague",name:"(GMT+01:00) Prague, Brno, Ostrava, Pilsen, Olomouc",utc:"+01:00"},{label:"Europe/Rome (GMT+01:00)",tzCode:"Europe/Rome",name:"(GMT+01:00) Rome, Milan, Naples, Turin, Palermo",utc:"+01:00"},{label:"Europe/San_Marino (GMT+01:00)",tzCode:"Europe/San_Marino",name:"(GMT+01:00) Serravalle, Borgo Maggiore, San Marino, Domagnano, Fiorentino",utc:"+01:00"},{label:"Europe/Sarajevo (GMT+01:00)",tzCode:"Europe/Sarajevo",name:"(GMT+01:00) Sarajevo, Banja Luka, Zenica, Tuzla, Mostar",utc:"+01:00"},{label:"Europe/Skopje (GMT+01:00)",tzCode:"Europe/Skopje",name:"(GMT+01:00) Skopje, Bitola, Kumanovo, Prilep, Tetovo",utc:"+01:00"},{label:"Europe/Stockholm (GMT+01:00)",tzCode:"Europe/Stockholm",name:"(GMT+01:00) Stockholm, G\xF6teborg, Malm\xF6, Uppsala, Sollentuna",utc:"+01:00"},{label:"Europe/Tirane (GMT+01:00)",tzCode:"Europe/Tirane",name:"(GMT+01:00) Tirana, Durr\xEBs, Elbasan, Vlor\xEB, Shkod\xEBr",utc:"+01:00"},{label:"Europe/Vaduz (GMT+01:00)",tzCode:"Europe/Vaduz",name:"(GMT+01:00) Schaan, Vaduz, Triesen, Balzers, Eschen",utc:"+01:00"},{label:"Europe/Vatican (GMT+01:00)",tzCode:"Europe/Vatican",name:"(GMT+01:00) Vatican City",utc:"+01:00"},{label:"Europe/Vienna (GMT+01:00)",tzCode:"Europe/Vienna",name:"(GMT+01:00) Vienna, Graz, Linz, Favoriten, Donaustadt",utc:"+01:00"},{label:"Europe/Warsaw (GMT+01:00)",tzCode:"Europe/Warsaw",name:"(GMT+01:00) Warsaw, \u0141\xF3d\u017A, Krak\xF3w, Wroc\u0142aw, Pozna\u0144",utc:"+01:00"},{label:"Europe/Zagreb (GMT+01:00)",tzCode:"Europe/Zagreb",name:"(GMT+01:00) Zagreb, Split, Rijeka, Osijek, Zadar",utc:"+01:00"},{label:"Europe/Zurich (GMT+01:00)",tzCode:"Europe/Zurich",name:"(GMT+01:00) Z\xFCrich, Gen\xE8ve, Basel, Lausanne, Bern",utc:"+01:00"},{label:"Africa/Blantyre (GMT+02:00)",tzCode:"Africa/Blantyre",name:"(GMT+02:00) Lilongwe, Blantyre, Mzuzu, Zomba, Kasungu",utc:"+02:00"},{label:"Africa/Bujumbura (GMT+02:00)",tzCode:"Africa/Bujumbura",name:"(GMT+02:00) Bujumbura, Muyinga, Gitega, Ruyigi, Ngozi",utc:"+02:00"},{label:"Africa/Cairo (GMT+02:00)",tzCode:"Africa/Cairo",name:"(GMT+02:00) Cairo, Alexandria, Giza, Port Said, Suez",utc:"+02:00"},{label:"Africa/Gaborone (GMT+02:00)",tzCode:"Africa/Gaborone",name:"(GMT+02:00) Gaborone, Francistown, Molepolole, Selebi-Phikwe, Maun",utc:"+02:00"},{label:"Africa/Harare (GMT+02:00)",tzCode:"Africa/Harare",name:"(GMT+02:00) Harare, Bulawayo, Chitungwiza, Mutare, Gweru",utc:"+02:00"},{label:"Africa/Johannesburg (GMT+02:00)",tzCode:"Africa/Johannesburg",name:"(GMT+02:00) Cape Town, Durban, Johannesburg, Soweto, Pretoria",utc:"+02:00"},{label:"Africa/Juba (GMT+02:00)",tzCode:"Africa/Juba",name:"(GMT+02:00) Juba, Winejok, Malakal, Wau, Kuacjok",utc:"+02:00"},{label:"Africa/Khartoum (GMT+02:00)",tzCode:"Africa/Khartoum",name:"(GMT+02:00) Khartoum, Omdurman, Nyala, Port Sudan, Kassala",utc:"+02:00"},{label:"Africa/Kigali (GMT+02:00)",tzCode:"Africa/Kigali",name:"(GMT+02:00) Kigali, Butare, Gitarama, Musanze, Gisenyi",utc:"+02:00"},{label:"Africa/Lubumbashi (GMT+02:00)",tzCode:"Africa/Lubumbashi",name:"(GMT+02:00) Lubumbashi, Mbuji-Mayi, Kisangani, Kananga, Likasi",utc:"+02:00"},{label:"Africa/Lusaka (GMT+02:00)",tzCode:"Africa/Lusaka",name:"(GMT+02:00) Lusaka, Kitwe, Ndola, Kabwe, Chingola",utc:"+02:00"},{label:"Africa/Maputo (GMT+02:00)",tzCode:"Africa/Maputo",name:"(GMT+02:00) Maputo, Matola, Beira, Nampula, Chimoio",utc:"+02:00"},{label:"Africa/Maseru (GMT+02:00)",tzCode:"Africa/Maseru",name:"(GMT+02:00) Maseru, Mafeteng, Leribe, Maputsoe, Mohale\u2019s Hoek",utc:"+02:00"},{label:"Africa/Mbabane (GMT+02:00)",tzCode:"Africa/Mbabane",name:"(GMT+02:00) Manzini, Mbabane, Big Bend, Malkerns, Nhlangano",utc:"+02:00"},{label:"Africa/Tripoli (GMT+02:00)",tzCode:"Africa/Tripoli",name:"(GMT+02:00) Tripoli, Benghazi, Mi\u015Fr\u0101tah, Tarhuna, Al Khums",utc:"+02:00"},{label:"Asia/Amman (GMT+02:00)",tzCode:"Asia/Amman",name:"(GMT+02:00) Amman, Zarqa, Irbid, Russeifa, W\u0101d\u012B as S\u012Br",utc:"+02:00"},{label:"Asia/Beirut (GMT+02:00)",tzCode:"Asia/Beirut",name:"(GMT+02:00) Beirut, Ra\u2019s Bayr\u016Bt, Tripoli, Sidon, Tyre",utc:"+02:00"},{label:"Asia/Damascus (GMT+02:00)",tzCode:"Asia/Damascus",name:"(GMT+02:00) Aleppo, Damascus, Homs, \u1E28am\u0101h, Latakia",utc:"+02:00"},{label:"Asia/Famagusta (GMT+02:00)",tzCode:"Asia/Famagusta",name:"(GMT+02:00) Famagusta, Kyrenia, Protaras, Paral\xEDmni, L\xE1pithos",utc:"+02:00"},{label:"Asia/Gaza (GMT+02:00)",tzCode:"Asia/Gaza",name:"(GMT+02:00) Gaza, Kh\u0101n Y\u016Bnis, Jab\u0101ly\u0101, Rafa\u1E29, Dayr al Bala\u1E29",utc:"+02:00"},{label:"Asia/Hebron (GMT+02:00)",tzCode:"Asia/Hebron",name:"(GMT+02:00) East Jerusalem, Hebron, Nablus, Battir, \u0162\u016Blkarm",utc:"+02:00"},{label:"Asia/Jerusalem (GMT+02:00)",tzCode:"Asia/Jerusalem",name:"(GMT+02:00) Jerusalem, Tel Aviv, West Jerusalem, Haifa, Ashdod",utc:"+02:00"},{label:"Asia/Nicosia (GMT+02:00)",tzCode:"Asia/Nicosia",name:"(GMT+02:00) Nicosia, Limassol, Larnaca, Str\xF3volos, Paphos",utc:"+02:00"},{label:"Europe/Athens (GMT+02:00)",tzCode:"Europe/Athens",name:"(GMT+02:00) Athens, Thessalon\xEDki, P\xE1tra, Piraeus, L\xE1risa",utc:"+02:00"},{label:"Europe/Bucharest (GMT+02:00)",tzCode:"Europe/Bucharest",name:"(GMT+02:00) Bucharest, Sector 3, Sector 6, Sector 2, Ia\u015Fi",utc:"+02:00"},{label:"Europe/Chisinau (GMT+02:00)",tzCode:"Europe/Chisinau",name:"(GMT+02:00) Chisinau, Tiraspol, B\u0103l\u0163i, Bender, R\xEEbni\u0163a",utc:"+02:00"},{label:"Europe/Helsinki (GMT+02:00)",tzCode:"Europe/Helsinki",name:"(GMT+02:00) Helsinki, Espoo, Tampere, Vantaa, Turku",utc:"+02:00"},{label:"Europe/Kaliningrad (GMT+02:00)",tzCode:"Europe/Kaliningrad",name:"(GMT+02:00) Kaliningrad, Chernyakhovsk, Sovetsk, Baltiysk, Gusev",utc:"+02:00"},{label:"Europe/Kiev (GMT+02:00)",tzCode:"Europe/Kiev",name:"(GMT+02:00) Kyiv, Kharkiv, Donetsk, Odessa, Dnipro",utc:"+02:00"},{label:"Europe/Mariehamn (GMT+02:00)",tzCode:"Europe/Mariehamn",name:"(GMT+02:00) Mariehamn",utc:"+02:00"},{label:"Europe/Riga (GMT+02:00)",tzCode:"Europe/Riga",name:"(GMT+02:00) Riga, Daugavpils, Liep\u0101ja, Jelgava, J\u016Brmala",utc:"+02:00"},{label:"Europe/Sofia (GMT+02:00)",tzCode:"Europe/Sofia",name:"(GMT+02:00) Sofia, Plovdiv, Varna, Burgas, Ruse",utc:"+02:00"},{label:"Europe/Tallinn (GMT+02:00)",tzCode:"Europe/Tallinn",name:"(GMT+02:00) Tallinn, Tartu, Narva, Kohtla-J\xE4rve, P\xE4rnu",utc:"+02:00"},{label:"Europe/Uzhgorod (GMT+02:00)",tzCode:"Europe/Uzhgorod",name:"(GMT+02:00) Uzhgorod, Mukachevo, Khust, Berehove, Tyachiv",utc:"+02:00"},{label:"Europe/Vilnius (GMT+02:00)",tzCode:"Europe/Vilnius",name:"(GMT+02:00) Vilnius, Kaunas, Klaip\u0117da, \u0160iauliai, Panev\u0117\u017Eys",utc:"+02:00"},{label:"Europe/Zaporozhye (GMT+02:00)",tzCode:"Europe/Zaporozhye",name:"(GMT+02:00) Luhansk, Sevastopol, Sievierodonetsk, Alchevsk, Lysychansk",utc:"+02:00"},{label:"Africa/Addis_Ababa (GMT+03:00)",tzCode:"Africa/Addis_Ababa",name:"(GMT+03:00) Addis Ababa, Dire Dawa, Mek'ele, Nazr\u0113t, Bahir Dar",utc:"+03:00"},{label:"Africa/Asmara (GMT+03:00)",tzCode:"Africa/Asmara",name:"(GMT+03:00) Asmara, Keren, Massawa, Assab, Mendefera",utc:"+03:00"},{label:"Africa/Dar_es_Salaam (GMT+03:00)",tzCode:"Africa/Dar_es_Salaam",name:"(GMT+03:00) Dar es Salaam, Mwanza, Zanzibar, Arusha, Mbeya",utc:"+03:00"},{label:"Africa/Djibouti (GMT+03:00)",tzCode:"Africa/Djibouti",name:"(GMT+03:00) Djibouti, 'Ali Sabieh, Tadjourah, Obock, Dikhil",utc:"+03:00"},{label:"Africa/Kampala (GMT+03:00)",tzCode:"Africa/Kampala",name:"(GMT+03:00) Kampala, Gulu, Lira, Mbarara, Jinja",utc:"+03:00"},{label:"Africa/Mogadishu (GMT+03:00)",tzCode:"Africa/Mogadishu",name:"(GMT+03:00) Mogadishu, Hargeysa, Berbera, Kismayo, Marka",utc:"+03:00"},{label:"Africa/Nairobi (GMT+03:00)",tzCode:"Africa/Nairobi",name:"(GMT+03:00) Nairobi, Mombasa, Nakuru, Eldoret, Kisumu",utc:"+03:00"},{label:"Antarctica/Syowa (GMT+03:00)",tzCode:"Antarctica/Syowa",name:"(GMT+03:00) Syowa",utc:"+03:00"},{label:"Asia/Aden (GMT+03:00)",tzCode:"Asia/Aden",name:"(GMT+03:00) Sanaa, Al \u1E28udaydah, Taiz, Aden, Mukalla",utc:"+03:00"},{label:"Asia/Baghdad (GMT+03:00)",tzCode:"Asia/Baghdad",name:"(GMT+03:00) Baghdad, Basrah, Al Maw\u015Fil al Jad\u012Bdah, Al Ba\u015Frah al Qad\u012Bmah, Mosul",utc:"+03:00"},{label:"Asia/Bahrain (GMT+03:00)",tzCode:"Asia/Bahrain",name:"(GMT+03:00) Manama, Al Muharraq, Ar Rif\u0101\u2018, D\u0101r Kulayb, Mad\u012Bnat \u1E28amad",utc:"+03:00"},{label:"Asia/Kuwait (GMT+03:00)",tzCode:"Asia/Kuwait",name:"(GMT+03:00) Al A\u1E29mad\u012B, \u1E28awall\u012B, As S\u0101lim\u012Byah, \u015Eab\u0101\u1E29 as S\u0101lim, Al Farw\u0101n\u012Byah",utc:"+03:00"},{label:"Asia/Qatar (GMT+03:00)",tzCode:"Asia/Qatar",name:"(GMT+03:00) Doha, Ar Rayy\u0101n, Umm \u015Eal\u0101l Mu\u1E29ammad, Al Wakrah, Al Khawr",utc:"+03:00"},{label:"Asia/Riyadh (GMT+03:00)",tzCode:"Asia/Riyadh",name:"(GMT+03:00) Riyadh, Jeddah, Mecca, Medina, Sul\u0163\u0101nah",utc:"+03:00"},{label:"Europe/Istanbul (GMT+03:00)",tzCode:"Europe/Istanbul",name:"(GMT+03:00) Istanbul, Ankara, \u0130zmir, Bursa, Adana",utc:"+03:00"},{label:"Europe/Kirov (GMT+03:00)",tzCode:"Europe/Kirov",name:"(GMT+03:00) Kirov, Kirovo-Chepetsk, Vyatskiye Polyany, Slobodskoy, Kotel\u2019nich",utc:"+03:00"},{label:"Europe/Minsk (GMT+03:00)",tzCode:"Europe/Minsk",name:"(GMT+03:00) Minsk, Homyel', Mahilyow, Vitebsk, Hrodna",utc:"+03:00"},{label:"Europe/Moscow (GMT+03:00)",tzCode:"Europe/Moscow",name:"(GMT+03:00) Moscow, Saint Petersburg, Nizhniy Novgorod, Kazan, Rostov-na-Donu",utc:"+03:00"},{label:"Europe/Simferopol (GMT+03:00)",tzCode:"Europe/Simferopol",name:"(GMT+03:00) Simferopol, Kerch, Yevpatoriya, Yalta, Feodosiya",utc:"+03:00"},{label:"Europe/Volgograd (GMT+03:00)",tzCode:"Europe/Volgograd",name:"(GMT+03:00) Volgograd, Volzhskiy, Kamyshin, Mikhaylovka, Uryupinsk",utc:"+03:00"},{label:"Indian/Antananarivo (GMT+03:00)",tzCode:"Indian/Antananarivo",name:"(GMT+03:00) Antananarivo, Toamasina, Antsirabe, Fianarantsoa, Mahajanga",utc:"+03:00"},{label:"Indian/Comoro (GMT+03:00)",tzCode:"Indian/Comoro",name:"(GMT+03:00) Moroni, Moutsamoudou, Fomboni, Domoni, Tsimbeo",utc:"+03:00"},{label:"Indian/Mayotte (GMT+03:00)",tzCode:"Indian/Mayotte",name:"(GMT+03:00) Mamoudzou, Koungou, Dzaoudzi, Dembeni, Sada",utc:"+03:00"},{label:"Asia/Tehran (GMT+03:30)",tzCode:"Asia/Tehran",name:"(GMT+03:30) Tehran, Mashhad, Isfahan, Karaj, Tabriz",utc:"+03:30"},{label:"Asia/Baku (GMT+04:00)",tzCode:"Asia/Baku",name:"(GMT+04:00) Baku, Ganja, Sumqay\u0131t, Lankaran, Yevlakh",utc:"+04:00"},{label:"Asia/Dubai (GMT+04:00)",tzCode:"Asia/Dubai",name:"(GMT+04:00) Dubai, Sharjah, Abu Dhabi, Ajman City, Ras Al Khaimah City",utc:"+04:00"},{label:"Asia/Muscat (GMT+04:00)",tzCode:"Asia/Muscat",name:"(GMT+04:00) Muscat, Seeb, \u015Eal\u0101lah, Bawshar, Sohar",utc:"+04:00"},{label:"Asia/Tbilisi (GMT+04:00)",tzCode:"Asia/Tbilisi",name:"(GMT+04:00) Tbilisi, Kutaisi, Batumi, Sokhumi, Zugdidi",utc:"+04:00"},{label:"Asia/Yerevan (GMT+04:00)",tzCode:"Asia/Yerevan",name:"(GMT+04:00) Yerevan, Gyumri, Vanadzor, Vagharshapat, Hrazdan",utc:"+04:00"},{label:"Europe/Astrakhan (GMT+04:00)",tzCode:"Europe/Astrakhan",name:"(GMT+04:00) Astrakhan, Akhtubinsk, Znamensk, Kharabali, Kamyzyak",utc:"+04:00"},{label:"Europe/Samara (GMT+04:00)",tzCode:"Europe/Samara",name:"(GMT+04:00) Samara, Togliatti-on-the-Volga, Izhevsk, Syzran\u2019, Novokuybyshevsk",utc:"+04:00"},{label:"Europe/Saratov (GMT+04:00)",tzCode:"Europe/Saratov",name:"(GMT+04:00) Saratov, Balakovo, Engel\u2019s, Balashov, Vol\u2019sk",utc:"+04:00"},{label:"Europe/Ulyanovsk (GMT+04:00)",tzCode:"Europe/Ulyanovsk",name:"(GMT+04:00) Ulyanovsk, Dimitrovgrad, Inza, Barysh, Novoul\u2019yanovsk",utc:"+04:00"},{label:"Indian/Mahe (GMT+04:00)",tzCode:"Indian/Mahe",name:"(GMT+04:00) Victoria, Anse Boileau, Bel Ombre, Beau Vallon, Cascade",utc:"+04:00"},{label:"Indian/Mauritius (GMT+04:00)",tzCode:"Indian/Mauritius",name:"(GMT+04:00) Port Louis, Beau Bassin-Rose Hill, Vacoas, Curepipe, Quatre Bornes",utc:"+04:00"},{label:"Indian/Reunion (GMT+04:00)",tzCode:"Indian/Reunion",name:"(GMT+04:00) Saint-Denis, Saint-Paul, Saint-Pierre, Le Tampon, Saint-Andr\xE9",utc:"+04:00"},{label:"Asia/Kabul (GMT+04:30)",tzCode:"Asia/Kabul",name:"(GMT+04:30) Kabul, Kandah\u0101r, Maz\u0101r-e Shar\u012Bf, Her\u0101t, Jal\u0101l\u0101b\u0101d",utc:"+04:30"},{label:"Antarctica/Mawson (GMT+05:00)",tzCode:"Antarctica/Mawson",name:"(GMT+05:00) Mawson",utc:"+05:00"},{label:"Asia/Aqtau (GMT+05:00)",tzCode:"Asia/Aqtau",name:"(GMT+05:00) Shevchenko, Zhanaozen, Beyneu, Shetpe, Yeraliyev",utc:"+05:00"},{label:"Asia/Aqtobe (GMT+05:00)",tzCode:"Asia/Aqtobe",name:"(GMT+05:00) Aktobe, Kandyagash, Shalqar, Khromtau, Embi",utc:"+05:00"},{label:"Asia/Ashgabat (GMT+05:00)",tzCode:"Asia/Ashgabat",name:"(GMT+05:00) Ashgabat, T\xFCrkmenabat, Da\u015Foguz, Mary, Balkanabat",utc:"+05:00"},{label:"Asia/Atyrau (GMT+05:00)",tzCode:"Asia/Atyrau",name:"(GMT+05:00) Atyrau, Qulsary, Shalkar, Balykshi, Maqat",utc:"+05:00"},{label:"Asia/Dushanbe (GMT+05:00)",tzCode:"Asia/Dushanbe",name:"(GMT+05:00) Dushanbe, Khujand, K\u016Dlob, Bokhtar, Istaravshan",utc:"+05:00"},{label:"Asia/Karachi (GMT+05:00)",tzCode:"Asia/Karachi",name:"(GMT+05:00) Karachi, Lahore, Faisalabad, Rawalpindi, Multan",utc:"+05:00"},{label:"Asia/Oral (GMT+05:00)",tzCode:"Asia/Oral",name:"(GMT+05:00) Oral, Aqsay, Zh\xE4nibek, Tasqala, Zhumysker",utc:"+05:00"},{label:"Asia/Qyzylorda (GMT+05:00)",tzCode:"Asia/Qyzylorda",name:"(GMT+05:00) Kyzylorda, Baikonur, Novokazalinsk, Aral, Chiili",utc:"+05:00"},{label:"Asia/Samarkand (GMT+05:00)",tzCode:"Asia/Samarkand",name:"(GMT+05:00) Samarkand, Bukhara, Nukus, Qarshi, Jizzax",utc:"+05:00"},{label:"Asia/Tashkent (GMT+05:00)",tzCode:"Asia/Tashkent",name:"(GMT+05:00) Tashkent, Namangan, Andijon, Qo\u2018qon, Chirchiq",utc:"+05:00"},{label:"Asia/Yekaterinburg (GMT+05:00)",tzCode:"Asia/Yekaterinburg",name:"(GMT+05:00) Yekaterinburg, Chelyabinsk, Ufa, Perm, Orenburg",utc:"+05:00"},{label:"Indian/Kerguelen (GMT+05:00)",tzCode:"Indian/Kerguelen",name:"(GMT+05:00) Port-aux-Fran\xE7ais",utc:"+05:00"},{label:"Indian/Maldives (GMT+05:00)",tzCode:"Indian/Maldives",name:"(GMT+05:00) Male, Fuvahmulah, Hithadhoo, Kulhudhuffushi, Thinadhoo",utc:"+05:00"},{label:"Asia/Colombo (GMT+05:30)",tzCode:"Asia/Colombo",name:"(GMT+05:30) Colombo, Dehiwala-Mount Lavinia, Moratuwa, Jaffna, Negombo",utc:"+05:30"},{label:"Asia/Kolkata (GMT+05:30)",tzCode:"Asia/Kolkata",name:"(GMT+05:30) Mumbai, Delhi, Bengaluru, Kolkata, Chennai",utc:"+05:30"},{label:"Asia/Kathmandu (GMT+05:45)",tzCode:"Asia/Kathmandu",name:"(GMT+05:45) Kathmandu, Pokhara, P\u0101tan, Biratnagar, Birga\xF1j",utc:"+05:45"},{label:"Antarctica/Vostok (GMT+06:00)",tzCode:"Antarctica/Vostok",name:"(GMT+06:00) Vostok",utc:"+06:00"},{label:"Asia/Almaty (GMT+06:00)",tzCode:"Asia/Almaty",name:"(GMT+06:00) Almaty, Karagandy, Shymkent, Taraz, Nur-Sultan",utc:"+06:00"},{label:"Asia/Bishkek (GMT+06:00)",tzCode:"Asia/Bishkek",name:"(GMT+06:00) Bishkek, Osh, Jalal-Abad, Karakol, Tokmok",utc:"+06:00"},{label:"Asia/Dhaka (GMT+06:00)",tzCode:"Asia/Dhaka",name:"(GMT+06:00) Dhaka, Chattogram, Khulna, R\u0101jsh\u0101hi, Comilla",utc:"+06:00"},{label:"Asia/Omsk (GMT+06:00)",tzCode:"Asia/Omsk",name:"(GMT+06:00) Omsk, Tara, Kalachinsk, Znamenskoye, Tavricheskoye",utc:"+06:00"},{label:"Asia/Qostanay (GMT+06:00)",tzCode:"Asia/Qostanay",name:"(GMT+06:00) Kostanay, Rudnyy, Dzhetygara, Arkalyk, Lisakovsk",utc:"+06:00"},{label:"Asia/Thimphu (GMT+06:00)",tzCode:"Asia/Thimphu",name:"(GMT+06:00) himphu, Pun\u0101kha, Tsirang, Phuntsholing, Pemagatshel",utc:"+06:00"},{label:"Asia/Urumqi (GMT+06:00)",tzCode:"Asia/Urumqi",name:"(GMT+06:00) Zhongshan, \xDCr\xFCmqi, Zhanjiang, Shihezi, Huocheng",utc:"+06:00"},{label:"Indian/Chagos (GMT+06:00)",tzCode:"Indian/Chagos",name:"(GMT+06:00) British Indian Ocean Territory",utc:"+06:00"},{label:"Asia/Yangon (GMT+06:30)",tzCode:"Asia/Yangon",name:"(GMT+06:30) Yangon, Mandalay, Nay Pyi Taw, Mawlamyine, Kyain Seikgyi Township",utc:"+06:30"},{label:"Indian/Cocos (GMT+06:30)",tzCode:"Indian/Cocos",name:"(GMT+06:30) West Island",utc:"+06:30"},{label:"Antarctica/Davis (GMT+07:00)",tzCode:"Antarctica/Davis",name:"(GMT+07:00) Davis",utc:"+07:00"},{label:"Asia/Bangkok (GMT+07:00)",tzCode:"Asia/Bangkok",name:"(GMT+07:00) Bangkok, Hanoi, Haiphong, Samut Prakan, Mueang Nonthaburi",utc:"+07:00"},{label:"Asia/Barnaul (GMT+07:00)",tzCode:"Asia/Barnaul",name:"(GMT+07:00) Barnaul, Biysk, Rubtsovsk, Novoaltaysk, Gorno-Altaysk",utc:"+07:00"},{label:"Asia/Hovd (GMT+07:00)",tzCode:"Asia/Hovd",name:"(GMT+07:00) Khovd, \xD6lgii, Ulaangom, Uliastay, Altai",utc:"+07:00"},{label:"Asia/Ho_Chi_Minh (GMT+07:00)",tzCode:"Asia/Ho_Chi_Minh",name:"(GMT+07:00) Ho Chi Minh City, Da Nang, Bi\xEAn H\xF2a, Nha Trang, C\u1EA7n Th\u01A1",utc:"+07:00"},{label:"Asia/Jakarta (GMT+07:00)",tzCode:"Asia/Jakarta",name:"(GMT+07:00) Jakarta, Surabaya, Medan, Bandung, Bekasi",utc:"+07:00"},{label:"Asia/Krasnoyarsk (GMT+07:00)",tzCode:"Asia/Krasnoyarsk",name:"(GMT+07:00) Krasnoyarsk, Abakan, Norilsk, Achinsk, Kyzyl",utc:"+07:00"},{label:"Asia/Novokuznetsk (GMT+07:00)",tzCode:"Asia/Novokuznetsk",name:"(GMT+07:00) Novokuznetsk, Kemerovo, Prokop\u2019yevsk, Leninsk-Kuznetsky, Kisel\xEBvsk",utc:"+07:00"},{label:"Asia/Novosibirsk (GMT+07:00)",tzCode:"Asia/Novosibirsk",name:"(GMT+07:00) Novosibirsk, Berdsk, Iskitim, Akademgorodok, Kuybyshev",utc:"+07:00"},{label:"Asia/Phnom_Penh (GMT+07:00)",tzCode:"Asia/Phnom_Penh",name:"(GMT+07:00) Phnom Penh, Takeo, Sihanoukville, Battambang, Siem Reap",utc:"+07:00"},{label:"Asia/Pontianak (GMT+07:00)",tzCode:"Asia/Pontianak",name:"(GMT+07:00) Pontianak, Tanjung Pinang, Palangkaraya, Singkawang, Sampit",utc:"+07:00"},{label:"Asia/Tomsk (GMT+07:00)",tzCode:"Asia/Tomsk",name:"(GMT+07:00) Tomsk, Seversk, Strezhevoy, Kolpashevo, Asino",utc:"+07:00"},{label:"Asia/Vientiane (GMT+07:00)",tzCode:"Asia/Vientiane",name:"(GMT+07:00) Vientiane, Pakse, Thakh\xE8k, Savannakhet, Luang Prabang",utc:"+07:00"},{label:"Indian/Christmas (GMT+07:00)",tzCode:"Indian/Christmas",name:"(GMT+07:00) Flying Fish Cove",utc:"+07:00"},{label:"Asia/Brunei (GMT+08:00)",tzCode:"Asia/Brunei",name:"(GMT+08:00) Bandar Seri Begawan, Kuala Belait, Seria, Tutong, Bangar",utc:"+08:00"},{label:"Asia/Choibalsan (GMT+08:00)",tzCode:"Asia/Choibalsan",name:"(GMT+08:00) Baruun-Urt, Choibalsan",utc:"+08:00"},{label:"Asia/Hong_Kong (GMT+08:00)",tzCode:"Asia/Hong_Kong",name:"(GMT+08:00) Hong Kong, Kowloon, Tsuen Wan, Yuen Long Kau Hui, Tung Chung",utc:"+08:00"},{label:"Asia/Irkutsk (GMT+08:00)",tzCode:"Asia/Irkutsk",name:"(GMT+08:00) Irkutsk, Ulan-Ude, Bratsk, Angarsk, Ust\u2019-Ilimsk",utc:"+08:00"},{label:"Asia/Kuala_Lumpur (GMT+08:00)",tzCode:"Asia/Kuala_Lumpur",name:"(GMT+08:00) Kota Bharu, Kuala Lumpur, Klang, Kampung Baru Subang, Johor Bahru",utc:"+08:00"},{label:"Asia/Kuching (GMT+08:00)",tzCode:"Asia/Kuching",name:"(GMT+08:00) Kuching, Kota Kinabalu, Sandakan, Tawau, Miri",utc:"+08:00"},{label:"Asia/Macau (GMT+08:00)",tzCode:"Asia/Macau",name:"(GMT+08:00) Macau",utc:"+08:00"},{label:"Asia/Makassar (GMT+08:00)",tzCode:"Asia/Makassar",name:"(GMT+08:00) Makassar, Denpasar, City of Balikpapan, Banjarmasin, Manado",utc:"+08:00"},{label:"Asia/Manila (GMT+08:00)",tzCode:"Asia/Manila",name:"(GMT+08:00) Quezon City, Manila, Caloocan City, Budta, Davao",utc:"+08:00"},{label:"Asia/Shanghai (GMT+08:00)",tzCode:"Asia/Shanghai",name:"(GMT+08:00) Shanghai, Beijing, Tianjin, Guangzhou, Shenzhen",utc:"+08:00"},{label:"Asia/Singapore (GMT+08:00)",tzCode:"Asia/Singapore",name:"(GMT+08:00) Singapore, Woodlands",utc:"+08:00"},{label:"Asia/Taipei (GMT+08:00)",tzCode:"Asia/Taipei",name:"(GMT+08:00) Taipei, Kaohsiung, Taichung, Tainan, Banqiao",utc:"+08:00"},{label:"Asia/Ulaanbaatar (GMT+08:00)",tzCode:"Asia/Ulaanbaatar",name:"(GMT+08:00) Ulan Bator, Erdenet, Darhan, Hovd, M\xF6r\xF6n",utc:"+08:00"},{label:"Australia/Perth (GMT+08:00)",tzCode:"Australia/Perth",name:"(GMT+08:00) Perth, Rockingham, Mandurah, Bunbury, Albany",utc:"+08:00"},{label:"Australia/Eucla (GMT+08:45)",tzCode:"Australia/Eucla",name:"(GMT+08:45) Eucla",utc:"+08:45"},{label:"Asia/Chita (GMT+09:00)",tzCode:"Asia/Chita",name:"(GMT+09:00) Chita, Krasnokamensk, Borzya, Petrovsk-Zabaykal\u2019skiy, Aginskoye",utc:"+09:00"},{label:"Asia/Dili (GMT+09:00)",tzCode:"Asia/Dili",name:"(GMT+09:00) Dili, Maliana, Suai, Likis\xE1, Aileu",utc:"+09:00"},{label:"Asia/Jayapura (GMT+09:00)",tzCode:"Asia/Jayapura",name:"(GMT+09:00) Ambon, Jayapura, Sorong, Ternate, Abepura",utc:"+09:00"},{label:"Asia/Khandyga (GMT+09:00)",tzCode:"Asia/Khandyga",name:"(GMT+09:00) Khandyga",utc:"+09:00"},{label:"Asia/Pyongyang (GMT+09:00)",tzCode:"Asia/Pyongyang",name:"(GMT+09:00) Pyongyang, Hamh\u016Dng, Namp\u2019o, Sunch\u2019\u014Fn, H\u016Dngnam",utc:"+09:00"},{label:"Asia/Seoul (GMT+09:00)",tzCode:"Asia/Seoul",name:"(GMT+09:00) Seoul, Busan, Incheon, Daegu, Daejeon",utc:"+09:00"},{label:"Asia/Tokyo (GMT+09:00)",tzCode:"Asia/Tokyo",name:"(GMT+09:00) Tokyo, Yokohama, Osaka, Nagoya, Sapporo",utc:"+09:00"},{label:"Asia/Yakutsk (GMT+09:00)",tzCode:"Asia/Yakutsk",name:"(GMT+09:00) Yakutsk, Blagoveshchensk, Belogorsk, Neryungri, Svobodnyy",utc:"+09:00"},{label:"Pacific/Palau (GMT+09:00)",tzCode:"Pacific/Palau",name:"(GMT+09:00) Koror, Koror Town, Kloulklubed, Ulimang, Mengellang",utc:"+09:00"},{label:"Australia/Adelaide (GMT+09:30)",tzCode:"Australia/Adelaide",name:"(GMT+09:30) Adelaide, Adelaide Hills, Mount Gambier, Morphett Vale, Gawler",utc:"+09:30"},{label:"Australia/Broken_Hill (GMT+09:30)",tzCode:"Australia/Broken_Hill",name:"(GMT+09:30) Broken Hill",utc:"+09:30"},{label:"Australia/Darwin (GMT+09:30)",tzCode:"Australia/Darwin",name:"(GMT+09:30) Darwin, Alice Springs, Palmerston, Howard Springs",utc:"+09:30"},{label:"Antarctica/DumontDUrville (GMT+10:00)",tzCode:"Antarctica/DumontDUrville",name:"(GMT+10:00) DumontDUrville",utc:"+10:00"},{label:"Antarctica/Macquarie (GMT+10:00)",tzCode:"Antarctica/Macquarie",name:"(GMT+10:00) Macquarie",utc:"+10:00"},{label:"Asia/Ust-Nera (GMT+10:00)",tzCode:"Asia/Ust-Nera",name:"(GMT+10:00) Ust-Nera",utc:"+10:00"},{label:"Asia/Vladivostok (GMT+10:00)",tzCode:"Asia/Vladivostok",name:"(GMT+10:00) Vladivostok, Khabarovsk, Khabarovsk Vtoroy, Komsomolsk-on-Amur, Ussuriysk",utc:"+10:00"},{label:"Australia/Brisbane (GMT+10:00)",tzCode:"Australia/Brisbane",name:"(GMT+10:00) Brisbane, Gold Coast, Logan City, Townsville, Cairns",utc:"+10:00"},{label:"Australia/Currie (GMT+10:00)",tzCode:"Australia/Currie",name:"(GMT+10:00) Currie",utc:"+10:00"},{label:"Australia/Hobart (GMT+10:00)",tzCode:"Australia/Hobart",name:"(GMT+10:00) Hobart, Launceston, Burnie, Devonport, Sandy Bay",utc:"+10:00"},{label:"Australia/Lindeman (GMT+10:00)",tzCode:"Australia/Lindeman",name:"(GMT+10:00) Lindeman",utc:"+10:00"},{label:"Australia/Melbourne (GMT+10:00)",tzCode:"Australia/Melbourne",name:"(GMT+10:00) Melbourne, Geelong, Bendigo, Ballarat, Melbourne City Centre",utc:"+10:00"},{label:"Australia/Sydney (GMT+10:00)",tzCode:"Australia/Sydney",name:"(GMT+10:00) Sydney, Canberra, Newcastle, Wollongong, Maitland",utc:"+10:00"},{label:"Pacific/Chuuk (GMT+10:00)",tzCode:"Pacific/Chuuk",name:"(GMT+10:00) Weno, Colonia",utc:"+10:00"},{label:"Pacific/GuamVillage (GMT+10:00)",tzCode:"Pacific/GuamVillage",name:"(GMT+10:00) Dededo Village, Yigo Village, Tamuning, Tamuning-Tumon-Harmon Village, Mangilao Village",utc:"+10:00"},{label:"Pacific/Port_Moresby (GMT+10:00)",tzCode:"Pacific/Port_Moresby",name:"(GMT+10:00) Port Moresby, Lae, Mount Hagen, Popondetta, Madang",utc:"+10:00"},{label:"Pacific/Saipan (GMT+10:00)",tzCode:"Pacific/Saipan",name:"(GMT+10:00) Saipan, San Jose Village",utc:"+10:00"},{label:"Australia/Lord_Howe (GMT+10:30)",tzCode:"Australia/Lord_Howe",name:"(GMT+10:30) Lord Howe",utc:"+10:30"},{label:"Antarctica/Casey (GMT+11:00)",tzCode:"Antarctica/Casey",name:"(GMT+11:00) Casey",utc:"+11:00"},{label:"Asia/Magadan (GMT+11:00)",tzCode:"Asia/Magadan",name:"(GMT+11:00) Magadan, Ust-Nera, Susuman, Ola",utc:"+11:00"},{label:"Asia/Sakhalin (GMT+11:00)",tzCode:"Asia/Sakhalin",name:"(GMT+11:00) Yuzhno-Sakhalinsk, Korsakov, Kholmsk, Okha, Nevel\u2019sk",utc:"+11:00"},{label:"Asia/Srednekolymsk (GMT+11:00)",tzCode:"Asia/Srednekolymsk",name:"(GMT+11:00) Srednekolymsk",utc:"+11:00"},{label:"Pacific/Bougainville (GMT+11:00)",tzCode:"Pacific/Bougainville",name:"(GMT+11:00) Arawa, Buka",utc:"+11:00"},{label:"Pacific/Efate (GMT+11:00)",tzCode:"Pacific/Efate",name:"(GMT+11:00) Port-Vila, Luganville, Isangel, Sola, Lakatoro",utc:"+11:00"},{label:"Pacific/Guadalcanal (GMT+11:00)",tzCode:"Pacific/Guadalcanal",name:"(GMT+11:00) Honiara, Malango, Auki, Gizo, Buala",utc:"+11:00"},{label:"Pacific/Kosrae (GMT+11:00)",tzCode:"Pacific/Kosrae",name:"(GMT+11:00) Tofol",utc:"+11:00"},{label:"Pacific/Norfolk (GMT+11:00)",tzCode:"Pacific/Norfolk",name:"(GMT+11:00) Kingston",utc:"+11:00"},{label:"Pacific/Noumea (GMT+11:00)",tzCode:"Pacific/Noumea",name:"(GMT+11:00) Noum\xE9a, Mont-Dore, Dumb\xE9a, Pa\xEFta, W\xE9",utc:"+11:00"},{label:"Pacific/Pohnpei (GMT+11:00)",tzCode:"Pacific/Pohnpei",name:"(GMT+11:00) Kolonia, Kolonia Town, Palikir - National Government Center",utc:"+11:00"},{label:"Antarctica/McMurdo (GMT+12:00)",tzCode:"Antarctica/McMurdo",name:"(GMT+12:00) McMurdo",utc:"+12:00"},{label:"Asia/Anadyr (GMT+12:00)",tzCode:"Asia/Anadyr",name:"(GMT+12:00) Anadyr, Bilibino",utc:"+12:00"},{label:"Asia/Kamchatka (GMT+12:00)",tzCode:"Asia/Kamchatka",name:"(GMT+12:00) Petropavlovsk-Kamchatsky, Yelizovo, Vilyuchinsk, Klyuchi, Mil\u2019kovo",utc:"+12:00"},{label:"Pacific/Auckland (GMT+12:00)",tzCode:"Pacific/Auckland",name:"(GMT+12:00) Auckland, Wellington, Christchurch, Manukau City, North Shore",utc:"+12:00"},{label:"Pacific/Fiji (GMT+12:00)",tzCode:"Pacific/Fiji",name:"(GMT+12:00) Suva, Lautoka, Nadi, Labasa, Ba",utc:"+12:00"},{label:"Pacific/Funafuti (GMT+12:00)",tzCode:"Pacific/Funafuti",name:"(GMT+12:00) Funafuti, Savave Village, Tanrake Village, Toga Village, Asau Village",utc:"+12:00"},{label:"Pacific/Kwajalein (GMT+12:00)",tzCode:"Pacific/Kwajalein",name:"(GMT+12:00) Ebaye, Jabat",utc:"+12:00"},{label:"Pacific/Majuro (GMT+12:00)",tzCode:"Pacific/Majuro",name:"(GMT+12:00) Majuro, Arno, Jabor, Wotje, Mili",utc:"+12:00"},{label:"Pacific/Nauru (GMT+12:00)",tzCode:"Pacific/Nauru",name:"(GMT+12:00) Yaren, Baiti, Anabar, Uaboe, Ijuw",utc:"+12:00"},{label:"Pacific/Tarawa (GMT+12:00)",tzCode:"Pacific/Tarawa",name:"(GMT+12:00) Tarawa, Betio Village, Bikenibeu Village",utc:"+12:00"},{label:"Pacific/Wake (GMT+12:00)",tzCode:"Pacific/Wake",name:"(GMT+12:00) Wake",utc:"+12:00"},{label:"Pacific/Wallis (GMT+12:00)",tzCode:"Pacific/Wallis",name:"(GMT+12:00) Mata-Utu, Leava, Alo",utc:"+12:00"},{label:"Pacific/Chatham (GMT+12:45)",tzCode:"Pacific/Chatham",name:"(GMT+12:45) Waitangi",utc:"+12:45"},{label:"Pacific/Apia (GMT+13:00)",tzCode:"Pacific/Apia",name:"(GMT+13:00) Apia, Asau, Mulifanua, Afega, Leulumoega",utc:"+13:00"},{label:"Pacific/Enderbury (GMT+13:00)",tzCode:"Pacific/Enderbury",name:"(GMT+13:00) Enderbury",utc:"+13:00"},{label:"Pacific/Fakaofo (GMT+13:00)",tzCode:"Pacific/Fakaofo",name:"(GMT+13:00) Atafu Village, Nukunonu, Fale old settlement",utc:"+13:00"},{label:"Pacific/Tongatapu (GMT+13:00)",tzCode:"Pacific/Tongatapu",name:"(GMT+13:00) Nuku\u2018alofa, Lapaha, Neiafu, Pangai, \u2018Ohonua",utc:"+13:00"},{label:"Pacific/Kiritimati (GMT+14:00)",tzCode:"Pacific/Kiritimati",name:"(GMT+14:00) Kiritimati",utc:"+14:00"}],Hu=Object.freeze({__proto__:null,default:ju}),Vu=Ru(Hu),mo=fo(function(t,e){var n=co&&co.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(e,"__esModule",{value:!0});const a=n(Vu);e.default=a.default});const Ga=[];function Uu(t,e){return{subscribe:da(t,e).subscribe}}function da(t,e=he){let n;const a=new Set;function r(h){if(Zt(t,h)&&(t=h,n)){const c=!Ga.length;for(const _ of a)_[1](),Ga.push(_,t);if(c){for(let _=0;_<Ga.length;_+=2)Ga[_][0](Ga[_+1]);Ga.length=0}}}function o(h){r(h(t))}function s(h,c=he){const _=[h,c];return a.add(_),a.size===1&&(n=e(r)||he),h(t),()=>{a.delete(_),a.size===0&&(n(),n=null)}}return{set:r,update:o,subscribe:s}}function Wu(t,e,n){const a=!Array.isArray(t),r=a?[t]:t,o=e.length<2;return Uu(n,s=>{let h=!1;const c=[];let _=0,y=he;const v=()=>{if(_)return;y();const E=e(a?c[0]:c,s);o?s(E):y=wa(E)?E:he},k=r.map((E,S)=>$r(E,N=>{c[S]=N,_&=~(1<<S),h&&v()},()=>{_|=1<<S}));return h=!0,v(),function(){vt(k),y()}})}function Ku(){return da({})}const ni=Ku();var qu=Object.defineProperty,Yu=Object.defineProperties,Zu=Object.getOwnPropertyDescriptors,ho=Object.getOwnPropertySymbols,Ju=Object.prototype.hasOwnProperty,Qu=Object.prototype.propertyIsEnumerable,_o=(t,e,n)=>e in t?qu(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Xu=(t,e)=>{for(var n in e||(e={}))Ju.call(e,n)&&_o(t,n,e[n]);if(ho)for(var n of ho(e))Qu.call(e,n)&&_o(t,n,e[n]);return t},$u=(t,e)=>Yu(t,Zu(e));async function ln(t){var e;if(!t.ok){const n=await t.json().then(o=>o),a=((e=n==null?void 0:n.response)==null?void 0:e.error)||(n==null?void 0:n.message),r=new Error(a);return r.name=n.name,Promise.reject({message:r,statusCode:t.status})}return t.json()}function sn(t={component_id:""}){return{method:t.method||"GET",headers:{Accept:"application/json","Content-Type":"application/json","X-Component-Id":t.component_id||"","X-Access-Token":t.access_token||""},body:t.body?JSON.stringify(t.body):void 0}}function Tn(t,e){throw console.error(e),ni.update(n=>$u(Xu({},n),{[t]:e})),e}const go={"001":"","002":"ireland-","003":"canada-"};function un(t){let e="";if(t.substring(3,4)==="-"){const a=t.substring(0,3);typeof go[a]!="undefined"&&(e=go[a])}return`https://${e}web-components.nylas.com/middleware`}function za(t){}async function ec(t,e){return fetch(`${un(e.component_id||"")}/agenda/events`,sn({method:"POST",component_id:e.component_id,access_token:e.access_token,body:t})).then(n=>ln(n)).then(n=>n.response)}const tc=async(t,e)=>await fetch(`${un(t.component_id)}/contacts/${e}/picture`,sn({component_id:t.component_id,access_token:t.access_token})).then(n=>ln(n)).then(n=>n.response).catch(n=>Tn(t.component_id,n));var nc=Object.defineProperty,ac=Object.defineProperties,ic=Object.getOwnPropertyDescriptors,bo=Object.getOwnPropertySymbols,rc=Object.prototype.hasOwnProperty,oc=Object.prototype.propertyIsEnumerable,yo=(t,e,n)=>e in t?nc(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,po=(t,e)=>{for(var n in e||(e={}))rc.call(e,n)&&yo(t,n,e[n]);if(bo)for(var n of bo(e))oc.call(e,n)&&yo(t,n,e[n]);return t},vo=(t,e)=>ac(t,ic(e));const To=(t,e,n)=>{if(t.thread_ids){const r=t.thread_ids.slice(n,n+e);return Promise.all(r.map(async o=>{const s=`${un(t.component_id)}/threads/${o}?view=expanded`;return await fetch(s,sn(t)).then(h=>ln(h)).then(h=>h.response).then(h=>vo(po({},h),{messages:h.messages.filter(c=>c.from.length!==0||c.to.length!==0)})).catch(h=>Tn(t.component_id,h))}))}let a=`${un(t.component_id)}/threads?view=expanded&not_in=trash&limit=${e}&offset=${n}`;return t.query&&Object.entries(t.query).forEach(r=>a=a.concat(`&${r[0]}=${r[1]}`)),fetch(a,sn(t)).then(r=>ln(r)).then(r=>r.response).then(r=>r.map(o=>vo(po({},o),{messages:o.messages.filter(s=>s.from.length!==0||s.to.length!==0)}))).catch(r=>Tn(t.component_id,r))};function ko(t){let e=`${un(t.component_id)}/threads?view=expanded&not_in=trash&view=count`;return t.query&&Object.entries(t.query).forEach(n=>e=e.concat(`&${n[0]}=${n[1]}`)),t.keywordToSearch&&(e+=`&q=${t.keywordToSearch}`),fetch(e,sn(t)).then(n=>ln(n)).then(n=>n.response.count)}const lc=t=>{const e=`${un(t.component_id)}/threads/search?q=${t.keywordToSearch}&view=expanded&limit=${t.query.limit}&offset=${t.query.offset}`;return fetch(e,sn(t)).then(async n=>ln(n)).then(n=>n.response).catch(n=>Tn(t.component_id,n))},sc=(t,e)=>fetch(`${un(t.component_id)}/threads/${e.id}`,sn({method:"PUT",component_id:t.component_id,access_token:t.access_token,body:{unread:e.unread,starred:e.starred,folder_id:e.folder_id,label_ids:e.label_ids}})).then(n=>ln(n)).then(n=>n.response).catch(n=>Tn(t.component_id,n)),uc=async(t,e)=>await fetch(`${un(t)}/manifest`,sn({access_token:e,component_id:t})).then(ln).then(n=>n.component.theming).catch(n=>Tn(t,n)),cc=async(t,e,n)=>fetch(`${un(t)}/component`,sn({method:"PUT",component_id:t,access_token:n,body:{settings:e}})).then(a=>ln(a)).then(a=>a.response),fc=async(t,e,n)=>await fetch(`${un(t)}/send`,sn({method:"POST",component_id:t,access_token:n,body:e})).then(a=>ln(a)).then(a=>a.response).catch(a=>Tn(t,a));var dc=Object.defineProperty,Mo=Object.getOwnPropertySymbols,mc=Object.prototype.hasOwnProperty,hc=Object.prototype.propertyIsEnumerable,wo=(t,e,n)=>e in t?dc(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Ao=(t,e)=>{for(var n in e||(e={}))mc.call(e,n)&&wo(t,n,e[n]);if(Mo)for(var n of Mo(e))hc.call(e,n)&&wo(t,n,e[n]);return t};const _c=async t=>fetch(`${un(t.component_id)}/calendars/availability`,sn({method:"POST",component_id:t.component_id,access_token:t.access_token,body:t.body})).then(async e=>{const n=await ln(e);return n.response.time_slots=n.response.time_slots.map(a=>(a.start_time=a.start||0,a.end_time=a.end||0,delete a.start,delete a.end,a)),n.response}).catch(e=>Tn(t.component_id,e)),gc=async t=>fetch(`${un(t.component_id)}/calendars/availability/consecutive`,sn({method:"POST",component_id:t.component_id,access_token:t.access_token,body:t.body})).then(async e=>{var n;const r=((n=(await ln(e)).response)==null?void 0:n.map(h=>(h=h.map(c=>(c.start_time=new Date(c.start_time*1e3),c.end_time=new Date(c.end_time*1e3),c)),h)))||[],o=bc(r,t.body.events);return yc(o)}).catch(e=>Tn(t.component_id,e));function bc(t,e){return t.map(n=>n.map(a=>Ao(Ao({},a),e.find(r=>r.participantEmails.length===a.emails.length&&r.participantEmails.every(o=>a.emails.includes(o))))))}function yc(t){const e=new Set;return t.filter(n=>{const a=`${n[0].start_time}_${n[n.length-1].end_time}`;return e.has(a)?!1:(e.add(a),!0)})}var pc=Object.defineProperty,So=Object.getOwnPropertySymbols,vc=Object.prototype.hasOwnProperty,Tc=Object.prototype.propertyIsEnumerable,Co=(t,e,n)=>e in t?pc(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,kc=(t,e)=>{for(var n in e||(e={}))vc.call(e,n)&&Co(t,n,e[n]);if(So)for(var n of So(e))Tc.call(e,n)&&Co(t,n,e[n]);return t};function Mc(){const t=(n,a)=>{var r,o;const s=JSON.parse(a),h=kc({},s);if(delete h.forceReload,a=JSON.stringify(h),!(!s.component_id||!((r=s==null?void 0:s.body)==null?void 0:r.start_time)||!((o=s==null?void 0:s.body)==null?void 0:o.end_time))){if(!n[a]||s.forceReload){const c=_c(s);e.update(_=>(_[a]=c,_)),n[a]=c}return n[a]}},e=da(new Proxy({},{get:t}));return e}const wc=Mc();function Ac(){const t=(n,a)=>{var r,o;const s=JSON.parse(a);if(!(!s.component_id||!((r=s==null?void 0:s.body)==null?void 0:r.start_time)||!((o=s==null?void 0:s.body)==null?void 0:o.end_time))){if(!n[a]){const h=gc(s);e.update(c=>(c[a]=h,c)),n[a]=h}return n[a]}},e=da(new Proxy({},{get:t}));return e}const Sc=Ac(),ar={};function Cc(){const{subscribe:t,set:e}=da({});return{subscribe:t,getContactAvatar:async(n,a,r=!1)=>{if(!ar[a]||r){const o=await tc(n,a).then(s=>s).catch(()=>"");o&&(ar[a]=o)}return ar[a]},reset:()=>e({})}}const Gc=Cc();var zc=Object.defineProperty,Go=Object.getOwnPropertySymbols,Ec=Object.prototype.hasOwnProperty,Oc=Object.prototype.propertyIsEnumerable,zo=(t,e,n)=>e in t?zc(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,ma=(t,e)=>{for(var n in e||(e={}))Ec.call(e,n)&&zo(t,n,e[n]);if(Go)for(var n of Go(e))Oc.call(e,n)&&zo(t,n,e[n]);return t};async function Eo(t){const e=[];for(let n=0;n<t;n++)e.push({isLoaded:!1,threads:[]});return e}function Dc(){const{subscribe:t,set:e,update:n}=da({});let a={},r;return{subscribe:t,set:e,getThreads:async(o,s,h,c=!1)=>{const _=JSON.stringify(o);if(!o.component_id&&!o.access_token)return[];if(r===void 0||c){const y=o.thread_ids?o.thread_ids.length:await ko(o).catch(za);y&&(r=y)}if(!Array.isArray(a[_])||c){const y=Math.ceil(r/h);a[_]=await Eo(y)}if(typeof a[_][s]=="undefined")return[];if(!a[_][s].isLoaded){const y=await To(o,h,s*h).catch(za);y&&(a[_][s].threads=y,a[_][s].isLoaded=!0)}return n(y=>(y[_]=a[_],ma({},y))),a[_][s].threads},getNumberOfItems:async o=>{if(!o.component_id&&!o.access_token)return 0;if(typeof r=="undefined"){const s=await ko(o).catch(za);s&&(r=s)}return r},getThreadsWithSearchKeyword:async(o,s=!1)=>{if(!o.component_id&&!o.access_token)return[];const h=JSON.stringify(o);if((!Array.isArray(a[h])||s)&&(a[h]=await Eo(1)),!a[h][0].isLoaded||s){const c=await lc(o).catch(za);c&&(a[h][0].threads=c,a[h][0].isLoaded=!0)}return n(c=>(c[h]=a[h],ma({},c))),a[h][0].threads},updateThread:async(o,s,h,c,_)=>{const y=await sc(o,h).catch(za);if(!a[s][c].isLoaded){const v=await To(JSON.parse(s),_,c*_).catch(za);v&&(a[s][c].threads=v,a[s][c].isLoaded=!0)}return a[s][c].threads=a[s][c].threads.map(v=>(y&&v.id===y.id&&(v=Object.assign(v,y)),v)),n(v=>(v[s]=a[s],ma({},v))),a[s][c].threads},updateThreadSelection:(o,s,h)=>{const c=a[o][s].threads;if(h){const _=c.find(y=>y.id===h);_&&(_.selected=!_.selected)}else{const _=c.some(y=>y.selected);for(const y of c)y.selected=!_}return n(_=>(_[o]=a[o],ma({},_))),a[o][s].threads},reset:()=>{a={},e({})},hydrateMessageInThread:(o,s,h)=>{var c,_,y;const v=JSON.stringify(s),k=(_=(c=a[v][h])==null?void 0:c.threads)==null?void 0:_.find(E=>E.id===o.thread_id);if(k){const E=(y=k.messages)==null?void 0:y.find(S=>S.id===o.id);E?(E.body=o.body,n(S=>{if(o.thread_id){let N=S[v][h].threads.find(w=>w.id===k.id);N&&(N=JSON.parse(JSON.stringify(k)))}return ma({},S)})):n(S=>{if(o.thread_id){let N=S[v][h].threads.find(w=>w.id===k.id);if(N){const w=k.messages;w.push(o),k.messages=w,k.snippet=o.snippet,k.drafts=k.drafts.filter(M=>M.id!==o.id),N=JSON.parse(JSON.stringify(k))}}return ma({},S)})}return a[v][h].threads},hydrateDraftInThread:(o,s,h)=>{var c,_,y;const v=JSON.stringify(s),k=(_=(c=a[v][h])==null?void 0:c.threads)==null?void 0:_.find(E=>E.id===o.thread_id);if(k){const E=(y=k.drafts)==null?void 0:y.find(S=>S.id===o.id);if(o.thread_id){if(E)Object.assign(E,o);else{const S=k.drafts;S.push(o),k.drafts=S}n(S=>{let N=S[v][h].threads.find(w=>w.id===k.id);return N&&(N=JSON.parse(JSON.stringify(k))),ma({},S)})}}return a[v][h].threads}}}const Nc=Dc();Wu(Nc,t=>{const e={};return Object.entries(t).forEach(([n,a])=>e[n]=a.map(r=>r.threads).flat()),e});function Ic(){const t=(n,a)=>{const r=JSON.parse(a);if(!!r.component_id){if(!n[a]){const o=uc(r.component_id,r.access_token);e.update(s=>(s[a]=o,s)),n[a]=o}return n[a]}},e=da(new Proxy({},{get:t}));return e}const ir=Ic();function Oo(t){let e,n,a,r,o,s;function h(y,v){if(y[2]==="HostDomainNotAllowedError")return Pc;if(y[2]==="IncompatibleProperties")return Lc}let c=h(t),_=c&&c(t);return{c(){var y,v;e=b("div"),_&&_.c(),n=O(),a=b("span"),a.textContent="Debug info:",r=O(),o=b("textarea"),p(a,"class","details"),p(o,"class","details"),o.readOnly=!0,o.value=s=`
      `+t[2]+": "+t[0]+`
      `+((v=(y=t[1].message)==null?void 0:y.message)!=null?v:"")+`
    `,p(e,"class","message-container")},m(y,v){Y(y,e,v),_&&_.m(e,null),m(e,n),m(e,a),m(e,r),m(e,o)},p(y,v){var k,E;c===(c=h(y))&&_?_.p(y,v):(_&&_.d(1),_=c&&c(y),_&&(_.c(),_.m(e,n))),v&7&&s!==(s=`
      `+y[2]+": "+y[0]+`
      `+((E=(k=y[1].message)==null?void 0:k.message)!=null?E:"")+`
    `)&&(o.value=s)},d(y){y&&W(e),_&&_.d()}}}function Lc(t){let e;return{c(){e=b("h3"),e.textContent="Your component properties do not work with each other."},m(n,a){Y(n,e,a)},p:he,d(n){n&&W(e)}}}function Pc(t){let e,n,a,r,o,s;return{c(){e=b("h3"),n=ge(`You are trying to access this component from\xA0
        `),a=b("code"),a.textContent=`${window.location.hostname}`,r=ge(`. The component's settings do not
        allow access from this domain.`),o=O(),s=b("h4"),s.innerHTML=`The list of allowed domains can be modified in your\xA0
        <a href="https://dashboard.nylas.com">Dashboard</a>.`},m(h,c){Y(h,e,c),m(e,n),m(e,a),m(e,r),Y(h,o,c),Y(h,s,c)},p:he,d(h){h&&W(e),h&&W(o),h&&W(s)}}}function Fc(t){let e,n=t[2]&&t[3]&&Oo(t);return{c(){n&&n.c(),e=Aa(),this.c=he},m(a,r){n&&n.m(a,r),Y(a,e,r)},p(a,[r]){a[2]&&a[3]?n?n.p(a,r):(n=Oo(a),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null)},i:he,o:he,d(a){n&&n.d(a),a&&W(e)}}}function Bc(t,e,n){let a;Fn(t,ni,k=>n(8,a=k));var r,o,s,h;let{id:c}=e,_,y;const v=window.location.href.includes("localhost")||window.location.href.includes("127.0.0.1");return t.$$set=k=>{"id"in k&&n(0,c=k.id)},t.$$.update=()=>{t.$$.dirty&499&&(n(1,_=n(4,r=a[c])!==null&&r!==void 0?r:{name:""}),n(2,y=n(7,h=n(5,o=_.name)!==null&&o!==void 0?o:n(6,s=_.message)===null||s===void 0?void 0:s.name)!==null&&h!==void 0?h:""))},[c,_,y,v,r,o,s,h,a]}class Rc extends Vn{constructor(e){super();this.shadowRoot.innerHTML=`<style>.message-container{background:#fff6f6;border-radius:5px;box-shadow:0 0 0 1px #aa92a0 inset, 0 0 0 0 transparent;color:#9f3a38;font-size:1.25rem;padding:10px;margin:0 auto;transition:opacity 500ms ease, color 500ms ease,
      background-color 500ms ease, box-shadow 500ms ease,
      -webkit-box-shadow 500ms ease}.message-container *:focus{outline:5px auto Highlight;outline:5px auto -webkit-focus-ring-color}.details{color:#494949;font-size:0.75rem;width:100%}</style>`,Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},Bc,Fc,Qr,{id:0},null),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["id"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),X()}}customElements.define("nylas-error",Rc);var Ea=fo(function(t,e){Object.defineProperty(e,"__esModule",{value:!0});function n(l,d){for(var u=0;u<d.length;u++){var i=d[u];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(l,i.key,i)}}function a(l,d,u){return d&&n(l.prototype,d),u&&n(l,u),l}function r(){return r=Object.assign||function(l){for(var d=1;d<arguments.length;d++){var u=arguments[d];for(var i in u)Object.prototype.hasOwnProperty.call(u,i)&&(l[i]=u[i])}return l},r.apply(this,arguments)}function o(l,d){l.prototype=Object.create(d.prototype),l.prototype.constructor=l,h(l,d)}function s(l){return s=Object.setPrototypeOf?Object.getPrototypeOf:function(u){return u.__proto__||Object.getPrototypeOf(u)},s(l)}function h(l,d){return h=Object.setPrototypeOf||function(i,f){return i.__proto__=f,i},h(l,d)}function c(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(l){return!1}}function _(l,d,u){return c()?_=Reflect.construct:_=function(f,g,T){var A=[null];A.push.apply(A,g);var D=Function.bind.apply(f,A),x=new D;return T&&h(x,T.prototype),x},_.apply(null,arguments)}function y(l){return Function.toString.call(l).indexOf("[native code]")!==-1}function v(l){var d=typeof Map=="function"?new Map:void 0;return v=function(i){if(i===null||!y(i))return i;if(typeof i!="function")throw new TypeError("Super expression must either be null or a function");if(typeof d!="undefined"){if(d.has(i))return d.get(i);d.set(i,f)}function f(){return _(i,arguments,s(this).constructor)}return f.prototype=Object.create(i.prototype,{constructor:{value:f,enumerable:!1,writable:!0,configurable:!0}}),h(f,i)},v(l)}function k(l,d){if(l==null)return{};var u={},i=Object.keys(l),f,g;for(g=0;g<i.length;g++)f=i[g],!(d.indexOf(f)>=0)&&(u[f]=l[f]);return u}function E(l,d){if(!!l){if(typeof l=="string")return S(l,d);var u=Object.prototype.toString.call(l).slice(8,-1);if(u==="Object"&&l.constructor&&(u=l.constructor.name),u==="Map"||u==="Set")return Array.from(l);if(u==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u))return S(l,d)}}function S(l,d){(d==null||d>l.length)&&(d=l.length);for(var u=0,i=new Array(d);u<d;u++)i[u]=l[u];return i}function N(l,d){var u=typeof Symbol!="undefined"&&l[Symbol.iterator]||l["@@iterator"];if(u)return(u=u.call(l)).next.bind(u);if(Array.isArray(l)||(u=E(l))||d&&l&&typeof l.length=="number"){u&&(l=u);var i=0;return function(){return i>=l.length?{done:!0}:{done:!1,value:l[i++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var w=function(l){o(d,l);function d(){return l.apply(this,arguments)||this}return d}(v(Error)),M=function(l){o(d,l);function d(u){return l.call(this,"Invalid DateTime: "+u.toMessage())||this}return d}(w),G=function(l){o(d,l);function d(u){return l.call(this,"Invalid Interval: "+u.toMessage())||this}return d}(w),I=function(l){o(d,l);function d(u){return l.call(this,"Invalid Duration: "+u.toMessage())||this}return d}(w),U=function(l){o(d,l);function d(){return l.apply(this,arguments)||this}return d}(w),B=function(l){o(d,l);function d(u){return l.call(this,"Invalid unit "+u)||this}return d}(w),z=function(l){o(d,l);function d(){return l.apply(this,arguments)||this}return d}(w),V=function(l){o(d,l);function d(){return l.call(this,"Zone is an abstract class")||this}return d}(w),L="numeric",re="short",K="long",H={year:L,month:L,day:L},Z={year:L,month:re,day:L},de={year:L,month:re,day:L,weekday:re},ke={year:L,month:K,day:L},oe={year:L,month:K,day:L,weekday:K},j={hour:L,minute:L},q={hour:L,minute:L,second:L},ce={hour:L,minute:L,second:L,timeZoneName:re},Ge={hour:L,minute:L,second:L,timeZoneName:K},Pe={hour:L,minute:L,hourCycle:"h23"},_e={hour:L,minute:L,second:L,hourCycle:"h23"},ze={hour:L,minute:L,second:L,hourCycle:"h23",timeZoneName:re},Be={hour:L,minute:L,second:L,hourCycle:"h23",timeZoneName:K},F={year:L,month:L,day:L,hour:L,minute:L},le={year:L,month:L,day:L,hour:L,minute:L,second:L},se={year:L,month:re,day:L,hour:L,minute:L},ye={year:L,month:re,day:L,hour:L,minute:L,second:L},ue={year:L,month:re,day:L,weekday:re,hour:L,minute:L},ie={year:L,month:K,day:L,hour:L,minute:L,timeZoneName:re},be={year:L,month:K,day:L,hour:L,minute:L,second:L,timeZoneName:re},Ce={year:L,month:K,day:L,weekday:K,hour:L,minute:L,timeZoneName:K},Q={year:L,month:K,day:L,weekday:K,hour:L,minute:L,second:L,timeZoneName:K};function P(l){return typeof l=="undefined"}function fe(l){return typeof l=="number"}function pe(l){return typeof l=="number"&&l%1==0}function Me(l){return typeof l=="string"}function Ze(l){return Object.prototype.toString.call(l)==="[object Date]"}function Je(){try{return typeof Intl!="undefined"&&!!Intl.RelativeTimeFormat}catch(l){return!1}}function it(l){return Array.isArray(l)?l:[l]}function Ue(l,d,u){if(l.length!==0)return l.reduce(function(i,f){var g=[d(f),f];return i&&u(i[0],g[0])===i[0]?i:g},null)[1]}function lt(l,d){return d.reduce(function(u,i){return u[i]=l[i],u},{})}function dt(l,d){return Object.prototype.hasOwnProperty.call(l,d)}function Te(l,d,u){return pe(l)&&l>=d&&l<=u}function Ke(l,d){return l-d*Math.floor(l/d)}function Fe(l,d){d===void 0&&(d=2);var u=l<0,i;return u?i="-"+(""+-l).padStart(d,"0"):i=(""+l).padStart(d,"0"),i}function We(l){if(!(P(l)||l===null||l===""))return parseInt(l,10)}function ct(l){if(!(P(l)||l===null||l===""))return parseFloat(l)}function J(l){if(!(P(l)||l===null||l==="")){var d=parseFloat("0."+l)*1e3;return Math.floor(d)}}function Qe(l,d,u){u===void 0&&(u=!1);var i=Math.pow(10,d),f=u?Math.trunc:Math.round;return f(l*i)/i}function Ve(l){return l%4==0&&(l%100!=0||l%400==0)}function Tt(l){return Ve(l)?366:365}function mt(l,d){var u=Ke(d-1,12)+1,i=l+(d-u)/12;return u===2?Ve(i)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][u-1]}function Ot(l){var d=Date.UTC(l.year,l.month-1,l.day,l.hour,l.minute,l.second,l.millisecond);return l.year<100&&l.year>=0&&(d=new Date(d),d.setUTCFullYear(d.getUTCFullYear()-1900)),+d}function pt(l){var d=(l+Math.floor(l/4)-Math.floor(l/100)+Math.floor(l/400))%7,u=l-1,i=(u+Math.floor(u/4)-Math.floor(u/100)+Math.floor(u/400))%7;return d===4||i===3?53:52}function wt(l){return l>99?l:l>60?1900+l:2e3+l}function Ft(l,d,u,i){i===void 0&&(i=null);var f=new Date(l),g={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};i&&(g.timeZone=i);var T=r({timeZoneName:d},g),A=new Intl.DateTimeFormat(u,T).formatToParts(f).find(function(D){return D.type.toLowerCase()==="timezonename"});return A?A.value:null}function gt(l,d){var u=parseInt(l,10);Number.isNaN(u)&&(u=0);var i=parseInt(d,10)||0,f=u<0||Object.is(u,-0)?-i:i;return u*60+f}function Yt(l){var d=Number(l);if(typeof l=="boolean"||l===""||Number.isNaN(d))throw new z("Invalid unit value "+l);return d}function At(l,d){var u={};for(var i in l)if(dt(l,i)){var f=l[i];if(f==null)continue;u[d(i)]=Yt(f)}return u}function Ut(l,d){var u=Math.trunc(Math.abs(l/60)),i=Math.trunc(Math.abs(l%60)),f=l>=0?"+":"-";switch(d){case"short":return""+f+Fe(u,2)+":"+Fe(i,2);case"narrow":return""+f+u+(i>0?":"+i:"");case"techie":return""+f+Fe(u,2)+Fe(i,2);default:throw new RangeError("Value format "+d+" is out of range for property format")}}function Dt(l){return lt(l,["hour","minute","second","millisecond"])}var Nt=/[A-Za-z_+-]{1,256}(:?\/[A-Za-z0-9_+-]{1,256}(\/[A-Za-z0-9_+-]{1,256})?)?/,Xe=["January","February","March","April","May","June","July","August","September","October","November","December"],Wt=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],fn=["J","F","M","A","M","J","J","A","S","O","N","D"];function nn(l){switch(l){case"narrow":return[].concat(fn);case"short":return[].concat(Wt);case"long":return[].concat(Xe);case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null}}var dn=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],mn=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],Dn=["M","T","W","T","F","S","S"];function hn(l){switch(l){case"narrow":return[].concat(Dn);case"short":return[].concat(mn);case"long":return[].concat(dn);case"numeric":return["1","2","3","4","5","6","7"];default:return null}}var Bt=["AM","PM"],Nn=["Before Christ","Anno Domini"],tt=["BC","AD"],_n=["B","A"];function Rt(l){switch(l){case"narrow":return[].concat(_n);case"short":return[].concat(tt);case"long":return[].concat(Nn);default:return null}}function In(l){return Bt[l.hour<12?0:1]}function xt(l,d){return hn(d)[l.weekday-1]}function ht(l,d){return nn(d)[l.month-1]}function an(l,d){return Rt(d)[l.year<0?0:1]}function bt(l,d,u,i){u===void 0&&(u="always"),i===void 0&&(i=!1);var f={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},g=["hours","minutes","seconds"].indexOf(l)===-1;if(u==="auto"&&g){var T=l==="days";switch(d){case 1:return T?"tomorrow":"next "+f[l][0];case-1:return T?"yesterday":"last "+f[l][0];case 0:return T?"today":"this "+f[l][0]}}var A=Object.is(d,-0)||d<0,D=Math.abs(d),x=D===1,ae=f[l],ee=i?x?ae[1]:ae[2]||ae[1]:x?f[l][0]:l;return A?D+" "+ee+" ago":"in "+D+" "+ee}function Ae(l,d){for(var u="",i=N(l),f;!(f=i()).done;){var g=f.value;g.literal?u+=g.val:u+=d(g.val)}return u}var rt={D:H,DD:Z,DDD:ke,DDDD:oe,t:j,tt:q,ttt:ce,tttt:Ge,T:Pe,TT:_e,TTT:ze,TTTT:Be,f:F,ff:se,fff:ie,ffff:Ce,F:le,FF:ye,FFF:be,FFFF:Q},De=function(){l.create=function(i,f){return f===void 0&&(f={}),new l(i,f)},l.parseFormat=function(i){for(var f=null,g="",T=!1,A=[],D=0;D<i.length;D++){var x=i.charAt(D);x==="'"?(g.length>0&&A.push({literal:T,val:g}),f=null,g="",T=!T):T||x===f?g+=x:(g.length>0&&A.push({literal:!1,val:g}),g=x,f=x)}return g.length>0&&A.push({literal:T,val:g}),A},l.macroTokenToFormatOpts=function(i){return rt[i]};function l(u,i){this.opts=i,this.loc=u,this.systemLoc=null}var d=l.prototype;return d.formatWithSystemDefault=function(i,f){this.systemLoc===null&&(this.systemLoc=this.loc.redefaultToSystem());var g=this.systemLoc.dtFormatter(i,r({},this.opts,f));return g.format()},d.formatDateTime=function(i,f){f===void 0&&(f={});var g=this.loc.dtFormatter(i,r({},this.opts,f));return g.format()},d.formatDateTimeParts=function(i,f){f===void 0&&(f={});var g=this.loc.dtFormatter(i,r({},this.opts,f));return g.formatToParts()},d.resolvedOptions=function(i,f){f===void 0&&(f={});var g=this.loc.dtFormatter(i,r({},this.opts,f));return g.resolvedOptions()},d.num=function(i,f){if(f===void 0&&(f=0),this.opts.forceSimple)return Fe(i,f);var g=r({},this.opts);return f>0&&(g.padTo=f),this.loc.numberFormatter(g).format(i)},d.formatDateTimeFromString=function(i,f){var g=this,T=this.loc.listingMode()==="en",A=this.loc.outputCalendar&&this.loc.outputCalendar!=="gregory",D=function(Oe,Ht){return g.loc.extract(i,Oe,Ht)},x=function(Oe){return i.isOffsetFixed&&i.offset===0&&Oe.allowZ?"Z":i.isValid?i.zone.formatOffset(i.ts,Oe.format):""},ae=function(){return T?In(i):D({hour:"numeric",hourCycle:"h12"},"dayperiod")},ee=function(Oe,Ht){return T?ht(i,Oe):D(Ht?{month:Oe}:{month:Oe,day:"numeric"},"month")},ne=function(Oe,Ht){return T?xt(i,Oe):D(Ht?{weekday:Oe}:{weekday:Oe,month:"long",day:"numeric"},"weekday")},ve=function(Oe){var Ht=l.macroTokenToFormatOpts(Oe);return Ht?g.formatWithSystemDefault(i,Ht):Oe},Ne=function(Oe){return T?an(i,Oe):D({era:Oe},"era")},at=function(Oe){switch(Oe){case"S":return g.num(i.millisecond);case"u":case"SSS":return g.num(i.millisecond,3);case"s":return g.num(i.second);case"ss":return g.num(i.second,2);case"uu":return g.num(Math.floor(i.millisecond/10),2);case"uuu":return g.num(Math.floor(i.millisecond/100));case"m":return g.num(i.minute);case"mm":return g.num(i.minute,2);case"h":return g.num(i.hour%12==0?12:i.hour%12);case"hh":return g.num(i.hour%12==0?12:i.hour%12,2);case"H":return g.num(i.hour);case"HH":return g.num(i.hour,2);case"Z":return x({format:"narrow",allowZ:g.opts.allowZ});case"ZZ":return x({format:"short",allowZ:g.opts.allowZ});case"ZZZ":return x({format:"techie",allowZ:g.opts.allowZ});case"ZZZZ":return i.zone.offsetName(i.ts,{format:"short",locale:g.loc.locale});case"ZZZZZ":return i.zone.offsetName(i.ts,{format:"long",locale:g.loc.locale});case"z":return i.zoneName;case"a":return ae();case"d":return A?D({day:"numeric"},"day"):g.num(i.day);case"dd":return A?D({day:"2-digit"},"day"):g.num(i.day,2);case"c":return g.num(i.weekday);case"ccc":return ne("short",!0);case"cccc":return ne("long",!0);case"ccccc":return ne("narrow",!0);case"E":return g.num(i.weekday);case"EEE":return ne("short",!1);case"EEEE":return ne("long",!1);case"EEEEE":return ne("narrow",!1);case"L":return A?D({month:"numeric",day:"numeric"},"month"):g.num(i.month);case"LL":return A?D({month:"2-digit",day:"numeric"},"month"):g.num(i.month,2);case"LLL":return ee("short",!0);case"LLLL":return ee("long",!0);case"LLLLL":return ee("narrow",!0);case"M":return A?D({month:"numeric"},"month"):g.num(i.month);case"MM":return A?D({month:"2-digit"},"month"):g.num(i.month,2);case"MMM":return ee("short",!1);case"MMMM":return ee("long",!1);case"MMMMM":return ee("narrow",!1);case"y":return A?D({year:"numeric"},"year"):g.num(i.year);case"yy":return A?D({year:"2-digit"},"year"):g.num(i.year.toString().slice(-2),2);case"yyyy":return A?D({year:"numeric"},"year"):g.num(i.year,4);case"yyyyyy":return A?D({year:"numeric"},"year"):g.num(i.year,6);case"G":return Ne("short");case"GG":return Ne("long");case"GGGGG":return Ne("narrow");case"kk":return g.num(i.weekYear.toString().slice(-2),2);case"kkkk":return g.num(i.weekYear,4);case"W":return g.num(i.weekNumber);case"WW":return g.num(i.weekNumber,2);case"o":return g.num(i.ordinal);case"ooo":return g.num(i.ordinal,3);case"q":return g.num(i.quarter);case"qq":return g.num(i.quarter,2);case"X":return g.num(Math.floor(i.ts/1e3));case"x":return g.num(i.ts);default:return ve(Oe)}};return Ae(l.parseFormat(f),at)},d.formatDurationFromString=function(i,f){var g=this,T=function(ne){switch(ne[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"M":return"month";case"y":return"year";default:return null}},A=function(ne){return function(ve){var Ne=T(ve);return Ne?g.num(ne.get(Ne),ve.length):ve}},D=l.parseFormat(f),x=D.reduce(function(ee,ne){var ve=ne.literal,Ne=ne.val;return ve?ee:ee.concat(Ne)},[]),ae=i.shiftTo.apply(i,x.map(T).filter(function(ee){return ee}));return Ae(D,A(ae))},l}(),kt=function(){function l(u,i){this.reason=u,this.explanation=i}var d=l.prototype;return d.toMessage=function(){return this.explanation?this.reason+": "+this.explanation:this.reason},l}(),Ln=function(){function l(){}var d=l.prototype;return d.offsetName=function(i,f){throw new V},d.formatOffset=function(i,f){throw new V},d.offset=function(i){throw new V},d.equals=function(i){throw new V},a(l,[{key:"type",get:function(){throw new V}},{key:"name",get:function(){throw new V}},{key:"isUniversal",get:function(){throw new V}},{key:"isValid",get:function(){throw new V}}]),l}(),ya=null,qn=function(l){o(d,l);function d(){return l.apply(this,arguments)||this}var u=d.prototype;return u.offsetName=function(f,g){var T=g.format,A=g.locale;return Ft(f,T,A)},u.formatOffset=function(f,g){return Ut(this.offset(f),g)},u.offset=function(f){return-new Date(f).getTimezoneOffset()},u.equals=function(f){return f.type==="system"},a(d,[{key:"type",get:function(){return"system"}},{key:"name",get:function(){return new Intl.DateTimeFormat().resolvedOptions().timeZone}},{key:"isUniversal",get:function(){return!1}},{key:"isValid",get:function(){return!0}}],[{key:"instance",get:function(){return ya===null&&(ya=new d),ya}}]),d}(Ln),Ra=RegExp("^"+Nt.source+"$"),Yn={};function xa(l){return Yn[l]||(Yn[l]=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:l,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"})),Yn[l]}var mi={year:0,month:1,day:2,hour:3,minute:4,second:5};function kn(l,d){var u=l.format(d).replace(/\u200E/g,""),i=/(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(u),f=i[1],g=i[2],T=i[3],A=i[4],D=i[5],x=i[6];return[T,f,g,A,D,x]}function Zn(l,d){for(var u=l.formatToParts(d),i=[],f=0;f<u.length;f++){var g=u[f],T=g.type,A=g.value,D=mi[T];P(D)||(i[D]=parseInt(A,10))}return i}var ra={},rn=function(l){o(d,l),d.create=function(f){return ra[f]||(ra[f]=new d(f)),ra[f]},d.resetCache=function(){ra={},Yn={}},d.isValidSpecifier=function(f){return!!(f&&f.match(Ra))},d.isValidZone=function(f){if(!f)return!1;try{return new Intl.DateTimeFormat("en-US",{timeZone:f}).format(),!0}catch(g){return!1}};function d(i){var f;return f=l.call(this)||this,f.zoneName=i,f.valid=d.isValidZone(i),f}var u=d.prototype;return u.offsetName=function(f,g){var T=g.format,A=g.locale;return Ft(f,T,A,this.name)},u.formatOffset=function(f,g){return Ut(this.offset(f),g)},u.offset=function(f){var g=new Date(f);if(isNaN(g))return NaN;var T=xa(this.name),A=T.formatToParts?Zn(T,g):kn(T,g),D=A[0],x=A[1],ae=A[2],ee=A[3],ne=A[4],ve=A[5],Ne=ee===24?0:ee,at=Ot({year:D,month:x,day:ae,hour:Ne,minute:ne,second:ve,millisecond:0}),$e=+g,Oe=$e%1e3;return $e-=Oe>=0?Oe:1e3+Oe,(at-$e)/(60*1e3)},u.equals=function(f){return f.type==="iana"&&f.name===this.name},a(d,[{key:"type",get:function(){return"iana"}},{key:"name",get:function(){return this.zoneName}},{key:"isUniversal",get:function(){return!1}},{key:"isValid",get:function(){return this.valid}}]),d}(Ln),pa=null,It=function(l){o(d,l),d.instance=function(f){return f===0?d.utcInstance:new d(f)},d.parseSpecifier=function(f){if(f){var g=f.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(g)return new d(gt(g[1],g[2]))}return null};function d(i){var f;return f=l.call(this)||this,f.fixed=i,f}var u=d.prototype;return u.offsetName=function(){return this.name},u.formatOffset=function(f,g){return Ut(this.fixed,g)},u.offset=function(){return this.fixed},u.equals=function(f){return f.type==="fixed"&&f.fixed===this.fixed},a(d,[{key:"type",get:function(){return"fixed"}},{key:"name",get:function(){return this.fixed===0?"UTC":"UTC"+Ut(this.fixed,"narrow")}},{key:"isUniversal",get:function(){return!0}},{key:"isValid",get:function(){return!0}}],[{key:"utcInstance",get:function(){return pa===null&&(pa=new d(0)),pa}}]),d}(Ln),Mn=function(l){o(d,l);function d(i){var f;return f=l.call(this)||this,f.zoneName=i,f}var u=d.prototype;return u.offsetName=function(){return null},u.formatOffset=function(){return""},u.offset=function(){return NaN},u.equals=function(){return!1},a(d,[{key:"type",get:function(){return"invalid"}},{key:"name",get:function(){return this.zoneName}},{key:"isUniversal",get:function(){return!1}},{key:"isValid",get:function(){return!1}}]),d}(Ln);function gn(l,d){if(P(l)||l===null)return d;if(l instanceof Ln)return l;if(Me(l)){var u=l.toLowerCase();return u==="local"||u==="system"?d:u==="utc"||u==="gmt"?It.utcInstance:rn.isValidSpecifier(u)?rn.create(l):It.parseSpecifier(u)||new Mn(l)}else return fe(l)?It.instance(l):typeof l=="object"&&l.offset&&typeof l.offset=="number"?l:new Mn(l)}var ja=function(){return Date.now()},Ha="system",Va=null,Ua=null,Wa=null,Ka,yt=function(){function l(){}return l.resetCaches=function(){St.resetCache(),rn.resetCache()},a(l,null,[{key:"now",get:function(){return ja},set:function(u){ja=u}},{key:"defaultZone",get:function(){return gn(Ha,qn.instance)},set:function(u){Ha=u}},{key:"defaultLocale",get:function(){return Va},set:function(u){Va=u}},{key:"defaultNumberingSystem",get:function(){return Ua},set:function(u){Ua=u}},{key:"defaultOutputCalendar",get:function(){return Wa},set:function(u){Wa=u}},{key:"throwOnInvalid",get:function(){return Ka},set:function(u){Ka=u}}]),l}(),hi=["base"],_i=["padTo","floor"],C={};function $(l,d){d===void 0&&(d={});var u=JSON.stringify([l,d]),i=C[u];return i||(i=new Intl.ListFormat(l,d),C[u]=i),i}var Se={};function me(l,d){d===void 0&&(d={});var u=JSON.stringify([l,d]),i=Se[u];return i||(i=new Intl.DateTimeFormat(l,d),Se[u]=i),i}var Le={};function ft(l,d){d===void 0&&(d={});var u=JSON.stringify([l,d]),i=Le[u];return i||(i=new Intl.NumberFormat(l,d),Le[u]=i),i}var zt={};function Pn(l,d){d===void 0&&(d={});var u=d;u.base;var i=k(u,hi),f=JSON.stringify([l,i]),g=zt[f];return g||(g=new Intl.RelativeTimeFormat(l,d),zt[f]=g),g}var Qt=null;function on(){return Qt||(Qt=new Intl.DateTimeFormat().resolvedOptions().locale,Qt)}function wn(l){var d=l.indexOf("-u-");if(d===-1)return[l];var u,i=l.substring(0,d);try{u=me(l).resolvedOptions()}catch(A){u=me(i).resolvedOptions()}var f=u,g=f.numberingSystem,T=f.calendar;return[i,g,T]}function va(l,d,u){return(u||d)&&(l+="-u",u&&(l+="-ca-"+u),d&&(l+="-nu-"+d)),l}function Or(l){for(var d=[],u=1;u<=12;u++){var i=Ct.utc(2016,u,1);d.push(l(i))}return d}function Dr(l){for(var d=[],u=1;u<=7;u++){var i=Ct.utc(2016,11,13+u);d.push(l(i))}return d}function qa(l,d,u,i,f){var g=l.listingMode(u);return g==="error"?null:g==="en"?i(d):f(d)}function Nr(l){return l.numberingSystem&&l.numberingSystem!=="latn"?!1:l.numberingSystem==="latn"||!l.locale||l.locale.startsWith("en")||new Intl.DateTimeFormat(l.intl).resolvedOptions().numberingSystem==="latn"}var Ir=function(){function l(u,i,f){this.padTo=f.padTo||0,this.floor=f.floor||!1,f.padTo,f.floor;var g=k(f,_i);if(!i||Object.keys(g).length>0){var T=r({useGrouping:!1},f);f.padTo>0&&(T.minimumIntegerDigits=f.padTo),this.inf=ft(u,T)}}var d=l.prototype;return d.format=function(i){if(this.inf){var f=this.floor?Math.floor(i):i;return this.inf.format(f)}else{var g=this.floor?Math.floor(i):Qe(i,3);return Fe(g,this.padTo)}},l}(),Lr=function(){function l(u,i,f){this.opts=f;var g;if(u.zone.isUniversal){var T=-1*(u.offset/60),A=T>=0?"Etc/GMT+"+T:"Etc/GMT"+T;u.offset!==0&&rn.create(A).valid?(g=A,this.dt=u):(g="UTC",f.timeZoneName?this.dt=u:this.dt=u.offset===0?u:Ct.fromMillis(u.ts+u.offset*60*1e3))}else u.zone.type==="system"?this.dt=u:(this.dt=u,g=u.zone.name);var D=r({},this.opts);g&&(D.timeZone=g),this.dtf=me(i,D)}var d=l.prototype;return d.format=function(){return this.dtf.format(this.dt.toJSDate())},d.formatToParts=function(){return this.dtf.formatToParts(this.dt.toJSDate())},d.resolvedOptions=function(){return this.dtf.resolvedOptions()},l}(),Pr=function(){function l(u,i,f){this.opts=r({style:"long"},f),!i&&Je()&&(this.rtf=Pn(u,f))}var d=l.prototype;return d.format=function(i,f){return this.rtf?this.rtf.format(i,f):bt(f,i,this.opts.numeric,this.opts.style!=="long")},d.formatToParts=function(i,f){return this.rtf?this.rtf.formatToParts(i,f):[]},l}(),St=function(){l.fromOpts=function(i){return l.create(i.locale,i.numberingSystem,i.outputCalendar,i.defaultToEN)},l.create=function(i,f,g,T){T===void 0&&(T=!1);var A=i||yt.defaultLocale,D=A||(T?"en-US":on()),x=f||yt.defaultNumberingSystem,ae=g||yt.defaultOutputCalendar;return new l(D,x,ae,A)},l.resetCache=function(){Qt=null,Se={},Le={},zt={}},l.fromObject=function(i){var f=i===void 0?{}:i,g=f.locale,T=f.numberingSystem,A=f.outputCalendar;return l.create(g,T,A)};function l(u,i,f,g){var T=wn(u),A=T[0],D=T[1],x=T[2];this.locale=A,this.numberingSystem=i||D||null,this.outputCalendar=f||x||null,this.intl=va(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=g,this.fastNumbersCached=null}var d=l.prototype;return d.listingMode=function(){var i=this.isEnglish(),f=(this.numberingSystem===null||this.numberingSystem==="latn")&&(this.outputCalendar===null||this.outputCalendar==="gregory");return i&&f?"en":"intl"},d.clone=function(i){return!i||Object.getOwnPropertyNames(i).length===0?this:l.create(i.locale||this.specifiedLocale,i.numberingSystem||this.numberingSystem,i.outputCalendar||this.outputCalendar,i.defaultToEN||!1)},d.redefaultToEN=function(i){return i===void 0&&(i={}),this.clone(r({},i,{defaultToEN:!0}))},d.redefaultToSystem=function(i){return i===void 0&&(i={}),this.clone(r({},i,{defaultToEN:!1}))},d.months=function(i,f,g){var T=this;return f===void 0&&(f=!1),g===void 0&&(g=!0),qa(this,i,g,nn,function(){var A=f?{month:i,day:"numeric"}:{month:i},D=f?"format":"standalone";return T.monthsCache[D][i]||(T.monthsCache[D][i]=Or(function(x){return T.extract(x,A,"month")})),T.monthsCache[D][i]})},d.weekdays=function(i,f,g){var T=this;return f===void 0&&(f=!1),g===void 0&&(g=!0),qa(this,i,g,hn,function(){var A=f?{weekday:i,year:"numeric",month:"long",day:"numeric"}:{weekday:i},D=f?"format":"standalone";return T.weekdaysCache[D][i]||(T.weekdaysCache[D][i]=Dr(function(x){return T.extract(x,A,"weekday")})),T.weekdaysCache[D][i]})},d.meridiems=function(i){var f=this;return i===void 0&&(i=!0),qa(this,void 0,i,function(){return Bt},function(){if(!f.meridiemCache){var g={hour:"numeric",hourCycle:"h12"};f.meridiemCache=[Ct.utc(2016,11,13,9),Ct.utc(2016,11,13,19)].map(function(T){return f.extract(T,g,"dayperiod")})}return f.meridiemCache})},d.eras=function(i,f){var g=this;return f===void 0&&(f=!0),qa(this,i,f,Rt,function(){var T={era:i};return g.eraCache[i]||(g.eraCache[i]=[Ct.utc(-40,1,1),Ct.utc(2017,1,1)].map(function(A){return g.extract(A,T,"era")})),g.eraCache[i]})},d.extract=function(i,f,g){var T=this.dtFormatter(i,f),A=T.formatToParts(),D=A.find(function(x){return x.type.toLowerCase()===g});return D?D.value:null},d.numberFormatter=function(i){return i===void 0&&(i={}),new Ir(this.intl,i.forceSimple||this.fastNumbers,i)},d.dtFormatter=function(i,f){return f===void 0&&(f={}),new Lr(i,this.intl,f)},d.relFormatter=function(i){return i===void 0&&(i={}),new Pr(this.intl,this.isEnglish(),i)},d.listFormatter=function(i){return i===void 0&&(i={}),$(this.intl,i)},d.isEnglish=function(){return this.locale==="en"||this.locale.toLowerCase()==="en-us"||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")},d.equals=function(i){return this.locale===i.locale&&this.numberingSystem===i.numberingSystem&&this.outputCalendar===i.outputCalendar},a(l,[{key:"fastNumbers",get:function(){return this.fastNumbersCached==null&&(this.fastNumbersCached=Nr(this)),this.fastNumbersCached}}]),l}();function oa(){for(var l=arguments.length,d=new Array(l),u=0;u<l;u++)d[u]=arguments[u];var i=d.reduce(function(f,g){return f+g.source},"");return RegExp("^"+i+"$")}function Jn(){for(var l=arguments.length,d=new Array(l),u=0;u<l;u++)d[u]=arguments[u];return function(i){return d.reduce(function(f,g){var T=f[0],A=f[1],D=f[2],x=g(i,D),ae=x[0],ee=x[1],ne=x[2];return[r({},T,ae),A||ee,ne]},[{},null,1]).slice(0,2)}}function la(l){if(l==null)return[null,null];for(var d=arguments.length,u=new Array(d>1?d-1:0),i=1;i<d;i++)u[i-1]=arguments[i];for(var f=0,g=u;f<g.length;f++){var T=g[f],A=T[0],D=T[1],x=A.exec(l);if(x)return D(x)}return[null,null]}function Hi(){for(var l=arguments.length,d=new Array(l),u=0;u<l;u++)d[u]=arguments[u];return function(i,f){var g={},T;for(T=0;T<d.length;T++)g[d[T]]=We(i[f+T]);return[g,null,f+T]}}var Vi=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,gi=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,R=RegExp(""+gi.source+Vi.source+"?"),we=RegExp("(?:T"+R.source+")?"),nt=/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,_t=/(\d{4})-?W(\d\d)(?:-?(\d))?/,Qn=/(\d{4})-?(\d{3})/,Xn=Hi("weekYear","weekNumber","weekDay"),sa=Hi("year","ordinal"),Fr=/(\d{4})-(\d\d)-(\d\d)/,Ui=RegExp(gi.source+" ?(?:"+Vi.source+"|("+Nt.source+"))?"),bi=RegExp("(?: "+Ui.source+")?");function Xt(l,d,u){var i=l[d];return P(i)?u:We(i)}function Ya(l,d){var u={year:Xt(l,d),month:Xt(l,d+1,1),day:Xt(l,d+2,1)};return[u,null,d+3]}function Ta(l,d){var u={hours:Xt(l,d,0),minutes:Xt(l,d+1,0),seconds:Xt(l,d+2,0),milliseconds:J(l[d+3])};return[u,null,d+4]}function Za(l,d){var u=!l[d]&&!l[d+1],i=gt(l[d+1],l[d+2]),f=u?null:It.instance(i);return[{},f,d+3]}function xs(l,d){var u=l[d]?rn.create(l[d]):null;return[{},u,d+1]}var em=RegExp("^T?"+gi.source+"$"),tm=/^-?P(?:(?:(-?\d{1,9}(?:\.\d{1,9})?)Y)?(?:(-?\d{1,9}(?:\.\d{1,9})?)M)?(?:(-?\d{1,9}(?:\.\d{1,9})?)W)?(?:(-?\d{1,9}(?:\.\d{1,9})?)D)?(?:T(?:(-?\d{1,9}(?:\.\d{1,9})?)H)?(?:(-?\d{1,9}(?:\.\d{1,9})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/;function nm(l){var d=l[0],u=l[1],i=l[2],f=l[3],g=l[4],T=l[5],A=l[6],D=l[7],x=l[8],ae=d[0]==="-",ee=D&&D[0]==="-",ne=function(Ne,at){return at===void 0&&(at=!1),Ne!==void 0&&(at||Ne&&ae)?-Ne:Ne};return[{years:ne(ct(u)),months:ne(ct(i)),weeks:ne(ct(f)),days:ne(ct(g)),hours:ne(ct(T)),minutes:ne(ct(A)),seconds:ne(ct(D),D==="-0"),milliseconds:ne(J(x),ee)}]}var am={GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function Br(l,d,u,i,f,g,T){var A={year:d.length===2?wt(We(d)):We(d),month:Wt.indexOf(u)+1,day:We(i),hour:We(f),minute:We(g)};return T&&(A.second=We(T)),l&&(A.weekday=l.length>3?dn.indexOf(l)+1:mn.indexOf(l)+1),A}var im=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function rm(l){var d=l[1],u=l[2],i=l[3],f=l[4],g=l[5],T=l[6],A=l[7],D=l[8],x=l[9],ae=l[10],ee=l[11],ne=Br(d,f,i,u,g,T,A),ve;return D?ve=am[D]:x?ve=0:ve=gt(ae,ee),[ne,new It(ve)]}function om(l){return l.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}var lm=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,sm=/^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,um=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function js(l){var d=l[1],u=l[2],i=l[3],f=l[4],g=l[5],T=l[6],A=l[7],D=Br(d,f,i,u,g,T,A);return[D,It.utcInstance]}function cm(l){var d=l[1],u=l[2],i=l[3],f=l[4],g=l[5],T=l[6],A=l[7],D=Br(d,A,u,i,f,g,T);return[D,It.utcInstance]}var fm=oa(nt,we),dm=oa(_t,we),mm=oa(Qn,we),hm=oa(R),_m=Jn(Ya,Ta,Za),gm=Jn(Xn,Ta,Za),bm=Jn(sa,Ta,Za),ym=Jn(Ta,Za);function pm(l){return la(l,[fm,_m],[dm,gm],[mm,bm],[hm,ym])}function vm(l){return la(om(l),[im,rm])}function Tm(l){return la(l,[lm,js],[sm,js],[um,cm])}function km(l){return la(l,[tm,nm])}var Mm=Jn(Ta);function wm(l){return la(l,[em,Mm])}var Am=oa(Fr,bi),Sm=oa(Ui),Cm=Jn(Ya,Ta,Za,xs),Gm=Jn(Ta,Za,xs);function zm(l){return la(l,[Am,Cm],[Sm,Gm])}var Em="Invalid Duration",Hs={weeks:{days:7,hours:7*24,minutes:7*24*60,seconds:7*24*60*60,milliseconds:7*24*60*60*1e3},days:{hours:24,minutes:24*60,seconds:24*60*60,milliseconds:24*60*60*1e3},hours:{minutes:60,seconds:60*60,milliseconds:60*60*1e3},minutes:{seconds:60,milliseconds:60*1e3},seconds:{milliseconds:1e3}},Om=r({years:{quarters:4,months:12,weeks:52,days:365,hours:365*24,minutes:365*24*60,seconds:365*24*60*60,milliseconds:365*24*60*60*1e3},quarters:{months:3,weeks:13,days:91,hours:91*24,minutes:91*24*60,seconds:91*24*60*60,milliseconds:91*24*60*60*1e3},months:{weeks:4,days:30,hours:30*24,minutes:30*24*60,seconds:30*24*60*60,milliseconds:30*24*60*60*1e3}},Hs),bn=146097/400,Ja=146097/4800,Dm=r({years:{quarters:4,months:12,weeks:bn/7,days:bn,hours:bn*24,minutes:bn*24*60,seconds:bn*24*60*60,milliseconds:bn*24*60*60*1e3},quarters:{months:3,weeks:bn/28,days:bn/4,hours:bn*24/4,minutes:bn*24*60/4,seconds:bn*24*60*60/4,milliseconds:bn*24*60*60*1e3/4},months:{weeks:Ja/7,days:Ja,hours:Ja*24,minutes:Ja*24*60,seconds:Ja*24*60*60,milliseconds:Ja*24*60*60*1e3}},Hs),ka=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],Nm=ka.slice(0).reverse();function Ma(l,d,u){u===void 0&&(u=!1);var i={values:u?d.values:r({},l.values,d.values||{}),loc:l.loc.clone(d.loc),conversionAccuracy:d.conversionAccuracy||l.conversionAccuracy};return new jt(i)}function Im(l){return l<0?Math.floor(l):Math.ceil(l)}function Vs(l,d,u,i,f){var g=l[f][u],T=d[u]/g,A=Math.sign(T)===Math.sign(i[f]),D=!A&&i[f]!==0&&Math.abs(T)<=1?Im(T):Math.trunc(T);i[f]+=D,d[u]-=D*g}function Lm(l,d){Nm.reduce(function(u,i){return P(d[i])?u:(u&&Vs(l,d,u,d,i),i)},null)}var jt=function(){function l(u){var i=u.conversionAccuracy==="longterm"||!1;this.values=u.values,this.loc=u.loc||St.create(),this.conversionAccuracy=i?"longterm":"casual",this.invalid=u.invalid||null,this.matrix=i?Dm:Om,this.isLuxonDuration=!0}l.fromMillis=function(i,f){return l.fromObject({milliseconds:i},f)},l.fromObject=function(i,f){if(f===void 0&&(f={}),i==null||typeof i!="object")throw new z("Duration.fromObject: argument expected to be an object, got "+(i===null?"null":typeof i));return new l({values:At(i,l.normalizeUnit),loc:St.fromObject(f),conversionAccuracy:f.conversionAccuracy})},l.fromDurationLike=function(i){if(fe(i))return l.fromMillis(i);if(l.isDuration(i))return i;if(typeof i=="object")return l.fromObject(i);throw new z("Unknown duration argument "+i+" of type "+typeof i)},l.fromISO=function(i,f){var g=km(i),T=g[0];return T?l.fromObject(T,f):l.invalid("unparsable",'the input "'+i+`" can't be parsed as ISO 8601`)},l.fromISOTime=function(i,f){var g=wm(i),T=g[0];return T?l.fromObject(T,f):l.invalid("unparsable",'the input "'+i+`" can't be parsed as ISO 8601`)},l.invalid=function(i,f){if(f===void 0&&(f=null),!i)throw new z("need to specify a reason the Duration is invalid");var g=i instanceof kt?i:new kt(i,f);if(yt.throwOnInvalid)throw new I(g);return new l({invalid:g})},l.normalizeUnit=function(i){var f={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[i&&i.toLowerCase()];if(!f)throw new B(i);return f},l.isDuration=function(i){return i&&i.isLuxonDuration||!1};var d=l.prototype;return d.toFormat=function(i,f){f===void 0&&(f={});var g=r({},f,{floor:f.round!==!1&&f.floor!==!1});return this.isValid?De.create(this.loc,g).formatDurationFromString(this,i):Em},d.toHuman=function(i){var f=this;i===void 0&&(i={});var g=ka.map(function(T){var A=f.values[T];return P(A)?null:f.loc.numberFormatter(r({style:"unit",unitDisplay:"long"},i,{unit:T.slice(0,-1)})).format(A)}).filter(function(T){return T});return this.loc.listFormatter(r({type:"conjunction",style:i.listStyle||"narrow"},i)).format(g)},d.toObject=function(){return this.isValid?r({},this.values):{}},d.toISO=function(){if(!this.isValid)return null;var i="P";return this.years!==0&&(i+=this.years+"Y"),(this.months!==0||this.quarters!==0)&&(i+=this.months+this.quarters*3+"M"),this.weeks!==0&&(i+=this.weeks+"W"),this.days!==0&&(i+=this.days+"D"),(this.hours!==0||this.minutes!==0||this.seconds!==0||this.milliseconds!==0)&&(i+="T"),this.hours!==0&&(i+=this.hours+"H"),this.minutes!==0&&(i+=this.minutes+"M"),(this.seconds!==0||this.milliseconds!==0)&&(i+=Qe(this.seconds+this.milliseconds/1e3,3)+"S"),i==="P"&&(i+="T0S"),i},d.toISOTime=function(i){if(i===void 0&&(i={}),!this.isValid)return null;var f=this.toMillis();if(f<0||f>=864e5)return null;i=r({suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended"},i);var g=this.shiftTo("hours","minutes","seconds","milliseconds"),T=i.format==="basic"?"hhmm":"hh:mm";(!i.suppressSeconds||g.seconds!==0||g.milliseconds!==0)&&(T+=i.format==="basic"?"ss":":ss",(!i.suppressMilliseconds||g.milliseconds!==0)&&(T+=".SSS"));var A=g.toFormat(T);return i.includePrefix&&(A="T"+A),A},d.toJSON=function(){return this.toISO()},d.toString=function(){return this.toISO()},d.toMillis=function(){return this.as("milliseconds")},d.valueOf=function(){return this.toMillis()},d.plus=function(i){if(!this.isValid)return this;for(var f=l.fromDurationLike(i),g={},T=N(ka),A;!(A=T()).done;){var D=A.value;(dt(f.values,D)||dt(this.values,D))&&(g[D]=f.get(D)+this.get(D))}return Ma(this,{values:g},!0)},d.minus=function(i){if(!this.isValid)return this;var f=l.fromDurationLike(i);return this.plus(f.negate())},d.mapUnits=function(i){if(!this.isValid)return this;for(var f={},g=0,T=Object.keys(this.values);g<T.length;g++){var A=T[g];f[A]=Yt(i(this.values[A],A))}return Ma(this,{values:f},!0)},d.get=function(i){return this[l.normalizeUnit(i)]},d.set=function(i){if(!this.isValid)return this;var f=r({},this.values,At(i,l.normalizeUnit));return Ma(this,{values:f})},d.reconfigure=function(i){var f=i===void 0?{}:i,g=f.locale,T=f.numberingSystem,A=f.conversionAccuracy,D=this.loc.clone({locale:g,numberingSystem:T}),x={loc:D};return A&&(x.conversionAccuracy=A),Ma(this,x)},d.as=function(i){return this.isValid?this.shiftTo(i).get(i):NaN},d.normalize=function(){if(!this.isValid)return this;var i=this.toObject();return Lm(this.matrix,i),Ma(this,{values:i},!0)},d.shiftTo=function(){for(var i=arguments.length,f=new Array(i),g=0;g<i;g++)f[g]=arguments[g];if(!this.isValid)return this;if(f.length===0)return this;f=f.map(function(Ht){return l.normalizeUnit(Ht)});for(var T={},A={},D=this.toObject(),x,ae=N(ka),ee;!(ee=ae()).done;){var ne=ee.value;if(f.indexOf(ne)>=0){x=ne;var ve=0;for(var Ne in A)ve+=this.matrix[Ne][ne]*A[Ne],A[Ne]=0;fe(D[ne])&&(ve+=D[ne]);var at=Math.trunc(ve);T[ne]=at,A[ne]=(ve*1e3-at*1e3)/1e3;for(var $e in D)ka.indexOf($e)>ka.indexOf(ne)&&Vs(this.matrix,D,$e,T,ne)}else fe(D[ne])&&(A[ne]=D[ne])}for(var Oe in A)A[Oe]!==0&&(T[x]+=Oe===x?A[Oe]:A[Oe]/this.matrix[x][Oe]);return Ma(this,{values:T},!0).normalize()},d.negate=function(){if(!this.isValid)return this;for(var i={},f=0,g=Object.keys(this.values);f<g.length;f++){var T=g[f];i[T]=-this.values[T]}return Ma(this,{values:i},!0)},d.equals=function(i){if(!this.isValid||!i.isValid||!this.loc.equals(i.loc))return!1;function f(D,x){return D===void 0||D===0?x===void 0||x===0:D===x}for(var g=N(ka),T;!(T=g()).done;){var A=T.value;if(!f(this.values[A],i.values[A]))return!1}return!0},a(l,[{key:"locale",get:function(){return this.isValid?this.loc.locale:null}},{key:"numberingSystem",get:function(){return this.isValid?this.loc.numberingSystem:null}},{key:"years",get:function(){return this.isValid?this.values.years||0:NaN}},{key:"quarters",get:function(){return this.isValid?this.values.quarters||0:NaN}},{key:"months",get:function(){return this.isValid?this.values.months||0:NaN}},{key:"weeks",get:function(){return this.isValid?this.values.weeks||0:NaN}},{key:"days",get:function(){return this.isValid?this.values.days||0:NaN}},{key:"hours",get:function(){return this.isValid?this.values.hours||0:NaN}},{key:"minutes",get:function(){return this.isValid?this.values.minutes||0:NaN}},{key:"seconds",get:function(){return this.isValid?this.values.seconds||0:NaN}},{key:"milliseconds",get:function(){return this.isValid?this.values.milliseconds||0:NaN}},{key:"isValid",get:function(){return this.invalid===null}},{key:"invalidReason",get:function(){return this.invalid?this.invalid.reason:null}},{key:"invalidExplanation",get:function(){return this.invalid?this.invalid.explanation:null}}]),l}(),yi="Invalid Interval";function Pm(l,d){return!l||!l.isValid?pi.invalid("missing or invalid start"):!d||!d.isValid?pi.invalid("missing or invalid end"):d<l?pi.invalid("end before start","The end of an interval must be after its start, but you had start="+l.toISO()+" and end="+d.toISO()):null}var pi=function(){function l(u){this.s=u.start,this.e=u.end,this.invalid=u.invalid||null,this.isLuxonInterval=!0}l.invalid=function(i,f){if(f===void 0&&(f=null),!i)throw new z("need to specify a reason the Interval is invalid");var g=i instanceof kt?i:new kt(i,f);if(yt.throwOnInvalid)throw new G(g);return new l({invalid:g})},l.fromDateTimes=function(i,f){var g=Mi(i),T=Mi(f),A=Pm(g,T);return A==null?new l({start:g,end:T}):A},l.after=function(i,f){var g=jt.fromDurationLike(f),T=Mi(i);return l.fromDateTimes(T,T.plus(g))},l.before=function(i,f){var g=jt.fromDurationLike(f),T=Mi(i);return l.fromDateTimes(T.minus(g),T)},l.fromISO=function(i,f){var g=(i||"").split("/",2),T=g[0],A=g[1];if(T&&A){var D,x;try{D=Ct.fromISO(T,f),x=D.isValid}catch(Ne){x=!1}var ae,ee;try{ae=Ct.fromISO(A,f),ee=ae.isValid}catch(Ne){ee=!1}if(x&&ee)return l.fromDateTimes(D,ae);if(x){var ne=jt.fromISO(A,f);if(ne.isValid)return l.after(D,ne)}else if(ee){var ve=jt.fromISO(T,f);if(ve.isValid)return l.before(ae,ve)}}return l.invalid("unparsable",'the input "'+i+`" can't be parsed as ISO 8601`)},l.isInterval=function(i){return i&&i.isLuxonInterval||!1};var d=l.prototype;return d.length=function(i){return i===void 0&&(i="milliseconds"),this.isValid?this.toDuration.apply(this,[i]).get(i):NaN},d.count=function(i){if(i===void 0&&(i="milliseconds"),!this.isValid)return NaN;var f=this.start.startOf(i),g=this.end.startOf(i);return Math.floor(g.diff(f,i).get(i))+1},d.hasSame=function(i){return this.isValid?this.isEmpty()||this.e.minus(1).hasSame(this.s,i):!1},d.isEmpty=function(){return this.s.valueOf()===this.e.valueOf()},d.isAfter=function(i){return this.isValid?this.s>i:!1},d.isBefore=function(i){return this.isValid?this.e<=i:!1},d.contains=function(i){return this.isValid?this.s<=i&&this.e>i:!1},d.set=function(i){var f=i===void 0?{}:i,g=f.start,T=f.end;return this.isValid?l.fromDateTimes(g||this.s,T||this.e):this},d.splitAt=function(){var i=this;if(!this.isValid)return[];for(var f=arguments.length,g=new Array(f),T=0;T<f;T++)g[T]=arguments[T];for(var A=g.map(Mi).filter(function(ve){return i.contains(ve)}).sort(),D=[],x=this.s,ae=0;x<this.e;){var ee=A[ae]||this.e,ne=+ee>+this.e?this.e:ee;D.push(l.fromDateTimes(x,ne)),x=ne,ae+=1}return D},d.splitBy=function(i){var f=jt.fromDurationLike(i);if(!this.isValid||!f.isValid||f.as("milliseconds")===0)return[];for(var g=this.s,T=1,A,D=[];g<this.e;){var x=this.start.plus(f.mapUnits(function(ae){return ae*T}));A=+x>+this.e?this.e:x,D.push(l.fromDateTimes(g,A)),g=A,T+=1}return D},d.divideEqually=function(i){return this.isValid?this.splitBy(this.length()/i).slice(0,i):[]},d.overlaps=function(i){return this.e>i.s&&this.s<i.e},d.abutsStart=function(i){return this.isValid?+this.e==+i.s:!1},d.abutsEnd=function(i){return this.isValid?+i.e==+this.s:!1},d.engulfs=function(i){return this.isValid?this.s<=i.s&&this.e>=i.e:!1},d.equals=function(i){return!this.isValid||!i.isValid?!1:this.s.equals(i.s)&&this.e.equals(i.e)},d.intersection=function(i){if(!this.isValid)return this;var f=this.s>i.s?this.s:i.s,g=this.e<i.e?this.e:i.e;return f>=g?null:l.fromDateTimes(f,g)},d.union=function(i){if(!this.isValid)return this;var f=this.s<i.s?this.s:i.s,g=this.e>i.e?this.e:i.e;return l.fromDateTimes(f,g)},l.merge=function(i){var f=i.sort(function(A,D){return A.s-D.s}).reduce(function(A,D){var x=A[0],ae=A[1];return ae?ae.overlaps(D)||ae.abutsStart(D)?[x,ae.union(D)]:[x.concat([ae]),D]:[x,D]},[[],null]),g=f[0],T=f[1];return T&&g.push(T),g},l.xor=function(i){for(var f,g=null,T=0,A=[],D=i.map(function(Ne){return[{time:Ne.s,type:"s"},{time:Ne.e,type:"e"}]}),x=(f=Array.prototype).concat.apply(f,D),ae=x.sort(function(Ne,at){return Ne.time-at.time}),ee=N(ae),ne;!(ne=ee()).done;){var ve=ne.value;T+=ve.type==="s"?1:-1,T===1?g=ve.time:(g&&+g!=+ve.time&&A.push(l.fromDateTimes(g,ve.time)),g=null)}return l.merge(A)},d.difference=function(){for(var i=this,f=arguments.length,g=new Array(f),T=0;T<f;T++)g[T]=arguments[T];return l.xor([this].concat(g)).map(function(A){return i.intersection(A)}).filter(function(A){return A&&!A.isEmpty()})},d.toString=function(){return this.isValid?"["+this.s.toISO()+" \u2013 "+this.e.toISO()+")":yi},d.toISO=function(i){return this.isValid?this.s.toISO(i)+"/"+this.e.toISO(i):yi},d.toISODate=function(){return this.isValid?this.s.toISODate()+"/"+this.e.toISODate():yi},d.toISOTime=function(i){return this.isValid?this.s.toISOTime(i)+"/"+this.e.toISOTime(i):yi},d.toFormat=function(i,f){var g=f===void 0?{}:f,T=g.separator,A=T===void 0?" \u2013 ":T;return this.isValid?""+this.s.toFormat(i)+A+this.e.toFormat(i):yi},d.toDuration=function(i,f){return this.isValid?this.e.diff(this.s,i,f):jt.invalid(this.invalidReason)},d.mapEndpoints=function(i){return l.fromDateTimes(i(this.s),i(this.e))},a(l,[{key:"start",get:function(){return this.isValid?this.s:null}},{key:"end",get:function(){return this.isValid?this.e:null}},{key:"isValid",get:function(){return this.invalidReason===null}},{key:"invalidReason",get:function(){return this.invalid?this.invalid.reason:null}},{key:"invalidExplanation",get:function(){return this.invalid?this.invalid.explanation:null}}]),l}(),vi=function(){function l(){}return l.hasDST=function(u){u===void 0&&(u=yt.defaultZone);var i=Ct.now().setZone(u).set({month:12});return!u.isUniversal&&i.offset!==i.set({month:6}).offset},l.isValidIANAZone=function(u){return rn.isValidSpecifier(u)&&rn.isValidZone(u)},l.normalizeZone=function(u){return gn(u,yt.defaultZone)},l.months=function(u,i){u===void 0&&(u="long");var f=i===void 0?{}:i,g=f.locale,T=g===void 0?null:g,A=f.numberingSystem,D=A===void 0?null:A,x=f.locObj,ae=x===void 0?null:x,ee=f.outputCalendar,ne=ee===void 0?"gregory":ee;return(ae||St.create(T,D,ne)).months(u)},l.monthsFormat=function(u,i){u===void 0&&(u="long");var f=i===void 0?{}:i,g=f.locale,T=g===void 0?null:g,A=f.numberingSystem,D=A===void 0?null:A,x=f.locObj,ae=x===void 0?null:x,ee=f.outputCalendar,ne=ee===void 0?"gregory":ee;return(ae||St.create(T,D,ne)).months(u,!0)},l.weekdays=function(u,i){u===void 0&&(u="long");var f=i===void 0?{}:i,g=f.locale,T=g===void 0?null:g,A=f.numberingSystem,D=A===void 0?null:A,x=f.locObj,ae=x===void 0?null:x;return(ae||St.create(T,D,null)).weekdays(u)},l.weekdaysFormat=function(u,i){u===void 0&&(u="long");var f=i===void 0?{}:i,g=f.locale,T=g===void 0?null:g,A=f.numberingSystem,D=A===void 0?null:A,x=f.locObj,ae=x===void 0?null:x;return(ae||St.create(T,D,null)).weekdays(u,!0)},l.meridiems=function(u){var i=u===void 0?{}:u,f=i.locale,g=f===void 0?null:f;return St.create(g).meridiems()},l.eras=function(u,i){u===void 0&&(u="short");var f=i===void 0?{}:i,g=f.locale,T=g===void 0?null:g;return St.create(T,null,"gregory").eras(u)},l.features=function(){return{relative:Je()}},l}();function Us(l,d){var u=function(g){return g.toUTC(0,{keepLocalTime:!0}).startOf("day").valueOf()},i=u(d)-u(l);return Math.floor(jt.fromMillis(i).as("days"))}function Fm(l,d,u){for(var i=[["years",function(at,$e){return $e.year-at.year}],["quarters",function(at,$e){return $e.quarter-at.quarter}],["months",function(at,$e){return $e.month-at.month+($e.year-at.year)*12}],["weeks",function(at,$e){var Oe=Us(at,$e);return(Oe-Oe%7)/7}],["days",Us]],f={},g,T,A=0,D=i;A<D.length;A++){var x=D[A],ae=x[0],ee=x[1];if(u.indexOf(ae)>=0){var ne;g=ae;var ve=ee(l,d);if(T=l.plus((ne={},ne[ae]=ve,ne)),T>d){var Ne;l=l.plus((Ne={},Ne[ae]=ve-1,Ne)),ve-=1}else l=T;f[ae]=ve}}return[l,f,T,g]}function Bm(l,d,u,i){var f=Fm(l,d,u),g=f[0],T=f[1],A=f[2],D=f[3],x=d-g,ae=u.filter(function(Ne){return["hours","minutes","seconds","milliseconds"].indexOf(Ne)>=0});if(ae.length===0){if(A<d){var ee;A=g.plus((ee={},ee[D]=1,ee))}A!==g&&(T[D]=(T[D]||0)+x/(A-g))}var ne=jt.fromObject(T,i);if(ae.length>0){var ve;return(ve=jt.fromMillis(x,i)).shiftTo.apply(ve,ae).plus(ne)}else return ne}var Rr={arab:"[\u0660-\u0669]",arabext:"[\u06F0-\u06F9]",bali:"[\u1B50-\u1B59]",beng:"[\u09E6-\u09EF]",deva:"[\u0966-\u096F]",fullwide:"[\uFF10-\uFF19]",gujr:"[\u0AE6-\u0AEF]",hanidec:"[\u3007|\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D]",khmr:"[\u17E0-\u17E9]",knda:"[\u0CE6-\u0CEF]",laoo:"[\u0ED0-\u0ED9]",limb:"[\u1946-\u194F]",mlym:"[\u0D66-\u0D6F]",mong:"[\u1810-\u1819]",mymr:"[\u1040-\u1049]",orya:"[\u0B66-\u0B6F]",tamldec:"[\u0BE6-\u0BEF]",telu:"[\u0C66-\u0C6F]",thai:"[\u0E50-\u0E59]",tibt:"[\u0F20-\u0F29]",latn:"\\d"},Ws={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},Rm=Rr.hanidec.replace(/[\[|\]]/g,"").split("");function xm(l){var d=parseInt(l,10);if(isNaN(d)){d="";for(var u=0;u<l.length;u++){var i=l.charCodeAt(u);if(l[u].search(Rr.hanidec)!==-1)d+=Rm.indexOf(l[u]);else for(var f in Ws){var g=Ws[f],T=g[0],A=g[1];i>=T&&i<=A&&(d+=i-T)}}return parseInt(d,10)}else return d}function An(l,d){var u=l.numberingSystem;return d===void 0&&(d=""),new RegExp(""+Rr[u||"latn"]+d)}var jm="missing Intl.DateTimeFormat.formatToParts support";function st(l,d){return d===void 0&&(d=function(i){return i}),{regex:l,deser:function(i){var f=i[0];return d(xm(f))}}}var Hm=String.fromCharCode(160),Ks="( |"+Hm+")",qs=new RegExp(Ks,"g");function Vm(l){return l.replace(/\./g,"\\.?").replace(qs,Ks)}function Ys(l){return l.replace(/\./g,"").replace(qs," ").toLowerCase()}function Sn(l,d){return l===null?null:{regex:RegExp(l.map(Vm).join("|")),deser:function(i){var f=i[0];return l.findIndex(function(g){return Ys(f)===Ys(g)})+d}}}function Zs(l,d){return{regex:l,deser:function(i){var f=i[1],g=i[2];return gt(f,g)},groups:d}}function xr(l){return{regex:l,deser:function(u){var i=u[0];return i}}}function Um(l){return l.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function Wm(l,d){var u=An(d),i=An(d,"{2}"),f=An(d,"{3}"),g=An(d,"{4}"),T=An(d,"{6}"),A=An(d,"{1,2}"),D=An(d,"{1,3}"),x=An(d,"{1,6}"),ae=An(d,"{1,9}"),ee=An(d,"{2,4}"),ne=An(d,"{4,6}"),ve=function(Oe){return{regex:RegExp(Um(Oe.val)),deser:function(Yi){var qr=Yi[0];return qr},literal:!0}},Ne=function(Oe){if(l.literal)return ve(Oe);switch(Oe.val){case"G":return Sn(d.eras("short",!1),0);case"GG":return Sn(d.eras("long",!1),0);case"y":return st(x);case"yy":return st(ee,wt);case"yyyy":return st(g);case"yyyyy":return st(ne);case"yyyyyy":return st(T);case"M":return st(A);case"MM":return st(i);case"MMM":return Sn(d.months("short",!0,!1),1);case"MMMM":return Sn(d.months("long",!0,!1),1);case"L":return st(A);case"LL":return st(i);case"LLL":return Sn(d.months("short",!1,!1),1);case"LLLL":return Sn(d.months("long",!1,!1),1);case"d":return st(A);case"dd":return st(i);case"o":return st(D);case"ooo":return st(f);case"HH":return st(i);case"H":return st(A);case"hh":return st(i);case"h":return st(A);case"mm":return st(i);case"m":return st(A);case"q":return st(A);case"qq":return st(i);case"s":return st(A);case"ss":return st(i);case"S":return st(D);case"SSS":return st(f);case"u":return xr(ae);case"uu":return xr(A);case"uuu":return st(u);case"a":return Sn(d.meridiems(),0);case"kkkk":return st(g);case"kk":return st(ee,wt);case"W":return st(A);case"WW":return st(i);case"E":case"c":return st(u);case"EEE":return Sn(d.weekdays("short",!1,!1),1);case"EEEE":return Sn(d.weekdays("long",!1,!1),1);case"ccc":return Sn(d.weekdays("short",!0,!1),1);case"cccc":return Sn(d.weekdays("long",!0,!1),1);case"Z":case"ZZ":return Zs(new RegExp("([+-]"+A.source+")(?::("+i.source+"))?"),2);case"ZZZ":return Zs(new RegExp("([+-]"+A.source+")("+i.source+")?"),2);case"z":return xr(/[a-z_+-/]{1,256}?/i);default:return ve(Oe)}},at=Ne(l)||{invalidReason:jm};return at.token=l,at}var Km={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"}};function qm(l,d,u){var i=l.type,f=l.value;if(i==="literal")return{literal:!0,val:f};var g=u[i],T=Km[i];if(typeof T=="object"&&(T=T[g]),T)return{literal:!1,val:T}}function Ym(l){var d=l.map(function(u){return u.regex}).reduce(function(u,i){return u+"("+i.source+")"},"");return["^"+d+"$",l]}function Zm(l,d,u){var i=l.match(d);if(i){var f={},g=1;for(var T in u)if(dt(u,T)){var A=u[T],D=A.groups?A.groups+1:1;!A.literal&&A.token&&(f[A.token.val[0]]=A.deser(i.slice(g,g+D))),g+=D}return[i,f]}else return[i,{}]}function Jm(l){var d=function(T){switch(T){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}},u=null,i;P(l.z)||(u=rn.create(l.z)),P(l.Z)||(u||(u=new It(l.Z)),i=l.Z),P(l.q)||(l.M=(l.q-1)*3+1),P(l.h)||(l.h<12&&l.a===1?l.h+=12:l.h===12&&l.a===0&&(l.h=0)),l.G===0&&l.y&&(l.y=-l.y),P(l.u)||(l.S=J(l.u));var f=Object.keys(l).reduce(function(g,T){var A=d(T);return A&&(g[A]=l[T]),g},{});return[f,u,i]}var jr=null;function Qm(){return jr||(jr=Ct.fromMillis(1555555555555)),jr}function Xm(l,d){if(l.literal)return l;var u=De.macroTokenToFormatOpts(l.val);if(!u)return l;var i=De.create(d,u),f=i.formatDateTimeParts(Qm()),g=f.map(function(T){return qm(T,d,u)});return g.includes(void 0)?l:g}function $m(l,d){var u;return(u=Array.prototype).concat.apply(u,l.map(function(i){return Xm(i,d)}))}function Js(l,d,u){var i=$m(De.parseFormat(u),l),f=i.map(function(Oe){return Wm(Oe,l)}),g=f.find(function(Oe){return Oe.invalidReason});if(g)return{input:d,tokens:i,invalidReason:g.invalidReason};var T=Ym(f),A=T[0],D=T[1],x=RegExp(A,"i"),ae=Zm(d,x,D),ee=ae[0],ne=ae[1],ve=ne?Jm(ne):[null,null,void 0],Ne=ve[0],at=ve[1],$e=ve[2];if(dt(ne,"a")&&dt(ne,"H"))throw new U("Can't include meridiem when specifying 24-hour format");return{input:d,tokens:i,regex:x,rawMatches:ee,matches:ne,result:Ne,zone:at,specificOffset:$e}}function eh(l,d,u){var i=Js(l,d,u),f=i.result,g=i.zone,T=i.specificOffset,A=i.invalidReason;return[f,g,T,A]}var Qs=[0,31,59,90,120,151,181,212,243,273,304,334],Xs=[0,31,60,91,121,152,182,213,244,274,305,335];function yn(l,d){return new kt("unit out of range","you specified "+d+" (of type "+typeof d+") as a "+l+", which is invalid")}function $s(l,d,u){var i=new Date(Date.UTC(l,d-1,u)).getUTCDay();return i===0?7:i}function eu(l,d,u){return u+(Ve(l)?Xs:Qs)[d-1]}function tu(l,d){var u=Ve(l)?Xs:Qs,i=u.findIndex(function(g){return g<d}),f=d-u[i];return{month:i+1,day:f}}function Hr(l){var d=l.year,u=l.month,i=l.day,f=eu(d,u,i),g=$s(d,u,i),T=Math.floor((f-g+10)/7),A;return T<1?(A=d-1,T=pt(A)):T>pt(d)?(A=d+1,T=1):A=d,r({weekYear:A,weekNumber:T,weekday:g},Dt(l))}function nu(l){var d=l.weekYear,u=l.weekNumber,i=l.weekday,f=$s(d,1,4),g=Tt(d),T=u*7+i-f-3,A;T<1?(A=d-1,T+=Tt(A)):T>g?(A=d+1,T-=Tt(d)):A=d;var D=tu(A,T),x=D.month,ae=D.day;return r({year:A,month:x,day:ae},Dt(l))}function Vr(l){var d=l.year,u=l.month,i=l.day,f=eu(d,u,i);return r({year:d,ordinal:f},Dt(l))}function au(l){var d=l.year,u=l.ordinal,i=tu(d,u),f=i.month,g=i.day;return r({year:d,month:f,day:g},Dt(l))}function th(l){var d=pe(l.weekYear),u=Te(l.weekNumber,1,pt(l.weekYear)),i=Te(l.weekday,1,7);return d?u?i?!1:yn("weekday",l.weekday):yn("week",l.week):yn("weekYear",l.weekYear)}function nh(l){var d=pe(l.year),u=Te(l.ordinal,1,Tt(l.year));return d?u?!1:yn("ordinal",l.ordinal):yn("year",l.year)}function iu(l){var d=pe(l.year),u=Te(l.month,1,12),i=Te(l.day,1,mt(l.year,l.month));return d?u?i?!1:yn("day",l.day):yn("month",l.month):yn("year",l.year)}function ru(l){var d=l.hour,u=l.minute,i=l.second,f=l.millisecond,g=Te(d,0,23)||d===24&&u===0&&i===0&&f===0,T=Te(u,0,59),A=Te(i,0,59),D=Te(f,0,999);return g?T?A?D?!1:yn("millisecond",f):yn("second",i):yn("minute",u):yn("hour",d)}var Ur="Invalid DateTime",ou=864e13;function Wi(l){return new kt("unsupported zone",'the zone "'+l.name+'" is not supported')}function Wr(l){return l.weekData===null&&(l.weekData=Hr(l.c)),l.weekData}function Ti(l,d){var u={ts:l.ts,zone:l.zone,c:l.c,o:l.o,loc:l.loc,invalid:l.invalid};return new Ct(r({},u,d,{old:u}))}function lu(l,d,u){var i=l-d*60*1e3,f=u.offset(i);if(d===f)return[i,d];i-=(f-d)*60*1e3;var g=u.offset(i);return f===g?[i,f]:[l-Math.min(f,g)*60*1e3,Math.max(f,g)]}function su(l,d){l+=d*60*1e3;var u=new Date(l);return{year:u.getUTCFullYear(),month:u.getUTCMonth()+1,day:u.getUTCDate(),hour:u.getUTCHours(),minute:u.getUTCMinutes(),second:u.getUTCSeconds(),millisecond:u.getUTCMilliseconds()}}function Ki(l,d,u){return lu(Ot(l),d,u)}function uu(l,d){var u=l.o,i=l.c.year+Math.trunc(d.years),f=l.c.month+Math.trunc(d.months)+Math.trunc(d.quarters)*3,g=r({},l.c,{year:i,month:f,day:Math.min(l.c.day,mt(i,f))+Math.trunc(d.days)+Math.trunc(d.weeks)*7}),T=jt.fromObject({years:d.years-Math.trunc(d.years),quarters:d.quarters-Math.trunc(d.quarters),months:d.months-Math.trunc(d.months),weeks:d.weeks-Math.trunc(d.weeks),days:d.days-Math.trunc(d.days),hours:d.hours,minutes:d.minutes,seconds:d.seconds,milliseconds:d.milliseconds}).as("milliseconds"),A=Ot(g),D=lu(A,u,l.zone),x=D[0],ae=D[1];return T!==0&&(x+=T,ae=l.zone.offset(x)),{ts:x,o:ae}}function ki(l,d,u,i,f,g){var T=u.setZone,A=u.zone;if(l&&Object.keys(l).length!==0){var D=d||A,x=Ct.fromObject(l,r({},u,{zone:D,specificOffset:g}));return T?x:x.setZone(A)}else return Ct.invalid(new kt("unparsable",'the input "'+f+`" can't be parsed as `+i))}function qi(l,d,u){return u===void 0&&(u=!0),l.isValid?De.create(St.create("en-US"),{allowZ:u,forceSimple:!0}).formatDateTimeFromString(l,d):null}function Kr(l,d){var u=l.c.year>9999||l.c.year<0,i="";return u&&l.c.year>=0&&(i+="+"),i+=Fe(l.c.year,u?6:4),d?(i+="-",i+=Fe(l.c.month),i+="-",i+=Fe(l.c.day)):(i+=Fe(l.c.month),i+=Fe(l.c.day)),i}function cu(l,d,u,i,f){var g=Fe(l.c.hour);return d?(g+=":",g+=Fe(l.c.minute),(l.c.second!==0||!u)&&(g+=":")):g+=Fe(l.c.minute),(l.c.second!==0||!u)&&(g+=Fe(l.c.second),(l.c.millisecond!==0||!i)&&(g+=".",g+=Fe(l.c.millisecond,3))),f&&(l.isOffsetFixed&&l.offset===0?g+="Z":l.o<0?(g+="-",g+=Fe(Math.trunc(-l.o/60)),g+=":",g+=Fe(Math.trunc(-l.o%60))):(g+="+",g+=Fe(Math.trunc(l.o/60)),g+=":",g+=Fe(Math.trunc(l.o%60)))),g}var fu={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},ah={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},ih={ordinal:1,hour:0,minute:0,second:0,millisecond:0},du=["year","month","day","hour","minute","second","millisecond"],rh=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],oh=["year","ordinal","hour","minute","second","millisecond"];function mu(l){var d={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[l.toLowerCase()];if(!d)throw new B(l);return d}function hu(l,d){var u=gn(d.zone,yt.defaultZone),i=St.fromObject(d),f=yt.now(),g,T;if(P(l.year))g=f;else{for(var A=N(du),D;!(D=A()).done;){var x=D.value;P(l[x])&&(l[x]=fu[x])}var ae=iu(l)||ru(l);if(ae)return Ct.invalid(ae);var ee=u.offset(f),ne=Ki(l,ee,u);g=ne[0],T=ne[1]}return new Ct({ts:g,zone:u,loc:i,o:T})}function _u(l,d,u){var i=P(u.round)?!0:u.round,f=function(ee,ne){ee=Qe(ee,i||u.calendary?0:2,!0);var ve=d.loc.clone(u).relFormatter(u);return ve.format(ee,ne)},g=function(ee){return u.calendary?d.hasSame(l,ee)?0:d.startOf(ee).diff(l.startOf(ee),ee).get(ee):d.diff(l,ee).get(ee)};if(u.unit)return f(g(u.unit),u.unit);for(var T=N(u.units),A;!(A=T()).done;){var D=A.value,x=g(D);if(Math.abs(x)>=1)return f(x,D)}return f(l>d?-0:0,u.units[u.units.length-1])}function gu(l){var d={},u;return l.length>0&&typeof l[l.length-1]=="object"?(d=l[l.length-1],u=Array.from(l).slice(0,l.length-1)):u=Array.from(l),[d,u]}var Ct=function(){function l(u){var i=u.zone||yt.defaultZone,f=u.invalid||(Number.isNaN(u.ts)?new kt("invalid input"):null)||(i.isValid?null:Wi(i));this.ts=P(u.ts)?yt.now():u.ts;var g=null,T=null;if(!f){var A=u.old&&u.old.ts===this.ts&&u.old.zone.equals(i);if(A){var D=[u.old.c,u.old.o];g=D[0],T=D[1]}else{var x=i.offset(this.ts);g=su(this.ts,x),f=Number.isNaN(g.year)?new kt("invalid input"):null,g=f?null:g,T=f?null:x}}this._zone=i,this.loc=u.loc||St.create(),this.invalid=f,this.weekData=null,this.c=g,this.o=T,this.isLuxonDateTime=!0}l.now=function(){return new l({})},l.local=function(){var i=gu(arguments),f=i[0],g=i[1],T=g[0],A=g[1],D=g[2],x=g[3],ae=g[4],ee=g[5],ne=g[6];return hu({year:T,month:A,day:D,hour:x,minute:ae,second:ee,millisecond:ne},f)},l.utc=function(){var i=gu(arguments),f=i[0],g=i[1],T=g[0],A=g[1],D=g[2],x=g[3],ae=g[4],ee=g[5],ne=g[6];return f.zone=It.utcInstance,hu({year:T,month:A,day:D,hour:x,minute:ae,second:ee,millisecond:ne},f)},l.fromJSDate=function(i,f){f===void 0&&(f={});var g=Ze(i)?i.valueOf():NaN;if(Number.isNaN(g))return l.invalid("invalid input");var T=gn(f.zone,yt.defaultZone);return T.isValid?new l({ts:g,zone:T,loc:St.fromObject(f)}):l.invalid(Wi(T))},l.fromMillis=function(i,f){if(f===void 0&&(f={}),fe(i))return i<-ou||i>ou?l.invalid("Timestamp out of range"):new l({ts:i,zone:gn(f.zone,yt.defaultZone),loc:St.fromObject(f)});throw new z("fromMillis requires a numerical input, but received a "+typeof i+" with value "+i)},l.fromSeconds=function(i,f){if(f===void 0&&(f={}),fe(i))return new l({ts:i*1e3,zone:gn(f.zone,yt.defaultZone),loc:St.fromObject(f)});throw new z("fromSeconds requires a numerical input")},l.fromObject=function(i,f){f===void 0&&(f={}),i=i||{};var g=gn(f.zone,yt.defaultZone);if(!g.isValid)return l.invalid(Wi(g));var T=yt.now(),A=P(f.specificOffset)?g.offset(T):f.specificOffset,D=At(i,mu),x=!P(D.ordinal),ae=!P(D.year),ee=!P(D.month)||!P(D.day),ne=ae||ee,ve=D.weekYear||D.weekNumber,Ne=St.fromObject(f);if((ne||x)&&ve)throw new U("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(ee&&x)throw new U("Can't mix ordinal dates with month/day");var at=ve||D.weekday&&!ne,$e,Oe,Ht=su(T,A);at?($e=rh,Oe=ah,Ht=Hr(Ht)):x?($e=oh,Oe=ih,Ht=Vr(Ht)):($e=du,Oe=fu);for(var Yi=!1,qr=N($e),bu;!(bu=qr()).done;){var wi=bu.value,sh=D[wi];P(sh)?Yi?D[wi]=Oe[wi]:D[wi]=Ht[wi]:Yi=!0}var uh=at?th(D):x?nh(D):iu(D),yu=uh||ru(D);if(yu)return l.invalid(yu);var ch=at?nu(D):x?au(D):D,pu=Ki(ch,A,g),fh=pu[0],dh=pu[1],Yr=new l({ts:fh,zone:g,o:dh,loc:Ne});return D.weekday&&ne&&i.weekday!==Yr.weekday?l.invalid("mismatched weekday","you can't specify both a weekday of "+D.weekday+" and a date of "+Yr.toISO()):Yr},l.fromISO=function(i,f){f===void 0&&(f={});var g=pm(i),T=g[0],A=g[1];return ki(T,A,f,"ISO 8601",i)},l.fromRFC2822=function(i,f){f===void 0&&(f={});var g=vm(i),T=g[0],A=g[1];return ki(T,A,f,"RFC 2822",i)},l.fromHTTP=function(i,f){f===void 0&&(f={});var g=Tm(i),T=g[0],A=g[1];return ki(T,A,f,"HTTP",f)},l.fromFormat=function(i,f,g){if(g===void 0&&(g={}),P(i)||P(f))throw new z("fromFormat requires an input string and a format");var T=g,A=T.locale,D=A===void 0?null:A,x=T.numberingSystem,ae=x===void 0?null:x,ee=St.fromOpts({locale:D,numberingSystem:ae,defaultToEN:!0}),ne=eh(ee,i,f),ve=ne[0],Ne=ne[1],at=ne[2],$e=ne[3];return $e?l.invalid($e):ki(ve,Ne,g,"format "+f,i,at)},l.fromString=function(i,f,g){return g===void 0&&(g={}),l.fromFormat(i,f,g)},l.fromSQL=function(i,f){f===void 0&&(f={});var g=zm(i),T=g[0],A=g[1];return ki(T,A,f,"SQL",i)},l.invalid=function(i,f){if(f===void 0&&(f=null),!i)throw new z("need to specify a reason the DateTime is invalid");var g=i instanceof kt?i:new kt(i,f);if(yt.throwOnInvalid)throw new M(g);return new l({invalid:g})},l.isDateTime=function(i){return i&&i.isLuxonDateTime||!1};var d=l.prototype;return d.get=function(i){return this[i]},d.resolvedLocaleOptions=function(i){i===void 0&&(i={});var f=De.create(this.loc.clone(i),i).resolvedOptions(this),g=f.locale,T=f.numberingSystem,A=f.calendar;return{locale:g,numberingSystem:T,outputCalendar:A}},d.toUTC=function(i,f){return i===void 0&&(i=0),f===void 0&&(f={}),this.setZone(It.instance(i),f)},d.toLocal=function(){return this.setZone(yt.defaultZone)},d.setZone=function(i,f){var g=f===void 0?{}:f,T=g.keepLocalTime,A=T===void 0?!1:T,D=g.keepCalendarTime,x=D===void 0?!1:D;if(i=gn(i,yt.defaultZone),i.equals(this.zone))return this;if(i.isValid){var ae=this.ts;if(A||x){var ee=i.offset(this.ts),ne=this.toObject(),ve=Ki(ne,ee,i);ae=ve[0]}return Ti(this,{ts:ae,zone:i})}else return l.invalid(Wi(i))},d.reconfigure=function(i){var f=i===void 0?{}:i,g=f.locale,T=f.numberingSystem,A=f.outputCalendar,D=this.loc.clone({locale:g,numberingSystem:T,outputCalendar:A});return Ti(this,{loc:D})},d.setLocale=function(i){return this.reconfigure({locale:i})},d.set=function(i){if(!this.isValid)return this;var f=At(i,mu),g=!P(f.weekYear)||!P(f.weekNumber)||!P(f.weekday),T=!P(f.ordinal),A=!P(f.year),D=!P(f.month)||!P(f.day),x=A||D,ae=f.weekYear||f.weekNumber;if((x||T)&&ae)throw new U("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(D&&T)throw new U("Can't mix ordinal dates with month/day");var ee;g?ee=nu(r({},Hr(this.c),f)):P(f.ordinal)?(ee=r({},this.toObject(),f),P(f.day)&&(ee.day=Math.min(mt(ee.year,ee.month),ee.day))):ee=au(r({},Vr(this.c),f));var ne=Ki(ee,this.o,this.zone),ve=ne[0],Ne=ne[1];return Ti(this,{ts:ve,o:Ne})},d.plus=function(i){if(!this.isValid)return this;var f=jt.fromDurationLike(i);return Ti(this,uu(this,f))},d.minus=function(i){if(!this.isValid)return this;var f=jt.fromDurationLike(i).negate();return Ti(this,uu(this,f))},d.startOf=function(i){if(!this.isValid)return this;var f={},g=jt.normalizeUnit(i);switch(g){case"years":f.month=1;case"quarters":case"months":f.day=1;case"weeks":case"days":f.hour=0;case"hours":f.minute=0;case"minutes":f.second=0;case"seconds":f.millisecond=0;break}if(g==="weeks"&&(f.weekday=1),g==="quarters"){var T=Math.ceil(this.month/3);f.month=(T-1)*3+1}return this.set(f)},d.endOf=function(i){var f;return this.isValid?this.plus((f={},f[i]=1,f)).startOf(i).minus(1):this},d.toFormat=function(i,f){return f===void 0&&(f={}),this.isValid?De.create(this.loc.redefaultToEN(f)).formatDateTimeFromString(this,i):Ur},d.toLocaleString=function(i,f){return i===void 0&&(i=H),f===void 0&&(f={}),this.isValid?De.create(this.loc.clone(f),i).formatDateTime(this):Ur},d.toLocaleParts=function(i){return i===void 0&&(i={}),this.isValid?De.create(this.loc.clone(i),i).formatDateTimeParts(this):[]},d.toISO=function(i){var f=i===void 0?{}:i,g=f.format,T=g===void 0?"extended":g,A=f.suppressSeconds,D=A===void 0?!1:A,x=f.suppressMilliseconds,ae=x===void 0?!1:x,ee=f.includeOffset,ne=ee===void 0?!0:ee;if(!this.isValid)return null;var ve=T==="extended",Ne=Kr(this,ve);return Ne+="T",Ne+=cu(this,ve,D,ae,ne),Ne},d.toISODate=function(i){var f=i===void 0?{}:i,g=f.format,T=g===void 0?"extended":g;return this.isValid?Kr(this,T==="extended"):null},d.toISOWeekDate=function(){return qi(this,"kkkk-'W'WW-c")},d.toISOTime=function(i){var f=i===void 0?{}:i,g=f.suppressMilliseconds,T=g===void 0?!1:g,A=f.suppressSeconds,D=A===void 0?!1:A,x=f.includeOffset,ae=x===void 0?!0:x,ee=f.includePrefix,ne=ee===void 0?!1:ee,ve=f.format,Ne=ve===void 0?"extended":ve;if(!this.isValid)return null;var at=ne?"T":"";return at+cu(this,Ne==="extended",D,T,ae)},d.toRFC2822=function(){return qi(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)},d.toHTTP=function(){return qi(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")},d.toSQLDate=function(){return this.isValid?Kr(this,!0):null},d.toSQLTime=function(i){var f=i===void 0?{}:i,g=f.includeOffset,T=g===void 0?!0:g,A=f.includeZone,D=A===void 0?!1:A,x="HH:mm:ss.SSS";return(D||T)&&(x+=" ",D?x+="z":T&&(x+="ZZ")),qi(this,x,!0)},d.toSQL=function(i){return i===void 0&&(i={}),this.isValid?this.toSQLDate()+" "+this.toSQLTime(i):null},d.toString=function(){return this.isValid?this.toISO():Ur},d.valueOf=function(){return this.toMillis()},d.toMillis=function(){return this.isValid?this.ts:NaN},d.toSeconds=function(){return this.isValid?this.ts/1e3:NaN},d.toJSON=function(){return this.toISO()},d.toBSON=function(){return this.toJSDate()},d.toObject=function(i){if(i===void 0&&(i={}),!this.isValid)return{};var f=r({},this.c);return i.includeConfig&&(f.outputCalendar=this.outputCalendar,f.numberingSystem=this.loc.numberingSystem,f.locale=this.loc.locale),f},d.toJSDate=function(){return new Date(this.isValid?this.ts:NaN)},d.diff=function(i,f,g){if(f===void 0&&(f="milliseconds"),g===void 0&&(g={}),!this.isValid||!i.isValid)return jt.invalid("created by diffing an invalid DateTime");var T=r({locale:this.locale,numberingSystem:this.numberingSystem},g),A=it(f).map(jt.normalizeUnit),D=i.valueOf()>this.valueOf(),x=D?this:i,ae=D?i:this,ee=Bm(x,ae,A,T);return D?ee.negate():ee},d.diffNow=function(i,f){return i===void 0&&(i="milliseconds"),f===void 0&&(f={}),this.diff(l.now(),i,f)},d.until=function(i){return this.isValid?pi.fromDateTimes(this,i):this},d.hasSame=function(i,f){if(!this.isValid)return!1;var g=i.valueOf(),T=this.setZone(i.zone,{keepLocalTime:!0});return T.startOf(f)<=g&&g<=T.endOf(f)},d.equals=function(i){return this.isValid&&i.isValid&&this.valueOf()===i.valueOf()&&this.zone.equals(i.zone)&&this.loc.equals(i.loc)},d.toRelative=function(i){if(i===void 0&&(i={}),!this.isValid)return null;var f=i.base||l.fromObject({},{zone:this.zone}),g=i.padding?this<f?-i.padding:i.padding:0,T=["years","months","days","hours","minutes","seconds"],A=i.unit;return Array.isArray(i.unit)&&(T=i.unit,A=void 0),_u(f,this.plus(g),r({},i,{numeric:"always",units:T,unit:A}))},d.toRelativeCalendar=function(i){return i===void 0&&(i={}),this.isValid?_u(i.base||l.fromObject({},{zone:this.zone}),this,r({},i,{numeric:"auto",units:["years","months","days"],calendary:!0})):null},l.min=function(){for(var i=arguments.length,f=new Array(i),g=0;g<i;g++)f[g]=arguments[g];if(!f.every(l.isDateTime))throw new z("min requires all arguments be DateTimes");return Ue(f,function(T){return T.valueOf()},Math.min)},l.max=function(){for(var i=arguments.length,f=new Array(i),g=0;g<i;g++)f[g]=arguments[g];if(!f.every(l.isDateTime))throw new z("max requires all arguments be DateTimes");return Ue(f,function(T){return T.valueOf()},Math.max)},l.fromFormatExplain=function(i,f,g){g===void 0&&(g={});var T=g,A=T.locale,D=A===void 0?null:A,x=T.numberingSystem,ae=x===void 0?null:x,ee=St.fromOpts({locale:D,numberingSystem:ae,defaultToEN:!0});return Js(ee,i,f)},l.fromStringExplain=function(i,f,g){return g===void 0&&(g={}),l.fromFormatExplain(i,f,g)},a(l,[{key:"isValid",get:function(){return this.invalid===null}},{key:"invalidReason",get:function(){return this.invalid?this.invalid.reason:null}},{key:"invalidExplanation",get:function(){return this.invalid?this.invalid.explanation:null}},{key:"locale",get:function(){return this.isValid?this.loc.locale:null}},{key:"numberingSystem",get:function(){return this.isValid?this.loc.numberingSystem:null}},{key:"outputCalendar",get:function(){return this.isValid?this.loc.outputCalendar:null}},{key:"zone",get:function(){return this._zone}},{key:"zoneName",get:function(){return this.isValid?this.zone.name:null}},{key:"year",get:function(){return this.isValid?this.c.year:NaN}},{key:"quarter",get:function(){return this.isValid?Math.ceil(this.c.month/3):NaN}},{key:"month",get:function(){return this.isValid?this.c.month:NaN}},{key:"day",get:function(){return this.isValid?this.c.day:NaN}},{key:"hour",get:function(){return this.isValid?this.c.hour:NaN}},{key:"minute",get:function(){return this.isValid?this.c.minute:NaN}},{key:"second",get:function(){return this.isValid?this.c.second:NaN}},{key:"millisecond",get:function(){return this.isValid?this.c.millisecond:NaN}},{key:"weekYear",get:function(){return this.isValid?Wr(this).weekYear:NaN}},{key:"weekNumber",get:function(){return this.isValid?Wr(this).weekNumber:NaN}},{key:"weekday",get:function(){return this.isValid?Wr(this).weekday:NaN}},{key:"ordinal",get:function(){return this.isValid?Vr(this.c).ordinal:NaN}},{key:"monthShort",get:function(){return this.isValid?vi.months("short",{locObj:this.loc})[this.month-1]:null}},{key:"monthLong",get:function(){return this.isValid?vi.months("long",{locObj:this.loc})[this.month-1]:null}},{key:"weekdayShort",get:function(){return this.isValid?vi.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}},{key:"weekdayLong",get:function(){return this.isValid?vi.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}},{key:"offset",get:function(){return this.isValid?+this.o:NaN}},{key:"offsetNameShort",get:function(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}},{key:"offsetNameLong",get:function(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}},{key:"isOffsetFixed",get:function(){return this.isValid?this.zone.isUniversal:null}},{key:"isInDST",get:function(){return this.isOffsetFixed?!1:this.offset>this.set({month:1}).offset||this.offset>this.set({month:5}).offset}},{key:"isInLeapYear",get:function(){return Ve(this.year)}},{key:"daysInMonth",get:function(){return mt(this.year,this.month)}},{key:"daysInYear",get:function(){return this.isValid?Tt(this.year):NaN}},{key:"weeksInWeekYear",get:function(){return this.isValid?pt(this.weekYear):NaN}}],[{key:"DATE_SHORT",get:function(){return H}},{key:"DATE_MED",get:function(){return Z}},{key:"DATE_MED_WITH_WEEKDAY",get:function(){return de}},{key:"DATE_FULL",get:function(){return ke}},{key:"DATE_HUGE",get:function(){return oe}},{key:"TIME_SIMPLE",get:function(){return j}},{key:"TIME_WITH_SECONDS",get:function(){return q}},{key:"TIME_WITH_SHORT_OFFSET",get:function(){return ce}},{key:"TIME_WITH_LONG_OFFSET",get:function(){return Ge}},{key:"TIME_24_SIMPLE",get:function(){return Pe}},{key:"TIME_24_WITH_SECONDS",get:function(){return _e}},{key:"TIME_24_WITH_SHORT_OFFSET",get:function(){return ze}},{key:"TIME_24_WITH_LONG_OFFSET",get:function(){return Be}},{key:"DATETIME_SHORT",get:function(){return F}},{key:"DATETIME_SHORT_WITH_SECONDS",get:function(){return le}},{key:"DATETIME_MED",get:function(){return se}},{key:"DATETIME_MED_WITH_SECONDS",get:function(){return ye}},{key:"DATETIME_MED_WITH_WEEKDAY",get:function(){return ue}},{key:"DATETIME_FULL",get:function(){return ie}},{key:"DATETIME_FULL_WITH_SECONDS",get:function(){return be}},{key:"DATETIME_HUGE",get:function(){return Ce}},{key:"DATETIME_HUGE_WITH_SECONDS",get:function(){return Q}}]),l}();function Mi(l){if(Ct.isDateTime(l))return l;if(l&&l.valueOf&&fe(l.valueOf()))return Ct.fromJSDate(l);if(l&&typeof l=="object")return Ct.fromObject(l);throw new z("Unknown datetime argument: "+l+", of type "+typeof l)}var lh="2.3.0";e.DateTime=Ct,e.Duration=jt,e.FixedOffsetZone=It,e.IANAZone=rn,e.Info=vi,e.Interval=pi,e.InvalidZone=Mn,e.Settings=yt,e.SystemZone=qn,e.VERSION=lh,e.Zone=Ln});function Do(t){return Ea.IANAZone.isValidZone(t)}function No(t,e){const n=Ea.DateTime.fromJSDate(t).toLocaleString(Ea.DateTime.TIME_SIMPLE).replace(/\./g,"");try{const a=Ea.DateTime.fromJSDate(t,{zone:e});return!a.isValid&&(a.invalidReason==="unsupported zone"||!e)?n:a.toLocaleString(Ea.DateTime.TIME_SIMPLE).replace(/\./g,"")}catch(a){return n}}function Io(t,e){const n=Ea.DateTime.fromJSDate(t,{zone:e});return e&&!Do(e)||!n.isValid&&(n.invalidReason==="unsupported zone"||!e)?"":n.offsetNameShort}var rr=new Date,or=new Date;function qt(t,e,n,a){function r(o){return t(o=arguments.length===0?new Date:new Date(+o)),o}return r.floor=function(o){return t(o=new Date(+o)),o},r.ceil=function(o){return t(o=new Date(o-1)),e(o,1),t(o),o},r.round=function(o){var s=r(o),h=r.ceil(o);return o-s<h-o?s:h},r.offset=function(o,s){return e(o=new Date(+o),s==null?1:Math.floor(s)),o},r.range=function(o,s,h){var c=[],_;if(o=r.ceil(o),h=h==null?1:Math.floor(h),!(o<s)||!(h>0))return c;do c.push(_=new Date(+o)),e(o,h),t(o);while(_<o&&o<s);return c},r.filter=function(o){return qt(function(s){if(s>=s)for(;t(s),!o(s);)s.setTime(s-1)},function(s,h){if(s>=s)if(h<0)for(;++h<=0;)for(;e(s,-1),!o(s););else for(;--h>=0;)for(;e(s,1),!o(s););})},n&&(r.count=function(o,s){return rr.setTime(+o),or.setTime(+s),t(rr),t(or),Math.floor(n(rr,or))},r.every=function(o){return o=Math.floor(o),!isFinite(o)||!(o>0)?null:o>1?r.filter(a?function(s){return a(s)%o==0}:function(s){return r.count(0,s)%o==0}):r}),r}var lr=qt(function(){},function(t,e){t.setTime(+t+e)},function(t,e){return e-t});lr.every=function(t){return t=Math.floor(t),!isFinite(t)||!(t>0)?null:t>1?qt(function(e){e.setTime(Math.floor(e/t)*t)},function(e,n){e.setTime(+e+n*t)},function(e,n){return(n-e)/t}):lr};const Wn=1e3,zn=Wn*60,ha=zn*60,_a=ha*24,sr=_a*7,Lo=_a*30,ur=_a*365;var ai=qt(function(t){t.setTime(t-t.getMilliseconds())},function(t,e){t.setTime(+t+e*Wn)},function(t,e){return(e-t)/Wn},function(t){return t.getUTCSeconds()}),Kn=qt(function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*Wn)},function(t,e){t.setTime(+t+e*zn)},function(t,e){return(e-t)/zn},function(t){return t.getMinutes()}),aa=qt(function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*Wn-t.getMinutes()*zn)},function(t,e){t.setTime(+t+e*ha)},function(t,e){return(e-t)/ha},function(t){return t.getHours()}),Gt=qt(t=>t.setHours(0,0,0,0),(t,e)=>t.setDate(t.getDate()+e),(t,e)=>(e-t-(e.getTimezoneOffset()-t.getTimezoneOffset())*zn)/_a,t=>t.getDate()-1);function ga(t){return qt(function(e){e.setDate(e.getDate()-(e.getDay()+7-t)%7),e.setHours(0,0,0,0)},function(e,n){e.setDate(e.getDate()+n*7)},function(e,n){return(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*zn)/sr})}var Oa=ga(0),cr=ga(1);ga(2),ga(3);var ii=ga(4);ga(5),ga(6);var Po=qt(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,e){t.setMonth(t.getMonth()+e)},function(t,e){return e.getMonth()-t.getMonth()+(e.getFullYear()-t.getFullYear())*12},function(t){return t.getMonth()}),ia=qt(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,e){t.setFullYear(t.getFullYear()+e)},function(t,e){return e.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});ia.every=function(t){return!isFinite(t=Math.floor(t))||!(t>0)?null:qt(function(e){e.setFullYear(Math.floor(e.getFullYear()/t)*t),e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,n){e.setFullYear(e.getFullYear()+n*t)})};var Fo=qt(function(t){t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCDate(t.getUTCDate()+e)},function(t,e){return(e-t)/_a},function(t){return t.getUTCDate()-1});function ba(t){return qt(function(e){e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+7-t)%7),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCDate(e.getUTCDate()+n*7)},function(e,n){return(n-e)/sr})}var xc=ba(0),fr=ba(1);ba(2),ba(3);var ri=ba(4);ba(5),ba(6);var Da=qt(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCFullYear(t.getUTCFullYear()+e)},function(t,e){return e.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});Da.every=function(t){return!isFinite(t=Math.floor(t))||!(t>0)?null:qt(function(e){e.setUTCFullYear(Math.floor(e.getUTCFullYear()/t)*t),e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n*t)})};function dr(t,e){return t==null||e==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function mr(t){let e=t,n=t,a=t;t.length!==2&&(e=(h,c)=>t(h)-c,n=dr,a=(h,c)=>dr(t(h),c));function r(h,c,_=0,y=h.length){if(_<y){if(n(c,c)!==0)return y;do{const v=_+y>>>1;a(h[v],c)<0?_=v+1:y=v}while(_<y)}return _}function o(h,c,_=0,y=h.length){if(_<y){if(n(c,c)!==0)return y;do{const v=_+y>>>1;a(h[v],c)<=0?_=v+1:y=v}while(_<y)}return _}function s(h,c,_=0,y=h.length){const v=r(h,c,_,y-1);return v>_&&e(h[v-1],c)>-e(h[v],c)?v-1:v}return{left:r,center:s,right:o}}function jc(t){return t===null?NaN:+t}const Hc=mr(dr).right;mr(jc).center;var hr=Math.sqrt(50),_r=Math.sqrt(10),gr=Math.sqrt(2);function Vc(t,e,n){var a,r=-1,o,s,h;if(e=+e,t=+t,n=+n,t===e&&n>0)return[t];if((a=e<t)&&(o=t,t=e,e=o),(h=Bo(t,e,n))===0||!isFinite(h))return[];if(h>0){let c=Math.round(t/h),_=Math.round(e/h);for(c*h<t&&++c,_*h>e&&--_,s=new Array(o=_-c+1);++r<o;)s[r]=(c+r)*h}else{h=-h;let c=Math.round(t*h),_=Math.round(e*h);for(c/h<t&&++c,_/h>e&&--_,s=new Array(o=_-c+1);++r<o;)s[r]=(c+r)/h}return a&&s.reverse(),s}function Bo(t,e,n){var a=(e-t)/Math.max(0,n),r=Math.floor(Math.log(a)/Math.LN10),o=a/Math.pow(10,r);return r>=0?(o>=hr?10:o>=_r?5:o>=gr?2:1)*Math.pow(10,r):-Math.pow(10,-r)/(o>=hr?10:o>=_r?5:o>=gr?2:1)}function br(t,e,n){var a=Math.abs(e-t)/Math.max(0,n),r=Math.pow(10,Math.floor(Math.log(a)/Math.LN10)),o=a/r;return o>=hr?r*=10:o>=_r?r*=5:o>=gr&&(r*=2),e<t?-r:r}function Uc(t,e,n,a,r,o){const s=[[ai,1,Wn],[ai,5,5*Wn],[ai,15,15*Wn],[ai,30,30*Wn],[o,1,zn],[o,5,5*zn],[o,15,15*zn],[o,30,30*zn],[r,1,ha],[r,3,3*ha],[r,6,6*ha],[r,12,12*ha],[a,1,_a],[a,2,2*_a],[n,1,sr],[e,1,Lo],[e,3,3*Lo],[t,1,ur]];function h(_,y,v){const k=y<_;k&&([_,y]=[y,_]);const E=v&&typeof v.range=="function"?v:c(_,y,v),S=E?E.range(_,+y+1):[];return k?S.reverse():S}function c(_,y,v){const k=Math.abs(y-_)/v,E=mr(([,,w])=>w).right(s,k);if(E===s.length)return t.every(br(_/ur,y/ur,v));if(E===0)return lr.every(Math.max(br(_,y,v),1));const[S,N]=s[k/s[E-1][2]<s[E][2]/k?E-1:E];return S.every(N)}return[h,c]}const[Wc,Kc]=Uc(ia,Po,Oa,Gt,aa,Kn);function Ro(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t);break}return this}function yr(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function xo(t,e){var n=Object.create(t.prototype);for(var a in e)n[a]=e[a];return n}function oi(){}var li=.7,Li=1/li,Na="\\s*([+-]?\\d+)\\s*",si="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",En="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",qc=/^#([0-9a-f]{3,8})$/,Yc=new RegExp("^rgb\\("+[Na,Na,Na]+"\\)$"),Zc=new RegExp("^rgb\\("+[En,En,En]+"\\)$"),Jc=new RegExp("^rgba\\("+[Na,Na,Na,si]+"\\)$"),Qc=new RegExp("^rgba\\("+[En,En,En,si]+"\\)$"),Xc=new RegExp("^hsl\\("+[si,En,En]+"\\)$"),$c=new RegExp("^hsla\\("+[si,En,En,si]+"\\)$"),jo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};yr(oi,ui,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:Ho,formatHex:Ho,formatHsl:e0,formatRgb:Vo,toString:Vo});function Ho(){return this.rgb().formatHex()}function e0(){return Yo(this).formatHsl()}function Vo(){return this.rgb().formatRgb()}function ui(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=qc.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?Uo(e):n===3?new tn(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Pi(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Pi(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=Yc.exec(t))?new tn(e[1],e[2],e[3],1):(e=Zc.exec(t))?new tn(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=Jc.exec(t))?Pi(e[1],e[2],e[3],e[4]):(e=Qc.exec(t))?Pi(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=Xc.exec(t))?qo(e[1],e[2]/100,e[3]/100,1):(e=$c.exec(t))?qo(e[1],e[2]/100,e[3]/100,e[4]):jo.hasOwnProperty(t)?Uo(jo[t]):t==="transparent"?new tn(NaN,NaN,NaN,0):null}function Uo(t){return new tn(t>>16&255,t>>8&255,t&255,1)}function Pi(t,e,n,a){return a<=0&&(t=e=n=NaN),new tn(t,e,n,a)}function t0(t){return t instanceof oi||(t=ui(t)),t?(t=t.rgb(),new tn(t.r,t.g,t.b,t.opacity)):new tn}function pr(t,e,n,a){return arguments.length===1?t0(t):new tn(t,e,n,a==null?1:a)}function tn(t,e,n,a){this.r=+t,this.g=+e,this.b=+n,this.opacity=+a}yr(tn,pr,xo(oi,{brighter:function(t){return t=t==null?Li:Math.pow(Li,t),new tn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=t==null?li:Math.pow(li,t),new tn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Wo,formatHex:Wo,formatRgb:Ko,toString:Ko}));function Wo(){return"#"+vr(this.r)+vr(this.g)+vr(this.b)}function Ko(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(t===1?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(t===1?")":", "+t+")")}function vr(t){return t=Math.max(0,Math.min(255,Math.round(t)||0)),(t<16?"0":"")+t.toString(16)}function qo(t,e,n,a){return a<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new On(t,e,n,a)}function Yo(t){if(t instanceof On)return new On(t.h,t.s,t.l,t.opacity);if(t instanceof oi||(t=ui(t)),!t)return new On;if(t instanceof On)return t;t=t.rgb();var e=t.r/255,n=t.g/255,a=t.b/255,r=Math.min(e,n,a),o=Math.max(e,n,a),s=NaN,h=o-r,c=(o+r)/2;return h?(e===o?s=(n-a)/h+(n<a)*6:n===o?s=(a-e)/h+2:s=(e-n)/h+4,h/=c<.5?o+r:2-o-r,s*=60):h=c>0&&c<1?0:s,new On(s,h,c,t.opacity)}function n0(t,e,n,a){return arguments.length===1?Yo(t):new On(t,e,n,a==null?1:a)}function On(t,e,n,a){this.h=+t,this.s=+e,this.l=+n,this.opacity=+a}yr(On,n0,xo(oi,{brighter:function(t){return t=t==null?Li:Math.pow(Li,t),new On(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=t==null?li:Math.pow(li,t),new On(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,a=n+(n<.5?n:1-n)*e,r=2*n-a;return new tn(Tr(t>=240?t-240:t+120,r,a),Tr(t,r,a),Tr(t<120?t+240:t-120,r,a),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(t===1?"hsl(":"hsla(")+(this.h||0)+", "+(this.s||0)*100+"%, "+(this.l||0)*100+"%"+(t===1?")":", "+t+")")}}));function Tr(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}var kr=t=>()=>t;function a0(t,e){return function(n){return t+n*e}}function i0(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(a){return Math.pow(t+a*e,n)}}function r0(t){return(t=+t)==1?Zo:function(e,n){return n-e?i0(e,n,t):kr(isNaN(e)?n:e)}}function Zo(t,e){var n=e-t;return n?a0(t,n):kr(isNaN(t)?e:t)}var Jo=function t(e){var n=r0(e);function a(r,o){var s=n((r=pr(r)).r,(o=pr(o)).r),h=n(r.g,o.g),c=n(r.b,o.b),_=Zo(r.opacity,o.opacity);return function(y){return r.r=s(y),r.g=h(y),r.b=c(y),r.opacity=_(y),r+""}}return a.gamma=t,a}(1);function o0(t,e){e||(e=[]);var n=t?Math.min(e.length,t.length):0,a=e.slice(),r;return function(o){for(r=0;r<n;++r)a[r]=t[r]*(1-o)+e[r]*o;return a}}function l0(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function s0(t,e){var n=e?e.length:0,a=t?Math.min(n,t.length):0,r=new Array(a),o=new Array(n),s;for(s=0;s<a;++s)r[s]=Ar(t[s],e[s]);for(;s<n;++s)o[s]=e[s];return function(h){for(s=0;s<a;++s)o[s]=r[s](h);return o}}function u0(t,e){var n=new Date;return t=+t,e=+e,function(a){return n.setTime(t*(1-a)+e*a),n}}function Fi(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}function c0(t,e){var n={},a={},r;(t===null||typeof t!="object")&&(t={}),(e===null||typeof e!="object")&&(e={});for(r in e)r in t?n[r]=Ar(t[r],e[r]):a[r]=e[r];return function(o){for(r in n)a[r]=n[r](o);return a}}var Mr=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,wr=new RegExp(Mr.source,"g");function f0(t){return function(){return t}}function d0(t){return function(e){return t(e)+""}}function m0(t,e){var n=Mr.lastIndex=wr.lastIndex=0,a,r,o,s=-1,h=[],c=[];for(t=t+"",e=e+"";(a=Mr.exec(t))&&(r=wr.exec(e));)(o=r.index)>n&&(o=e.slice(n,o),h[s]?h[s]+=o:h[++s]=o),(a=a[0])===(r=r[0])?h[s]?h[s]+=r:h[++s]=r:(h[++s]=null,c.push({i:s,x:Fi(a,r)})),n=wr.lastIndex;return n<e.length&&(o=e.slice(n),h[s]?h[s]+=o:h[++s]=o),h.length<2?c[0]?d0(c[0].x):f0(e):(e=c.length,function(_){for(var y=0,v;y<e;++y)h[(v=c[y]).i]=v.x(_);return h.join("")})}function Ar(t,e){var n=typeof e,a;return e==null||n==="boolean"?kr(e):(n==="number"?Fi:n==="string"?(a=ui(e))?(e=a,Jo):m0:e instanceof ui?Jo:e instanceof Date?u0:l0(e)?o0:Array.isArray(e)?s0:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?c0:Fi)(t,e)}function h0(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}}function _0(t){return function(){return t}}function g0(t){return+t}var Qo=[0,1];function Ia(t){return t}function Sr(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:_0(isNaN(e)?NaN:.5)}function b0(t,e){var n;return t>e&&(n=t,t=e,e=n),function(a){return Math.max(t,Math.min(e,a))}}function y0(t,e,n){var a=t[0],r=t[1],o=e[0],s=e[1];return r<a?(a=Sr(r,a),o=n(s,o)):(a=Sr(a,r),o=n(o,s)),function(h){return o(a(h))}}function p0(t,e,n){var a=Math.min(t.length,e.length)-1,r=new Array(a),o=new Array(a),s=-1;for(t[a]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++s<a;)r[s]=Sr(t[s],t[s+1]),o[s]=n(e[s],e[s+1]);return function(h){var c=Hc(t,h,1,a)-1;return o[c](r[c](h))}}function Xo(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function v0(){var t=Qo,e=Qo,n=Ar,a,r,o,s=Ia,h,c,_;function y(){var k=Math.min(t.length,e.length);return s!==Ia&&(s=b0(t[0],t[k-1])),h=k>2?p0:y0,c=_=null,v}function v(k){return k==null||isNaN(k=+k)?o:(c||(c=h(t.map(a),e,n)))(a(s(k)))}return v.invert=function(k){return s(r((_||(_=h(e,t.map(a),Fi)))(k)))},v.domain=function(k){return arguments.length?(t=Array.from(k,g0),y()):t.slice()},v.range=function(k){return arguments.length?(e=Array.from(k),y()):e.slice()},v.rangeRound=function(k){return e=Array.from(k),n=h0,y()},v.clamp=function(k){return arguments.length?(s=k?!0:Ia,y()):s!==Ia},v.interpolate=function(k){return arguments.length?(n=k,y()):n},v.unknown=function(k){return arguments.length?(o=k,v):o},function(k,E){return a=k,r=E,y()}}function $o(){return v0()(Ia,Ia)}function T0(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)}function Bi(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,a=t.slice(0,n);return[a.length>1?a[0]+a.slice(2):a,+t.slice(n+1)]}function La(t){return t=Bi(Math.abs(t)),t?t[1]:NaN}function k0(t,e){return function(n,a){for(var r=n.length,o=[],s=0,h=t[0],c=0;r>0&&h>0&&(c+h+1>a&&(h=Math.max(1,a-c)),o.push(n.substring(r-=h,r+h)),!((c+=h+1)>a));)h=t[s=(s+1)%t.length];return o.reverse().join(e)}}function M0(t){return function(e){return e.replace(/[0-9]/g,function(n){return t[+n]})}}var w0=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ri(t){if(!(e=w0.exec(t)))throw new Error("invalid format: "+t);var e;return new Cr({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}Ri.prototype=Cr.prototype;function Cr(t){this.fill=t.fill===void 0?" ":t.fill+"",this.align=t.align===void 0?">":t.align+"",this.sign=t.sign===void 0?"-":t.sign+"",this.symbol=t.symbol===void 0?"":t.symbol+"",this.zero=!!t.zero,this.width=t.width===void 0?void 0:+t.width,this.comma=!!t.comma,this.precision=t.precision===void 0?void 0:+t.precision,this.trim=!!t.trim,this.type=t.type===void 0?"":t.type+""}Cr.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function A0(t){e:for(var e=t.length,n=1,a=-1,r;n<e;++n)switch(t[n]){case".":a=r=n;break;case"0":a===0&&(a=n),r=n;break;default:if(!+t[n])break e;a>0&&(a=0);break}return a>0?t.slice(0,a)+t.slice(r+1):t}var el;function S0(t,e){var n=Bi(t,e);if(!n)return t+"";var a=n[0],r=n[1],o=r-(el=Math.max(-8,Math.min(8,Math.floor(r/3)))*3)+1,s=a.length;return o===s?a:o>s?a+new Array(o-s+1).join("0"):o>0?a.slice(0,o)+"."+a.slice(o):"0."+new Array(1-o).join("0")+Bi(t,Math.max(0,e+o-1))[0]}function tl(t,e){var n=Bi(t,e);if(!n)return t+"";var a=n[0],r=n[1];return r<0?"0."+new Array(-r).join("0")+a:a.length>r+1?a.slice(0,r+1)+"."+a.slice(r+1):a+new Array(r-a.length+2).join("0")}var nl={"%":(t,e)=>(t*100).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:T0,e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>tl(t*100,e),r:tl,s:S0,X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function al(t){return t}var il=Array.prototype.map,rl=["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];function C0(t){var e=t.grouping===void 0||t.thousands===void 0?al:k0(il.call(t.grouping,Number),t.thousands+""),n=t.currency===void 0?"":t.currency[0]+"",a=t.currency===void 0?"":t.currency[1]+"",r=t.decimal===void 0?".":t.decimal+"",o=t.numerals===void 0?al:M0(il.call(t.numerals,String)),s=t.percent===void 0?"%":t.percent+"",h=t.minus===void 0?"\u2212":t.minus+"",c=t.nan===void 0?"NaN":t.nan+"";function _(v){v=Ri(v);var k=v.fill,E=v.align,S=v.sign,N=v.symbol,w=v.zero,M=v.width,G=v.comma,I=v.precision,U=v.trim,B=v.type;B==="n"?(G=!0,B="g"):nl[B]||(I===void 0&&(I=12),U=!0,B="g"),(w||k==="0"&&E==="=")&&(w=!0,k="0",E="=");var z=N==="$"?n:N==="#"&&/[boxX]/.test(B)?"0"+B.toLowerCase():"",V=N==="$"?a:/[%p]/.test(B)?s:"",L=nl[B],re=/[defgprs%]/.test(B);I=I===void 0?6:/[gprs]/.test(B)?Math.max(1,Math.min(21,I)):Math.max(0,Math.min(20,I));function K(H){var Z=z,de=V,ke,oe,j;if(B==="c")de=L(H)+de,H="";else{H=+H;var q=H<0||1/H<0;if(H=isNaN(H)?c:L(Math.abs(H),I),U&&(H=A0(H)),q&&+H==0&&S!=="+"&&(q=!1),Z=(q?S==="("?S:h:S==="-"||S==="("?"":S)+Z,de=(B==="s"?rl[8+el/3]:"")+de+(q&&S==="("?")":""),re){for(ke=-1,oe=H.length;++ke<oe;)if(j=H.charCodeAt(ke),48>j||j>57){de=(j===46?r+H.slice(ke+1):H.slice(ke))+de,H=H.slice(0,ke);break}}}G&&!w&&(H=e(H,1/0));var ce=Z.length+H.length+de.length,Ge=ce<M?new Array(M-ce+1).join(k):"";switch(G&&w&&(H=e(Ge+H,Ge.length?M-de.length:1/0),Ge=""),E){case"<":H=Z+H+de+Ge;break;case"=":H=Z+Ge+H+de;break;case"^":H=Ge.slice(0,ce=Ge.length>>1)+Z+H+de+Ge.slice(ce);break;default:H=Ge+Z+H+de;break}return o(H)}return K.toString=function(){return v+""},K}function y(v,k){var E=_((v=Ri(v),v.type="f",v)),S=Math.max(-8,Math.min(8,Math.floor(La(k)/3)))*3,N=Math.pow(10,-S),w=rl[8+S/3];return function(M){return E(N*M)+w}}return{format:_,formatPrefix:y}}var xi,ol,ll;G0({thousands:",",grouping:[3],currency:["$",""]});function G0(t){return xi=C0(t),ol=xi.format,ll=xi.formatPrefix,xi}function z0(t){return Math.max(0,-La(Math.abs(t)))}function E0(t,e){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(La(e)/3)))*3-La(Math.abs(t)))}function O0(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,La(e)-La(t))+1}function D0(t,e,n,a){var r=br(t,e,n),o;switch(a=Ri(a==null?",f":a),a.type){case"s":{var s=Math.max(Math.abs(t),Math.abs(e));return a.precision==null&&!isNaN(o=E0(r,s))&&(a.precision=o),ll(a,s)}case"":case"e":case"g":case"p":case"r":{a.precision==null&&!isNaN(o=O0(r,Math.max(Math.abs(t),Math.abs(e))))&&(a.precision=o-(a.type==="e"));break}case"f":case"%":{a.precision==null&&!isNaN(o=z0(r))&&(a.precision=o-(a.type==="%")*2);break}}return ol(a)}function N0(t){var e=t.domain;return t.ticks=function(n){var a=e();return Vc(a[0],a[a.length-1],n==null?10:n)},t.tickFormat=function(n,a){var r=e();return D0(r[0],r[r.length-1],n==null?10:n,a)},t.nice=function(n){n==null&&(n=10);var a=e(),r=0,o=a.length-1,s=a[r],h=a[o],c,_,y=10;for(h<s&&(_=s,s=h,h=_,_=r,r=o,o=_);y-- >0;){if(_=Bo(s,h,n),_===c)return a[r]=s,a[o]=h,e(a);if(_>0)s=Math.floor(s/_)*_,h=Math.ceil(h/_)*_;else if(_<0)s=Math.ceil(s*_)/_,h=Math.floor(h*_)/_;else break;c=_}return t},t}function sl(){var t=$o();return t.copy=function(){return Xo(t,sl())},Ro.apply(t,arguments),N0(t)}function I0(t,e){t=t.slice();var n=0,a=t.length-1,r=t[n],o=t[a],s;return o<r&&(s=n,n=a,a=s,s=r,r=o,o=s),t[n]=e.floor(r),t[a]=e.ceil(o),t}function Gr(t){if(0<=t.y&&t.y<100){var e=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return e.setFullYear(t.y),e}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function zr(t){if(0<=t.y&&t.y<100){var e=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return e.setUTCFullYear(t.y),e}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function ci(t,e,n){return{y:t,m:e,d:n,H:0,M:0,S:0,L:0}}function L0(t){var e=t.dateTime,n=t.date,a=t.time,r=t.periods,o=t.days,s=t.shortDays,h=t.months,c=t.shortMonths,_=fi(r),y=di(r),v=fi(o),k=di(o),E=fi(s),S=di(s),N=fi(h),w=di(h),M=fi(c),G=di(c),I={a:q,A:ce,b:Ge,B:Pe,c:null,d:hl,e:hl,f:rf,g:_f,G:bf,H:tf,I:nf,j:af,L:_l,m:of,M:lf,p:_e,q:ze,Q:Tl,s:kl,S:sf,u:uf,U:cf,V:ff,w:df,W:mf,x:null,X:null,y:hf,Y:gf,Z:yf,"%":vl},U={a:Be,A:F,b:le,B:se,c:null,d:bl,e:bl,f:kf,g:Df,G:If,H:pf,I:vf,j:Tf,L:yl,m:Mf,M:wf,p:ye,q:ue,Q:Tl,s:kl,S:Af,u:Sf,U:Cf,V:Gf,w:zf,W:Ef,x:null,X:null,y:Of,Y:Nf,Z:Lf,"%":vl},B={a:K,A:H,b:Z,B:de,c:ke,d:dl,e:dl,f:Q0,g:fl,G:cl,H:ml,I:ml,j:q0,L:J0,m:K0,M:Y0,p:re,q:W0,Q:$0,s:ef,S:Z0,u:x0,U:j0,V:H0,w:R0,W:V0,x:oe,X:j,y:fl,Y:cl,Z:U0,"%":X0};I.x=z(n,I),I.X=z(a,I),I.c=z(e,I),U.x=z(n,U),U.X=z(a,U),U.c=z(e,U);function z(ie,be){return function(Ce){var Q=[],P=-1,fe=0,pe=ie.length,Me,Ze,Je;for(Ce instanceof Date||(Ce=new Date(+Ce));++P<pe;)ie.charCodeAt(P)===37&&(Q.push(ie.slice(fe,P)),(Ze=ul[Me=ie.charAt(++P)])!=null?Me=ie.charAt(++P):Ze=Me==="e"?" ":"0",(Je=be[Me])&&(Me=Je(Ce,Ze)),Q.push(Me),fe=P+1);return Q.push(ie.slice(fe,P)),Q.join("")}}function V(ie,be){return function(Ce){var Q=ci(1900,void 0,1),P=L(Q,ie,Ce+="",0),fe,pe;if(P!=Ce.length)return null;if("Q"in Q)return new Date(Q.Q);if("s"in Q)return new Date(Q.s*1e3+("L"in Q?Q.L:0));if(be&&!("Z"in Q)&&(Q.Z=0),"p"in Q&&(Q.H=Q.H%12+Q.p*12),Q.m===void 0&&(Q.m="q"in Q?Q.q:0),"V"in Q){if(Q.V<1||Q.V>53)return null;"w"in Q||(Q.w=1),"Z"in Q?(fe=zr(ci(Q.y,0,1)),pe=fe.getUTCDay(),fe=pe>4||pe===0?fr.ceil(fe):fr(fe),fe=Fo.offset(fe,(Q.V-1)*7),Q.y=fe.getUTCFullYear(),Q.m=fe.getUTCMonth(),Q.d=fe.getUTCDate()+(Q.w+6)%7):(fe=Gr(ci(Q.y,0,1)),pe=fe.getDay(),fe=pe>4||pe===0?cr.ceil(fe):cr(fe),fe=Gt.offset(fe,(Q.V-1)*7),Q.y=fe.getFullYear(),Q.m=fe.getMonth(),Q.d=fe.getDate()+(Q.w+6)%7)}else("W"in Q||"U"in Q)&&("w"in Q||(Q.w="u"in Q?Q.u%7:"W"in Q?1:0),pe="Z"in Q?zr(ci(Q.y,0,1)).getUTCDay():Gr(ci(Q.y,0,1)).getDay(),Q.m=0,Q.d="W"in Q?(Q.w+6)%7+Q.W*7-(pe+5)%7:Q.w+Q.U*7-(pe+6)%7);return"Z"in Q?(Q.H+=Q.Z/100|0,Q.M+=Q.Z%100,zr(Q)):Gr(Q)}}function L(ie,be,Ce,Q){for(var P=0,fe=be.length,pe=Ce.length,Me,Ze;P<fe;){if(Q>=pe)return-1;if(Me=be.charCodeAt(P++),Me===37){if(Me=be.charAt(P++),Ze=B[Me in ul?be.charAt(P++):Me],!Ze||(Q=Ze(ie,Ce,Q))<0)return-1}else if(Me!=Ce.charCodeAt(Q++))return-1}return Q}function re(ie,be,Ce){var Q=_.exec(be.slice(Ce));return Q?(ie.p=y.get(Q[0].toLowerCase()),Ce+Q[0].length):-1}function K(ie,be,Ce){var Q=E.exec(be.slice(Ce));return Q?(ie.w=S.get(Q[0].toLowerCase()),Ce+Q[0].length):-1}function H(ie,be,Ce){var Q=v.exec(be.slice(Ce));return Q?(ie.w=k.get(Q[0].toLowerCase()),Ce+Q[0].length):-1}function Z(ie,be,Ce){var Q=M.exec(be.slice(Ce));return Q?(ie.m=G.get(Q[0].toLowerCase()),Ce+Q[0].length):-1}function de(ie,be,Ce){var Q=N.exec(be.slice(Ce));return Q?(ie.m=w.get(Q[0].toLowerCase()),Ce+Q[0].length):-1}function ke(ie,be,Ce){return L(ie,e,be,Ce)}function oe(ie,be,Ce){return L(ie,n,be,Ce)}function j(ie,be,Ce){return L(ie,a,be,Ce)}function q(ie){return s[ie.getDay()]}function ce(ie){return o[ie.getDay()]}function Ge(ie){return c[ie.getMonth()]}function Pe(ie){return h[ie.getMonth()]}function _e(ie){return r[+(ie.getHours()>=12)]}function ze(ie){return 1+~~(ie.getMonth()/3)}function Be(ie){return s[ie.getUTCDay()]}function F(ie){return o[ie.getUTCDay()]}function le(ie){return c[ie.getUTCMonth()]}function se(ie){return h[ie.getUTCMonth()]}function ye(ie){return r[+(ie.getUTCHours()>=12)]}function ue(ie){return 1+~~(ie.getUTCMonth()/3)}return{format:function(ie){var be=z(ie+="",I);return be.toString=function(){return ie},be},parse:function(ie){var be=V(ie+="",!1);return be.toString=function(){return ie},be},utcFormat:function(ie){var be=z(ie+="",U);return be.toString=function(){return ie},be},utcParse:function(ie){var be=V(ie+="",!0);return be.toString=function(){return ie},be}}}var ul={"-":"",_:" ","0":"0"},Et=/^\s*\d+/,P0=/^%/,F0=/[\\^$*+?|[\]().{}]/g;function ot(t,e,n){var a=t<0?"-":"",r=(a?-t:t)+"",o=r.length;return a+(o<n?new Array(n-o+1).join(e)+r:r)}function B0(t){return t.replace(F0,"\\$&")}function fi(t){return new RegExp("^(?:"+t.map(B0).join("|")+")","i")}function di(t){return new Map(t.map((e,n)=>[e.toLowerCase(),n]))}function R0(t,e,n){var a=Et.exec(e.slice(n,n+1));return a?(t.w=+a[0],n+a[0].length):-1}function x0(t,e,n){var a=Et.exec(e.slice(n,n+1));return a?(t.u=+a[0],n+a[0].length):-1}function j0(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.U=+a[0],n+a[0].length):-1}function H0(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.V=+a[0],n+a[0].length):-1}function V0(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.W=+a[0],n+a[0].length):-1}function cl(t,e,n){var a=Et.exec(e.slice(n,n+4));return a?(t.y=+a[0],n+a[0].length):-1}function fl(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.y=+a[0]+(+a[0]>68?1900:2e3),n+a[0].length):-1}function U0(t,e,n){var a=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n,n+6));return a?(t.Z=a[1]?0:-(a[2]+(a[3]||"00")),n+a[0].length):-1}function W0(t,e,n){var a=Et.exec(e.slice(n,n+1));return a?(t.q=a[0]*3-3,n+a[0].length):-1}function K0(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.m=a[0]-1,n+a[0].length):-1}function dl(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.d=+a[0],n+a[0].length):-1}function q0(t,e,n){var a=Et.exec(e.slice(n,n+3));return a?(t.m=0,t.d=+a[0],n+a[0].length):-1}function ml(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.H=+a[0],n+a[0].length):-1}function Y0(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.M=+a[0],n+a[0].length):-1}function Z0(t,e,n){var a=Et.exec(e.slice(n,n+2));return a?(t.S=+a[0],n+a[0].length):-1}function J0(t,e,n){var a=Et.exec(e.slice(n,n+3));return a?(t.L=+a[0],n+a[0].length):-1}function Q0(t,e,n){var a=Et.exec(e.slice(n,n+6));return a?(t.L=Math.floor(a[0]/1e3),n+a[0].length):-1}function X0(t,e,n){var a=P0.exec(e.slice(n,n+1));return a?n+a[0].length:-1}function $0(t,e,n){var a=Et.exec(e.slice(n));return a?(t.Q=+a[0],n+a[0].length):-1}function ef(t,e,n){var a=Et.exec(e.slice(n));return a?(t.s=+a[0],n+a[0].length):-1}function hl(t,e){return ot(t.getDate(),e,2)}function tf(t,e){return ot(t.getHours(),e,2)}function nf(t,e){return ot(t.getHours()%12||12,e,2)}function af(t,e){return ot(1+Gt.count(ia(t),t),e,3)}function _l(t,e){return ot(t.getMilliseconds(),e,3)}function rf(t,e){return _l(t,e)+"000"}function of(t,e){return ot(t.getMonth()+1,e,2)}function lf(t,e){return ot(t.getMinutes(),e,2)}function sf(t,e){return ot(t.getSeconds(),e,2)}function uf(t){var e=t.getDay();return e===0?7:e}function cf(t,e){return ot(Oa.count(ia(t)-1,t),e,2)}function gl(t){var e=t.getDay();return e>=4||e===0?ii(t):ii.ceil(t)}function ff(t,e){return t=gl(t),ot(ii.count(ia(t),t)+(ia(t).getDay()===4),e,2)}function df(t){return t.getDay()}function mf(t,e){return ot(cr.count(ia(t)-1,t),e,2)}function hf(t,e){return ot(t.getFullYear()%100,e,2)}function _f(t,e){return t=gl(t),ot(t.getFullYear()%100,e,2)}function gf(t,e){return ot(t.getFullYear()%1e4,e,4)}function bf(t,e){var n=t.getDay();return t=n>=4||n===0?ii(t):ii.ceil(t),ot(t.getFullYear()%1e4,e,4)}function yf(t){var e=t.getTimezoneOffset();return(e>0?"-":(e*=-1,"+"))+ot(e/60|0,"0",2)+ot(e%60,"0",2)}function bl(t,e){return ot(t.getUTCDate(),e,2)}function pf(t,e){return ot(t.getUTCHours(),e,2)}function vf(t,e){return ot(t.getUTCHours()%12||12,e,2)}function Tf(t,e){return ot(1+Fo.count(Da(t),t),e,3)}function yl(t,e){return ot(t.getUTCMilliseconds(),e,3)}function kf(t,e){return yl(t,e)+"000"}function Mf(t,e){return ot(t.getUTCMonth()+1,e,2)}function wf(t,e){return ot(t.getUTCMinutes(),e,2)}function Af(t,e){return ot(t.getUTCSeconds(),e,2)}function Sf(t){var e=t.getUTCDay();return e===0?7:e}function Cf(t,e){return ot(xc.count(Da(t)-1,t),e,2)}function pl(t){var e=t.getUTCDay();return e>=4||e===0?ri(t):ri.ceil(t)}function Gf(t,e){return t=pl(t),ot(ri.count(Da(t),t)+(Da(t).getUTCDay()===4),e,2)}function zf(t){return t.getUTCDay()}function Ef(t,e){return ot(fr.count(Da(t)-1,t),e,2)}function Of(t,e){return ot(t.getUTCFullYear()%100,e,2)}function Df(t,e){return t=pl(t),ot(t.getUTCFullYear()%100,e,2)}function Nf(t,e){return ot(t.getUTCFullYear()%1e4,e,4)}function If(t,e){var n=t.getUTCDay();return t=n>=4||n===0?ri(t):ri.ceil(t),ot(t.getUTCFullYear()%1e4,e,4)}function Lf(){return"+0000"}function vl(){return"%"}function Tl(t){return+t}function kl(t){return Math.floor(+t/1e3)}var Pa,Ml;Pf({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function Pf(t){return Pa=L0(t),Ml=Pa.format,Pa.parse,Pa.utcFormat,Pa.utcParse,Pa}function Ff(t){return new Date(t)}function Bf(t){return t instanceof Date?+t:+new Date(+t)}function wl(t,e,n,a,r,o,s,h,c,_){var y=$o(),v=y.invert,k=y.domain,E=_(".%L"),S=_(":%S"),N=_("%I:%M"),w=_("%I %p"),M=_("%a %d"),G=_("%b %d"),I=_("%B"),U=_("%Y");function B(z){return(c(z)<z?E:h(z)<z?S:s(z)<z?N:o(z)<z?w:a(z)<z?r(z)<z?M:G:n(z)<z?I:U)(z)}return y.invert=function(z){return new Date(v(z))},y.domain=function(z){return arguments.length?k(Array.from(z,Bf)):k().map(Ff)},y.ticks=function(z){var V=k();return t(V[0],V[V.length-1],z==null?10:z)},y.tickFormat=function(z,V){return V==null?B:_(V)},y.nice=function(z){var V=k();return(!z||typeof z.range!="function")&&(z=e(V[0],V[V.length-1],z==null?10:z)),z?k(I0(V,z)):y},y.copy=function(){return Xo(y,wl(t,e,n,a,r,o,s,h,c,_))},y}function ji(){return Ro.apply(wl(Wc,Kc,ia,Po,Oa,Gt,aa,Kn,ai,Ml).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)}function Fa(t,e){if(!t)return"";let n=0,a=0,r=0;t.length==4?(n="0x"+t[1]+t[1],a="0x"+t[2]+t[2],r="0x"+t[3]+t[3]):(n="0x"+t[1]+t[2],a="0x"+t[3]+t[4],r="0x"+t[5]+t[6]),n/=255,a/=255,r/=255;const o=Math.min(n,a,r),s=Math.max(n,a,r),h=s-o;let c=0,_=0,y=0;return h==0?c=0:s==n?c=(a-r)/h%6:s==a?c=(r-n)/h+2:c=(n-a)/h+4,c=Math.round(c*60),c<0&&(c+=360),y=(s+o)/2,_=h==0?0:h/(1-Math.abs(2*y-1)),_=+(_*100).toFixed(1),y=+(y*100).toFixed(1),"hsl("+c+","+_/2+"%,"+e+"%)"}var Ye;(function(t){t.FREE="free",t.BUSY="busy",t.PARTIAL="partial",t.CLOSED="closed"})(Ye||(Ye={}));var cn;(function(t){t.UNSELECTED="unselected",t.SELECTED="selected"})(cn||(cn={}));var Al;(function(t){t.VERIFY="verify",t.CHOOSE="choose"})(Al||(Al={}));function Rf(t){let e,n=(t[0].given_name&&t[0].surname?t[0].given_name.charAt(0)+t[0].surname.charAt(0):t[0].name?t[0].name.charAt(0):t[0].email?t[0].email.charAt(0):"?")+"",a;return{c(){e=b("p"),a=ge(n),Ie(e,"margin","0")},m(r,o){Y(r,e,o),m(e,a)},p(r,o){o&1&&n!==(n=(r[0].given_name&&r[0].surname?r[0].given_name.charAt(0)+r[0].surname.charAt(0):r[0].name?r[0].name.charAt(0):r[0].email?r[0].email.charAt(0):"?")+"")&&He(a,n)},d(r){r&&W(e)}}}function xf(t){let e,n;return{c(){e=b("img"),p(e,"alt",""),Ie(e,"height",t[1]),Ie(e,"width",t[2]),Ie(e,"border-radius","50%"),Jr(e.src,n="data:image/jpg;base64,"+t[3])||p(e,"src",n)},m(a,r){Y(a,e,r)},p(a,r){r&2&&Ie(e,"height",a[1]),r&4&&Ie(e,"width",a[2]),r&8&&!Jr(e.src,n="data:image/jpg;base64,"+a[3])&&p(e,"src",n)},d(a){a&&W(e)}}}function jf(t){let e;function n(o,s){if(o[3])return xf;if(o[0])return Rf}let a=n(t),r=a&&a(t);return{c(){r&&r.c(),e=Aa(),this.c=he},m(o,s){r&&r.m(o,s),Y(o,e,s)},p(o,[s]){a===(a=n(o))&&r?r.p(o,s):(r&&r.d(1),r=a&&a(o),r&&(r.c(),r.m(e.parentNode,e)))},i:he,o:he,d(o){r&&r.d(o),o&&W(e)}}}function Hf(t,e,n){let a,{contact:r}=e,{contact_query:o}=e,{height:s="32px"}=e,{width:h="32px"}=e;return Ou(async()=>{r&&r.picture_url?n(3,a=await Gc.getContactAvatar(o,r.id)):n(3,a=null)}),t.$$set=c=>{"contact"in c&&n(0,r=c.contact),"contact_query"in c&&n(4,o=c.contact_query),"height"in c&&n(1,s=c.height),"width"in c&&n(2,h=c.width)},n(3,a=null),[r,s,h,a,o]}class Vf extends Vn{constructor(e){super();Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},Hf,jf,Zt,{contact:0,contact_query:4,height:1,width:2},null),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["contact","contact_query","height","width"]}get contact(){return this.$$.ctx[0]}set contact(e){this.$$set({contact:e}),X()}get contact_query(){return this.$$.ctx[4]}set contact_query(e){this.$$set({contact_query:e}),X()}get height(){return this.$$.ctx[1]}set height(e){this.$$set({height:e}),X()}get width(){return this.$$.ctx[2]}set width(e){this.$$set({width:e}),X()}}customElements.define("nylas-contact-image",Vf);function Uf(t){let e,n,a,r,o,s,h;return{c(){e=b("div"),n=b("p"),a=ge(t[0]),r=O(),o=b("button"),o.textContent="Refresh your page",this.c=he,p(o,"type","button")},m(c,_){Y(c,e,_),m(e,n),m(n,a),m(e,r),m(e,o),s||(h=te(o,"click",t[1]),s=!0)},p(c,[_]){_&1&&He(a,c[0])},i:he,o:he,d(c){c&&W(e),s=!1,h()}}}function Wf(t,e,n){let{error_message:a="Uh oh! Looks like an error occurred"}=e;const r=()=>location.reload();return t.$$set=o=>{"error_message"in o&&n(0,a=o.error_message)},[a,r]}class Kf extends Vn{constructor(e){super();this.shadowRoot.innerHTML="<style>*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}div{background:var(--red-lighter);bottom:0;color:var(--red);font-size:1rem;line-height:24px;min-height:85px;padding:20px 24px;position:fixed;right:0;min-width:240px;z-index:2}button{background:transparent;color:var(--blue);cursor:pointer;font-style:italic;text-decoration:underline;margin-top:10px}</style>",Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},Wf,Uf,Zt,{error_message:0},null),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["error_message"]}get error_message(){return this.$$.ctx[0]}set error_message(e){this.$$set({error_message:e}),X()}}customElements.define("nylas-message-error",Kf);function qf(t){let e,n,a=[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],r={};for(let o=0;o<a.length;o+=1)r=je(r,a[o]);return{c(){e=Lt("svg"),n=Lt("path"),this.h()},l(o){e=Vt(o,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=Pt(e);n=Vt(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),Pt(n).forEach(W),s.forEach(W),this.h()},h(){p(n,"d","M14 16L9.77612 12.0014L14 8"),p(n,"stroke","#6A7285"),p(n,"stroke-width","1.5"),p(n,"stroke-miterlimit","10"),Jt(e,r)},m(o,s){Rn(o,e,s),Bn(e,n)},p(o,[s]){Jt(e,r=jn(a,[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&o[0]]))},i:he,o:he,d(o){o&&W(e)}}}function Yf(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class Zf extends fa{constructor(e){super();Kt(this,e,Yf,qf,Zt,{})}}function Jf(t){let e,n,a=[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],r={};for(let o=0;o<a.length;o+=1)r=je(r,a[o]);return{c(){e=Lt("svg"),n=Lt("path"),this.h()},l(o){e=Vt(o,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=Pt(e);n=Vt(s,"path",{d:!0,stroke:!0,"stroke-width":!0,"stroke-miterlimit":!0}),Pt(n).forEach(W),s.forEach(W),this.h()},h(){p(n,"d","M10 8L14.2239 11.9986L10 16"),p(n,"stroke","#6A7285"),p(n,"stroke-width","1.5"),p(n,"stroke-miterlimit","10"),Jt(e,r)},m(o,s){Rn(o,e,s),Bn(e,n)},p(o,[s]){Jt(e,r=jn(a,[{width:"24"},{height:"24"},{viewBox:"0 0 24 24"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&o[0]]))},i:he,o:he,d(o){o&&W(e)}}}function Qf(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class Xf extends fa{constructor(e){super();Kt(this,e,Qf,Jf,Zt,{})}}function Er(t){return t.availability!==Ye.BUSY&&t.availability!==Ye.CLOSED}function $f(t,e,n){return[{emails:n.flatMap(a=>a.participantEmails),days:[...Array(7).keys()],start:`${t}:00`,end:Sl({hour:e}),timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,object_type:"open_hours"}]}function Ba(t){return t?t.toString().padStart(2,"0"):"00"}function Sl({hour:t,minute:e=0}){return t>=24?`${Ba(23)}:${Ba(59)}`:`${Ba(t)}:${Ba(e)}`}function ed(t,e){return t.map(n=>{var a;return{emails:e.flatMap(r=>r.participantEmails),days:[n.startWeekday===0?6:n.startWeekday-1],start:`${Ba(n.startHour)}:${Ba(n.startMinute)}`,end:Sl({hour:n.endHour,minute:n.endMinute}),timezone:(a=n.timeZone)!=null?a:Intl.DateTimeFormat().resolvedOptions().timeZone,object_type:"open_hours"}})}const td=(t,e,n,a,r,o)=>{const s=aa(new Date(new Date(t).setHours(o.start_hour))),h=aa(new Date(new Date(t).setHours(o.end_hour)));return ji().domain([s,h]).ticks(Kn.every(o.slot_size)).slice(0,-1).map(c=>{var _;const y=Kn.offset(c,o.slot_size),v=[];let k=Ye.FREE;if(e.length){const w={start_time:c,end_time:y,available_calendars:[],expirySelection:"",recurrence_cadence:"",recurrence_expiry:"",fallsWithinAllowedTimeRange:!1};for(const M of e){const G=M.availability===Ye.BUSY?M.timeslots.map(U=>({start_time:Kn.offset(U.start_time,-o.event_buffer),end_time:Kn.offset(U.end_time,o.event_buffer)})):M.timeslots.map(U=>({start_time:Kn.offset(U.start_time,U===M.timeslots[0]?0:o.event_buffer),end_time:Kn.offset(U.end_time,U===M.timeslots[M.timeslots.length-1]?0:-o.event_buffer)}));let I=0;M.availability===Ye.BUSY?I=nd(G,w):M.availability===Ye.FREE&&(I=G.some(U=>w.start_time>=U.start_time&&w.end_time<=U.end_time)?1:0),M.availability===Ye.BUSY?o.capacity&&o.capacity>=1&&I<o.capacity?v.push((M==null?void 0:M.emailAddress)||""):I||v.push((M==null?void 0:M.emailAddress)||""):(M.availability===Ye.FREE||!M.availability)&&I&&v.push((M==null?void 0:M.emailAddress)||"")}v.length?v.length===e.length?k=Ye.FREE:k=Ye.PARTIAL:k=Ye.BUSY}if(k===Ye.PARTIAL&&v.length<e.length*o.partial_bookable_ratio&&(k=Ye.BUSY),k===Ye.BUSY&&o.partial_bookable_ratio===0&&(k=Ye.PARTIAL),k===Ye.PARTIAL&&o.required_participants.length&&(so(n,v)||(k=Ye.BUSY)),o.mandate_top_of_hour&&c.getMinutes()!==0&&(k=Ye.BUSY,v.length=0),o.open_hours.length&&k!==Ye.BUSY){let w=[];w=o.open_hours.filter(G=>!Object.prototype.hasOwnProperty.call(G,"startWeekday")||G.startWeekday===c.getDay()||G.endWeekday===c.getDay()),w.some(G=>{const I=Object.prototype.hasOwnProperty.call(G,"startWeekday")?Gt.offset(c,G.startWeekday-c.getDay()):new Date(c);I.setHours(G.startHour),I.setMinutes(G.startMinute);const U=Object.prototype.hasOwnProperty.call(G,"startWeekday")?Gt.offset(c,G.endWeekday-c.getDay()):new Date(c);return U.setHours(G.endHour),U.setMinutes(G.endMinute),c>=I&&y<=U})||(k=Ye.CLOSED,v.length=0)}((_=o.events)==null?void 0:_.length)>1&&a.length&&(a.some(M=>c>=M[0].start_time&&y<=M[M.length-1].end_time)?(k=Ye.FREE,v.length=r.length):(k=Ye.BUSY,v.length=0));const E=new Date(new Date().setHours(0,0,0,0)).getTime(),S=(new Date(t).getTime()-E)/(1e3*60*60*24),N=(new Date(c).getTime()-new Date().getTime())/(1e3*60*60*24);return{selectionStatus:cn.UNSELECTED,availability:k,available_calendars:v,start_time:c,end_time:y,fallsWithinAllowedTimeRange:N>=0&&S>=o.min_book_ahead_days&&S<=o.max_book_ahead_days}})};function nd(t,e){return t.reduce((n,a)=>(e.start_time<a.end_time&&a.start_time<e.end_time&&n++,n),0)}function Cl(t,e,n){const a=t.slice();return a[123]=e[n],a[124]=e,a[125]=n,a}function Gl(t,e,n){const a=t.slice();return a[126]=e[n],a}function zl(t,e,n){const a=t.slice();return a[126]=e[n],a[128]=n,a}function El(t,e,n){const a=t.slice();return a[129]=e[n],a}function Ol(t,e,n){const a=t.slice();return a[134]=e[n],a}function Dl(t,e,n){const a=t.slice();return a[134]=e[n],a}function ad(t){let e,n,a,r=uo(t[8])+"",o,s,h,c,_,y,v,k,E,S,N,w,M,G=[],I=new Map,U,B,z,V,L,re,K=t[2].allow_date_change&&Nl(t),H=t[2].busy_color!==t[2].closed_color&&Il(),Z=t[2].show_ticks&&t[2].view_as==="schedule"&&Ll(t),de=t[8];const ke=j=>j[123].timestamp.toISOString();for(let j=0;j<de.length;j+=1){let q=Cl(t,de,j),ce=ke(q);I.set(ce,G[j]=Kl(ce,q))}let oe=t[19]&&ql();return{c(){e=b("main"),n=b("header"),a=b("h2"),o=ge(r),s=O(),K&&K.c(),h=O(),c=b("div"),_=b("span"),_.textContent="Not available",y=O(),v=b("span"),v.textContent="Partially available",k=O(),E=b("span"),E.textContent="Available",S=O(),H&&H.c(),N=O(),Z&&Z.c(),w=O(),M=b("div");for(let j=0;j<G.length;j+=1)G[j].c();B=O(),oe&&oe.c(),p(a,"class","month"),p(_,"class","not-available"),p(v,"class","partially-available"),p(E,"class","available"),p(c,"class","legend"),xe(n,"dated",t[2].allow_date_change),p(M,"class","days"),xn(()=>t[96].call(M)),xe(M,"schedule",t[2].view_as==="schedule"),xe(M,"list",t[2].view_as==="list"),xe(M,"loading",t[4]),xe(M,"timezone",t[2].timezone),xe(M,"error",t[19]),Ie(e,"--busy-color-lightened",Fa(t[2].busy_color,90)),Ie(e,"--closed-color-lightened",Fa(t[2].closed_color,90)),Ie(e,"--selected-color-lightened",Fa(t[2].selected_color,60)),Ie(e,"--free-color",t[2].free_color),Ie(e,"--busy-color",t[2].busy_color),Ie(e,"--closed-color",t[2].closed_color),Ie(e,"--partial-color",t[2].partial_color),Ie(e,"--selected-color",t[2].selected_color),Ie(e,"--unavailable-color",t[2].unavailable_color),xn(()=>t[98].call(e)),xe(e,"ticked",t[2].show_ticks&&t[2].view_as==="schedule"),xe(e,"timezone",t[2].timezone),xe(e,"allow_booking",t[2].allow_booking),xe(e,"hide-header",!t[2].show_header)},m(j,q){Y(j,e,q),m(e,n),m(n,a),m(a,o),m(n,s),K&&K.m(n,null),m(n,h),m(n,c),m(c,_),m(c,y),m(c,v),m(c,k),m(c,E),m(c,S),H&&H.m(c,null),m(e,N),Z&&Z.m(e,null),m(e,w),m(e,M);for(let ce=0;ce<G.length;ce+=1)G[ce].m(M,null);t[95](M),U=Qi(M,t[96].bind(M)),m(e,B),oe&&oe.m(e,null),t[97](e),z=Qi(e,t[98].bind(e)),V=!0,L||(re=te(e,"mouseleave",t[99]),L=!0)},p(j,q){(!V||q[0]&256)&&r!==(r=uo(j[8])+"")&&He(o,r),j[2].allow_date_change?K?(K.p(j,q),q[0]&4&&qe(K,1)):(K=Nl(j),K.c(),qe(K,1),K.m(n,h)):K&&(pn(),ut(K,1,1,()=>{K=null}),vn()),j[2].busy_color!==j[2].closed_color?H||(H=Il(),H.c(),H.m(c,null)):H&&(H.d(1),H=null),q[0]&4&&xe(n,"dated",j[2].allow_date_change),j[2].show_ticks&&j[2].view_as==="schedule"?Z?Z.p(j,q):(Z=Ll(j),Z.c(),Z.m(e,w)):Z&&(Z.d(1),Z=null),q[0]&60212005&&(de=j[8],G=tr(G,q,ke,1,j,de,I,M,ro,Kl,null,Cl)),q[0]&4&&xe(M,"schedule",j[2].view_as==="schedule"),q[0]&4&&xe(M,"list",j[2].view_as==="list"),q[0]&16&&xe(M,"loading",j[4]),q[0]&4&&xe(M,"timezone",j[2].timezone),q[0]&524288&&xe(M,"error",j[19]),j[19]?oe||(oe=ql(),oe.c(),oe.m(e,null)):oe&&(oe.d(1),oe=null),(!V||q[0]&4)&&Ie(e,"--busy-color-lightened",Fa(j[2].busy_color,90)),(!V||q[0]&4)&&Ie(e,"--closed-color-lightened",Fa(j[2].closed_color,90)),(!V||q[0]&4)&&Ie(e,"--selected-color-lightened",Fa(j[2].selected_color,60)),(!V||q[0]&4)&&Ie(e,"--free-color",j[2].free_color),(!V||q[0]&4)&&Ie(e,"--busy-color",j[2].busy_color),(!V||q[0]&4)&&Ie(e,"--closed-color",j[2].closed_color),(!V||q[0]&4)&&Ie(e,"--partial-color",j[2].partial_color),(!V||q[0]&4)&&Ie(e,"--selected-color",j[2].selected_color),(!V||q[0]&4)&&Ie(e,"--unavailable-color",j[2].unavailable_color),q[0]&4&&xe(e,"ticked",j[2].show_ticks&&j[2].view_as==="schedule"),q[0]&4&&xe(e,"timezone",j[2].timezone),q[0]&4&&xe(e,"allow_booking",j[2].allow_booking),q[0]&4&&xe(e,"hide-header",!j[2].show_header)},i(j){V||(qe(K),V=!0)},o(j){ut(K),V=!1},d(j){j&&W(e),K&&K.d(),H&&H.d(),Z&&Z.d();for(let q=0;q<G.length;q+=1)G[q].d();t[95](null),U(),oe&&oe.d(),t[97](null),z(),L=!1,re()}}}function id(t){let e;return{c(){e=b("nylas-error"),Ee(e,"id",t[1])},m(n,a){Y(n,e,a)},p(n,a){a[0]&2&&Ee(e,"id",n[1])},i:he,o:he,d(n){n&&W(e)}}}function Nl(t){let e,n,a,r,o,s,h,c,_;const y=[od,rd],v=[];function k(w,M){return M[0]&33792&&(n=null),n==null&&(n=!w[10].includes(w[15])),n?0:1}a=k(t,[-1,-1,-1,-1,-1]),r=v[a]=y[a](t);const E=[sd,ld],S=[];function N(w,M){return M[0]&17408&&(s=null),s==null&&(s=!w[10].includes(w[14])),s?0:1}return h=N(t,[-1,-1,-1,-1,-1]),c=S[h]=E[h](t),{c(){e=b("div"),r.c(),o=O(),c.c(),p(e,"class","change-dates")},m(w,M){Y(w,e,M),v[a].m(e,null),m(e,o),S[h].m(e,null),_=!0},p(w,M){let G=a;a=k(w,M),a===G?v[a].p(w,M):(pn(),ut(v[G],1,1,()=>{v[G]=null}),vn(),r=v[a],r?r.p(w,M):(r=v[a]=y[a](w),r.c()),qe(r,1),r.m(e,o));let I=h;h=N(w,M),h===I?S[h].p(w,M):(pn(),ut(S[I],1,1,()=>{S[I]=null}),vn(),c=S[h],c?c.p(w,M):(c=S[h]=E[h](w),c.c()),qe(c,1),c.m(e,null))},i(w){_||(qe(r),qe(c),_=!0)},o(w){ut(r),ut(c),_=!1},d(w){w&&W(e),v[a].d(),S[h].d()}}}function rd(t){let e;return{c(){e=b("span")},m(n,a){Y(n,e,a)},p:he,i:he,o:he,d(n){n&&W(e)}}}function od(t){let e,n,a,r,o;return n=new Zf({props:{style:"height:32px;width:32px;"}}),{c(){e=b("button"),ea(n.$$.fragment),p(e,"aria-label","Previous date")},m(s,h){Y(s,e,h),Hn(n,e,null),a=!0,r||(o=te(e,"click",t[22]),r=!0)},p:he,i(s){a||(qe(n.$$.fragment,s),a=!0)},o(s){ut(n.$$.fragment,s),a=!1},d(s){s&&W(e),Gn(n),r=!1,o()}}}function ld(t){let e;return{c(){e=b("span")},m(n,a){Y(n,e,a)},p:he,i:he,o:he,d(n){n&&W(e)}}}function sd(t){let e,n,a,r,o;return n=new Xf({props:{style:"height:32px;width:32px;"}}),{c(){e=b("button"),ea(n.$$.fragment),p(e,"aria-label","Next date")},m(s,h){Y(s,e,h),Hn(n,e,null),a=!0,r||(o=te(e,"click",t[21]),r=!0)},p:he,i(s){a||(qe(n.$$.fragment,s),a=!0)},o(s){ut(n.$$.fragment,s),a=!1},d(s){s&&W(e),Gn(n),r=!1,o()}}}function Il(t){let e;return{c(){e=b("span"),e.textContent="Closed",p(e,"class","closed")},m(n,a){Y(n,e,a)},d(n){n&&W(e)}}}function Ll(t){let e,n,a=t[2].timezone&&Pl(t),r=t[16],o=[];for(let s=0;s<r.length;s+=1)o[s]=Bl(Ol(t,r,s));return{c(){a&&a.c(),e=O(),n=b("ul");for(let s=0;s<o.length;s+=1)o[s].c();p(n,"class","ticks")},m(s,h){a&&a.m(s,h),Y(s,e,h),Y(s,n,h);for(let c=0;c<o.length;c+=1)o[c].m(n,null);t[90](n)},p(s,h){if(s[2].timezone?a?a.p(s,h):(a=Pl(s),a.c(),a.m(e.parentNode,e)):a&&(a.d(1),a=null),h[0]&65536){r=s[16];let c;for(c=0;c<r.length;c+=1){const _=Ol(s,r,c);o[c]?o[c].p(_,h):(o[c]=Bl(_),o[c].c(),o[c].m(n,null))}for(;c<o.length;c+=1)o[c].d(1);o.length=r.length}},d(s){a&&a.d(s),s&&W(e),s&&W(n),en(o,s),t[90](null)}}}function Pl(t){let e,n,a=Io(t[16][0],t[2].timezone)+"",r,o,s,h=t[16],c=[];for(let _=0;_<h.length;_+=1)c[_]=Fl(Dl(t,h,_));return{c(){e=b("div"),n=b("p"),r=ge(a),o=O(),s=b("ul");for(let _=0;_<c.length;_+=1)c[_].c();p(n,"class","timezone"),p(s,"class","ticks"),p(e,"class","timezone-ticks")},m(_,y){Y(_,e,y),m(e,n),m(n,r),m(e,o),m(e,s);for(let v=0;v<c.length;v+=1)c[v].m(s,null)},p(_,y){if(y[0]&65540&&a!==(a=Io(_[16][0],_[2].timezone)+"")&&He(r,a),y[0]&65540){h=_[16];let v;for(v=0;v<h.length;v+=1){const k=Dl(_,h,v);c[v]?c[v].p(k,y):(c[v]=Fl(k),c[v].c(),c[v].m(s,null))}for(;v<c.length;v+=1)c[v].d(1);c.length=h.length}},d(_){_&&W(e),en(c,_)}}}function Fl(t){let e,n=No(t[134],t[2].timezone)+"",a,r;return{c(){e=b("li"),a=ge(n),r=O(),p(e,"class","tick")},m(o,s){Y(o,e,s),m(e,a),m(e,r)},p(o,s){s[0]&65540&&n!==(n=No(o[134],o[2].timezone)+"")&&He(a,n)},d(o){o&&W(e)}}}function Bl(t){let e,n=na(t[134])+"",a,r;return{c(){e=b("li"),a=ge(n),r=O(),p(e,"class","tick")},m(o,s){Y(o,e,s),m(e,a),m(e,r)},p(o,s){s[0]&65536&&n!==(n=na(o[134])+"")&&He(a,n)},d(o){o&&W(e)}}}function Rl(t){let e,n=new Date(t[123].timestamp).toLocaleString("default",{day:"numeric"})+"",a;return{c(){e=b("span"),a=ge(n),p(e,"class","date")},m(r,o){Y(r,e,o),m(e,a)},p(r,o){o[0]&256&&n!==(n=new Date(r[123].timestamp).toLocaleString("default",{day:"numeric"})+"")&&He(a,n)},d(r){r&&W(e)}}}function xl(t){let e,n=new Date(t[123].timestamp).toLocaleString("default",{weekday:"short"})+"",a;return{c(){e=b("span"),a=ge(n)},m(r,o){Y(r,e,o),m(e,a)},p(r,o){o[0]&256&&n!==(n=new Date(r[123].timestamp).toLocaleString("default",{weekday:"short"})+"")&&He(a,n)},d(r){r&&W(e)}}}function ud(t){let e,n=t[17](t[123]),a=[];for(let r=0;r<n.length;r+=1)a[r]=Hl(Gl(t,n,r));return{c(){e=b("div");for(let r=0;r<a.length;r+=1)a[r].c();p(e,"class","slot-list")},m(r,o){Y(r,e,o);for(let s=0;s<a.length;s+=1)a[s].m(e,null)},p(r,o){if(o[0]&8520448){n=r[17](r[123]);let s;for(s=0;s<n.length;s+=1){const h=Gl(r,n,s);a[s]?a[s].p(h,o):(a[s]=Hl(h),a[s].c(),a[s].m(e,null))}for(;s<a.length;s+=1)a[s].d(1);a.length=n.length}},d(r){r&&W(e),en(a,r)}}}function cd(t){let e,n,a,r=[],o=new Map,s=t[123].epochs,h=[];for(let y=0;y<s.length;y+=1)h[y]=Vl(El(t,s,y));let c=t[123].slots;const _=y=>y[126].start_time.toISOString();for(let y=0;y<c.length;y+=1){let v=zl(t,c,y),k=_(v);o.set(k,r[y]=Wl(k,v))}return{c(){e=b("div");for(let y=0;y<h.length;y+=1)h[y].c();n=O(),a=b("div");for(let y=0;y<r.length;y+=1)r[y].c();p(e,"class","epochs"),p(a,"class","slots")},m(y,v){Y(y,e,v);for(let k=0;k<h.length;k+=1)h[k].m(e,null);Y(y,n,v),Y(y,a,v);for(let k=0;k<r.length;k+=1)r[k].m(a,null)},p(y,v){if(v[0]&262400){s=y[123].epochs;let k;for(k=0;k<s.length;k+=1){const E=El(y,s,k);h[k]?h[k].p(E,v):(h[k]=Vl(E),h[k].c(),h[k].m(e,null))}for(;k<h.length;k+=1)h[k].d(1);h.length=s.length}v[0]&51429633&&(c=y[123].slots,r=tr(r,v,_,1,y,c,o,a,ro,Wl,null,zl))},d(y){y&&W(e),en(h,y),y&&W(n),y&&W(a);for(let v=0;v<r.length;v+=1)r[v].d()}}}function jl(t){let e,n,a=t[126].available_calendars.length+"",r,o,s=t[9].length+"",h,c;return{c(){e=b("span"),n=ge("("),r=ge(a),o=ge(" of "),h=ge(s),c=ge(`
                      available)`),p(e,"class","partial")},m(_,y){Y(_,e,y),m(e,n),m(e,r),m(e,o),m(e,h),m(e,c)},p(_,y){y[0]&131328&&a!==(a=_[126].available_calendars.length+"")&&He(r,a),y[0]&512&&s!==(s=_[9].length+"")&&He(h,s)},d(_){_&&W(e)}}}function Hl(t){let e,n=na(new Date(t[126].start_time))+"",a,r,o,s,h,c,_,y,v,k,E=t[126].availability===Ye.PARTIAL&&jl(t);function S(){return t[93](t[126])}return{c(){e=b("button"),a=ge(n),r=O(),E&&E.c(),o=O(),p(e,"data-available-calendars",s=t[126].available_calendars.toString()),p(e,"aria-label",h=""+(na(new Date(t[126].start_time))+" to "+na(new Date(t[126].end_time))+"; Free calendars: "+t[126].available_calendars.toString())),p(e,"class",c="slot "+t[126].selectionStatus+" "+t[126].availability),p(e,"data-start-time",_=new Date(t[126].start_time).toLocaleString()),p(e,"data-end-time",y=new Date(t[126].end_time).toLocaleString()),xe(e,"pending",t[126].selectionPending)},m(N,w){Y(N,e,w),m(e,a),m(e,r),E&&E.m(e,null),m(e,o),v||(k=te(e,"click",S),v=!0)},p(N,w){t=N,w[0]&131328&&n!==(n=na(new Date(t[126].start_time))+"")&&He(a,n),t[126].availability===Ye.PARTIAL?E?E.p(t,w):(E=jl(t),E.c(),E.m(e,o)):E&&(E.d(1),E=null),w[0]&131328&&s!==(s=t[126].available_calendars.toString())&&p(e,"data-available-calendars",s),w[0]&131328&&h!==(h=""+(na(new Date(t[126].start_time))+" to "+na(new Date(t[126].end_time))+"; Free calendars: "+t[126].available_calendars.toString()))&&p(e,"aria-label",h),w[0]&131328&&c!==(c="slot "+t[126].selectionStatus+" "+t[126].availability)&&p(e,"class",c),w[0]&131328&&_!==(_=new Date(t[126].start_time).toLocaleString())&&p(e,"data-start-time",_),w[0]&131328&&y!==(y=new Date(t[126].end_time).toLocaleString())&&p(e,"data-end-time",y),w[0]&131328&&xe(e,"pending",t[126].selectionPending)},d(N){N&&W(e),E&&E.d(),v=!1,k()}}}function Vl(t){let e,n,a,r,o,s,h;return{c(){e=b("div"),n=b("div"),a=O(),p(n,"class","inner"),Ie(n,"background-color",t[18](t[129].available_calendars.length)),p(e,"class",r="epoch "+t[129].status),Ie(e,"height",t[129].height+"%"),Ie(e,"top",t[129].offset+"%"),p(e,"data-available-calendars",o=t[129].available_calendars.toString()),p(e,"data-start-time",s=new Date(t[129].start_time).toLocaleString()),p(e,"data-end-time",h=new Date(t[129].end_time).toLocaleString())},m(c,_){Y(c,e,_),m(e,n),m(e,a)},p(c,_){_[0]&262400&&Ie(n,"background-color",c[18](c[129].available_calendars.length)),_[0]&256&&r!==(r="epoch "+c[129].status)&&p(e,"class",r),_[0]&256&&Ie(e,"height",c[129].height+"%"),_[0]&256&&Ie(e,"top",c[129].offset+"%"),_[0]&256&&o!==(o=c[129].available_calendars.toString())&&p(e,"data-available-calendars",o),_[0]&256&&s!==(s=new Date(c[129].start_time).toLocaleString())&&p(e,"data-start-time",s),_[0]&256&&h!==(h=new Date(c[129].end_time).toLocaleString())&&p(e,"data-end-time",h)},d(c){c&&W(e)}}}function Ul(t){let e,n=t[20](t[126],t[123])+"",a;return{c(){e=b("span"),a=ge(n),p(e,"class","selected-heading")},m(r,o){Y(r,e,o),m(e,a)},p(r,o){o[0]&256&&n!==(n=r[20](r[126],r[123])+"")&&He(a,n)},d(r){r&&W(e)}}}function Wl(t,e){let n,a=e[126].selectionStatus===cn.SELECTED||e[0]&&e[20](e[126],e[123]),r,o,s,h,c,_,y,v,k,E,S=a&&Ul(e);function N(){return e[91](e[126])}function w(){return e[92](e[126])}return{key:t,first:null,c(){n=b("button"),S&&S.c(),r=O(),p(n,"data-available-calendars",o=e[126].available_calendars.toString()),p(n,"aria-label",s=""+(new Date(e[126].start_time).toLocaleString()+" to "+new Date(e[126].end_time).toLocaleString()+"; Free calendars: "+e[126].available_calendars.toString())),p(n,"class",h="slot "+e[126].selectionStatus+" "+e[126].availability),p(n,"data-start-time",c=new Date(e[126].start_time).toLocaleString()),p(n,"data-end-time",_=new Date(e[126].end_time).toLocaleString()),p(n,"title",y=e[126].fallsWithinAllowedTimeRange?null:`You may only select timeslots in the future, between ${e[15]} and ${e[14]}`),xe(n,"pending",e[0]&&e[126].selectionPending),xe(n,"outside-of-time-range",!e[126].fallsWithinAllowedTimeRange),this.first=n},m(M,G){Y(M,n,G),S&&S.m(n,null),m(n,r),k||(E=[eo(v=e[26].call(null,n,{dateKey:e[123].timestamp.toLocaleDateString(),slotIndex:e[128],startTime:new Date(e[126].start_time).toLocaleString()})),te(n,"click",N),te(n,"mouseenter",w)],k=!0)},p(M,G){e=M,G[0]&257&&(a=e[126].selectionStatus===cn.SELECTED||e[0]&&e[20](e[126],e[123])),a?S?S.p(e,G):(S=Ul(e),S.c(),S.m(n,r)):S&&(S.d(1),S=null),G[0]&256&&o!==(o=e[126].available_calendars.toString())&&p(n,"data-available-calendars",o),G[0]&256&&s!==(s=""+(new Date(e[126].start_time).toLocaleString()+" to "+new Date(e[126].end_time).toLocaleString()+"; Free calendars: "+e[126].available_calendars.toString()))&&p(n,"aria-label",s),G[0]&256&&h!==(h="slot "+e[126].selectionStatus+" "+e[126].availability)&&p(n,"class",h),G[0]&256&&c!==(c=new Date(e[126].start_time).toLocaleString())&&p(n,"data-start-time",c),G[0]&256&&_!==(_=new Date(e[126].end_time).toLocaleString())&&p(n,"data-end-time",_),G[0]&49408&&y!==(y=e[126].fallsWithinAllowedTimeRange?null:`You may only select timeslots in the future, between ${e[15]} and ${e[14]}`)&&p(n,"title",y),v&&wa(v.update)&&G[0]&256&&v.update.call(null,{dateKey:e[123].timestamp.toLocaleDateString(),slotIndex:e[128],startTime:new Date(e[126].start_time).toLocaleString()}),G[0]&257&&xe(n,"pending",e[0]&&e[126].selectionPending),G[0]&256&&xe(n,"outside-of-time-range",!e[126].fallsWithinAllowedTimeRange)},d(M){M&&W(n),S&&S.d(),k=!1,vt(E)}}}function Kl(t,e){let n,a,r,o,s,h,c,_=e[125],y=(e[2].date_format==="date"||e[2].date_format==="full")&&Rl(e),v=(e[2].date_format==="weekday"||e[2].date_format==="full")&&xl(e);function k(M,G){if(M[2].view_as==="schedule")return cd;if(M[2].view_as==="list")return ud}let E=k(e),S=E&&E(e);const N=()=>e[94](n,_),w=()=>e[94](null,_);return{key:t,first:null,c(){n=b("div"),a=b("header"),r=b("h2"),y&&y.c(),o=O(),v&&v.c(),s=O(),S&&S.c(),h=O(),p(n,"class","day"),p(n,"data-timestamp",c=e[123].timestamp.toISOString()),this.first=n},m(M,G){Y(M,n,G),m(n,a),m(a,r),y&&y.m(r,null),m(r,o),v&&v.m(r,null),m(n,s),S&&S.m(n,null),m(n,h),N()},p(M,G){e=M,e[2].date_format==="date"||e[2].date_format==="full"?y?y.p(e,G):(y=Rl(e),y.c(),y.m(r,o)):y&&(y.d(1),y=null),e[2].date_format==="weekday"||e[2].date_format==="full"?v?v.p(e,G):(v=xl(e),v.c(),v.m(r,null)):v&&(v.d(1),v=null),E===(E=k(e))&&S?S.p(e,G):(S&&S.d(1),S=E&&E(e),S&&(S.c(),S.m(n,h))),G[0]&256&&c!==(c=e[123].timestamp.toISOString())&&p(n,"data-timestamp",c),_!==e[125]&&(w(),_=e[125],N())},d(M){M&&W(n),y&&y.d(),v&&v.d(),S&&S.d(),w()}}}function ql(t){let e;return{c(){e=b("nylas-message-error")},m(n,a){Y(n,e,a)},d(n){n&&W(e)}}}function fd(t){let e,n,a,r;const o=[id,ad],s=[];function h(c,_){return c[3]&&c[3].error?0:1}return e=h(t),n=s[e]=o[e](t),{c(){n.c(),a=Aa(),this.c=he},m(c,_){s[e].m(c,_),Y(c,a,_),r=!0},p(c,_){let y=e;e=h(c),e===y?s[e].p(c,_):(pn(),ut(s[y],1,1,()=>{s[y]=null}),vn(),n=s[e],n?n.p(c,_):(n=s[e]=o[e](c),n.c()),qe(n,1),n.m(a.parentNode,a))},i(c){r||(qe(n),r=!0)},o(c){ut(n),r=!1},d(c){s[e].d(c),c&&W(a)}}}const dd=100,md=30;function hd(t=[]){return t.reduce((e,n)=>{const a=e[e.length-1];return a&&a.end_time===n.start_time?a.end_time=n.end_time:e.push(Object.assign({},n)),e},[])}function _d(t,e,n){let a,r,o,s,h,c,_,y,v,k,E;Fn(t,Sc,C=>n(103,y=C)),Fn(t,wc,C=>n(104,v=C)),Fn(t,ni,C=>n(89,k=C)),Fn(t,ir,C=>n(105,E=C));var S=this&&this.__awaiter||function(C,$,Se,me){function Le(ft){return ft instanceof Se?ft:new Se(function(zt){zt(ft)})}return new(Se||(Se=Promise))(function(ft,zt){function Pn(wn){try{on(me.next(wn))}catch(va){zt(va)}}function Qt(wn){try{on(me.throw(wn))}catch(va){zt(va)}}function on(wn){wn.done?ft(wn.value):Le(wn.value).then(Pn,Qt)}on((me=me.apply(C,$||[])).next())})},N,w,M,G,I,U,B;let{id:z=""}=e,{access_token:V=""}=e,{event_to_hover:L=null}=e,{event_to_select:re=null}=e,{allow_booking:K}=e,{allow_date_change:H}=e,{attendees_to_show:Z}=e,{availability:de}=e,{booking_options:ke}=e,{booking_user_email:oe}=e,{booking_user_token:j}=e,{busy_color:q}=e,{capacity:ce}=e,{closed_color:Ge}=e,{date_format:Pe}=e,{dates_to_show:_e}=e,{end_hour:ze}=e,{event_buffer:Be}=e,{free_color:F}=e,{mandate_top_of_hour:le}=e,{max_book_ahead_days:se}=e,{min_book_ahead_days:ye}=e,{open_hours:ue}=e,{overbooked_threshold:ie}=e,{partial_bookable_ratio:be}=e,{partial_color:Ce}=e,{required_participants:Q}=e,{selected_color:P}=e,{show_as_week:fe}=e,{show_header:pe}=e,{show_hosts:Me}=e,{show_ticks:Ze}=e,{show_weekends:Je}=e,{slot_size:it}=e,{start_date:Ue}=e,{start_hour:lt}=e,{timezone:dt}=e,{view_as:Te}=e,{unavailable_color:Ke}=e,{events:Fe}=e;const We={allow_booking:!1,allow_date_change:!0,attendees_to_show:5,busy_color:"#EE3248cc",calendars:[],closed_color:"#EE3248cc",date_format:"full",dates_to_show:1,end_hour:24,event_buffer:0,free_color:"#078351cc",mandate_top_of_hour:!1,max_book_ahead_days:30,min_book_ahead_days:0,open_hours:[],overbooked_threshold:100,partial_bookable_ratio:.01,partial_color:"#FECA7Ccc",required_participants:[],selected_color:"#002db4",show_as_week:!1,show_header:!0,show_hosts:"show",show_ticks:!0,show_weekends:!0,slot_size:15,start_date:new Date,start_hour:0,timezone:"",view_as:"schedule",unavailable_color:"#DDD",events:[]};function ct(C=!1,$=!1){return S(this,void 0,void 0,function*(){if(yield rt(!0),$){const Se=[];for(const me of tt)Se.push(...me==null?void 0:me.slots.filter(Le=>Le.selectionStatus===cn.SELECTED).map(Le=>({status:"busy",start_time:new Date(Le.start_time).getTime()/1e3,end_time:new Date(Le.end_time).getTime()/1e3})));for(const me of h)me.timeslots.push(...Se)}if(C&&Array.isArray(tt)){for(const Se of tt)for(const me of Se.slots)me.selectionStatus=cn.UNSELECTED;n(8,tt=[...tt])}})}let J=Un({},{},We),Qe={},Ve,Tt=[],mt={},Ot=[];Xi(()=>S(void 0,void 0,void 0,function*(){yield Oi(),n(4,Ve=!0),n(7,Dt=gt==null?void 0:gt.getBoundingClientRect().height),n(6,Ut=gt==null?void 0:gt.getBoundingClientRect().height);const C=JSON.stringify({component_id:z,access_token:V});n(3,Qe=(yield E[C])||{}),n(2,J=Un(e,Qe,We)),wt(),n(4,Ve=!1)}));let pt=e;function wt(){J.start_date||n(2,J.start_date=We.start_date,J),J.timezone&&(Do(J.timezone)?J.timezone===Intl.DateTimeFormat().resolvedOptions().timeZone&&n(2,J.timezone=void 0,J):(console.warn(`Invalid IANA time zone: ${J.timezone}`),n(2,J.timezone=void 0,J)))}const Ft=nr(Ca());let gt,Yt,At,Ut=0,Dt,Nt,Xe,Wt,fn,nn,dn=[];const mn=[15,30,60,180,360],Dn=(C,$,Se=0)=>{if(C===void 0||$===void 0)return[];const me=mn[Se];let Le=me>60?aa.every(me/60):Kn.every(me);$=ji().domain($).ticks(Le);const ft=C/$.length;return me<J.slot_size||ft<md&&Se<mn.length?Dn(C,$,Se+1):$};function hn(C,$){const Se=ji().domain([C[0].start_time,C[C.length-1].end_time]);return C.reduce((me,Le)=>{const ft=me[me.length-1];return ft&&JSON.stringify(ft[0].available_calendars)===JSON.stringify(Le.available_calendars)&&ft[0].availability===Le.availability?ft.push(Le):me.push([Le]),me},[]).map(me=>{let Le=Ye.FREE;const ft=me[0].available_calendars.length,zt=ft!==h.length&&ft<h.length*$;return ft===0||zt||J.required_participants.length&&!so(Ae,me[0].available_calendars)?me[0].availability===Ye.CLOSED?Le=Ye.CLOSED:Le=Ye.BUSY:ft>0&&ft<h.length&&(Le=Ye.PARTIAL),{start_time:me[0].start_time,offset:Se(me[0].start_time)*100,status:Le,height:(Se(me[me.length-1].end_time)-Se(me[0].start_time))*100,end_time:me[me.length-1].end_time,slots:me.length,available_calendars:me[0].available_calendars}})}function Bt(C,$,Se){let me=ji().domain([C,$]).ticks(Gt).filter(Le=>J.show_weekends?!0:Le.getDay()!==6&&Le.getDay()!==0);return!J.show_as_week&&!J.show_weekends&&me.length<Nt?Se?Bt(Gt.offset(C,-1),$,!0):Bt(C,Gt.offset($,1)):me}function Nn(C){return h.forEach($=>{const Se=C.filter(me=>me.available_calendars.includes($.emailAddress));C.length-Se.length>J.overbooked_threshold*C.length/100&&Se.forEach(me=>{me.available_calendars=me.available_calendars.filter(Le=>Le!==$.emailAddress),me.available_calendars.length?me.availability===Ye.FREE&&me.available_calendars.length!==h.length&&(me.availability=Ye.PARTIAL):me.availability=Ye.BUSY})}),C}let tt,_n=[],Rt=[],In,xt=[],ht=[];function an(C=ht,$=V){return{body:{emails:C,free_busy:[],duration_minutes:15,interval_minutes:15,start_time:aa(new Date(new Date(Xe).setHours(J.start_hour))).getTime()/1e3,end_time:aa(new Date(new Date(Wt).setHours(J.end_hour))).getTime()/1e3,round_robin:"max-availability"},component_id:z,access_token:$}}let bt=[],Ae=[];function rt(C=!1){var $;return S(this,void 0,void 0,function*(){n(4,Ve=!0);const Se=ht.map(me=>({email:me}));if(J.booking_user_email&&J.booking_user_token&&Se.push({email:J.booking_user_email,token:J.booking_user_token}),Array.isArray(Se)&&Se.length>0){const me=yield v[JSON.stringify(Object.assign(Object.assign({},an(Se.map(Le=>Le.email),V)),{forceReload:C}))];return n(4,Ve=!1),Gt(new Date(an().body.start_time*1e3)).getTime()!==Gt(new Date((($=me.time_slots[0])===null||$===void 0?void 0:$.start_time)*1e3)).getTime()?void 0:(J.availability||De(me),bt)}})}function De(C){const $=[],Se={};for(const me of C==null?void 0:C.order)Se[me]=[];for(const me of C.time_slots)me.emails.forEach(Le=>Se[Le].push(me));C==null||C.order.forEach(me=>{$.push({emailAddress:me,availability:Ye.FREE,timeslots:hd(Se[me]).map(Le=>({start_time:new Date(Le.start_time*1e3),end_time:new Date(Le.end_time*1e3)}))})}),n(81,bt=[...$])}function kt(C,$){var Se;const me=Rt.find(zt=>zt.start_time===C.start_time),Le=$.slots[$.slots.indexOf(C)-1],ft=Le?!Er(Le):!1;if(C.selectionPending&&Er(C)&&(!(Le==null?void 0:Le.selectionPending)||ft)){const zt=((Se=$.slots.find(on=>on.start_time>C.start_time&&(!on.selectionPending||!Er(on))))===null||Se===void 0?void 0:Se.start_time)||$.slots[$.slots.length-1].end_time,Pn=Ii(C.start_time).replace(" ",""),Qt=Ii(zt).replace(" ","");return`${Pn} - ${Qt}`}else if(me){let zt=Ii(me.start_time),Pn=Ii(me.end_time);return`${zt.replace(" ","")} - ${Pn.replace(" ","")}`}else return""}function Ln(){J.show_as_week&&!o?n(2,J.start_date=Oa.offset(Wt,1),J):n(2,J.start_date=Gt.offset(Wt,1),J),Ft("eventOptionsReady",{slots:[]})}function ya(){if(J.show_as_week&&!o)n(2,J.start_date=Oa.offset(Xe,-1),J);else{let C=Bt(Gt.offset(Xe,-Nt),Gt.offset(Wt,-Nt),!0);n(2,J.start_date=C[0],J)}Ft("eventOptionsReady",{slots:[]})}let qn=[];function Ra(C){C.selectionStatus===cn.SELECTED?n(27,re=null):n(27,re=Mn(C)),tt.flatMap($=>$.slots).forEach($=>{$.selectionPending=!1,$.selectionStatus=cn.UNSELECTED}),n(8,tt=[...tt]),n(0,L=null)}function Yn(C){C&&(tt.flatMap($=>$.slots).forEach($=>{$.selectionPending=!1,$.selectionStatus=cn.UNSELECTED}),re===Mn(C)?(n(27,re=null),n(8,tt=[...tt])):n(27,re=Mn(C)))}function xa(C){C&&n(0,L=Mn(C))}function mi(C,$){return typeof mt[$.dateKey]=="undefined"&&(n(10,Ot=Ot.concat($.dateKey).sort()),mt[$.dateKey]=[]),mt[$.dateKey][$.slotIndex]=C,{destroy(){const Se=mt[$.dateKey].indexOf(C);Se>=0&&mt[$.dateKey].splice(Se,1),mt[$.dateKey].length===0&&(n(10,Ot=Ot.filter(me=>me!==$.dateKey)),delete mt[$.dateKey])}}}let kn=[],Zn={};function ra(){return S(this,void 0,void 0,function*(){let C=[];J.open_hours.length?C=ed(J.open_hours,J.events):J.start_hour&&J.end_hour&&(C=$f(J.start_hour,J.end_hour,J.events));const $=yield pa(J.events,s,J.end_hour,C);($==null?void 0:$.start_time)<($==null?void 0:$.end_time)?n(84,kn=yield y[JSON.stringify({body:$,component_id:z,access_token:V})]):n(84,kn=[]),Ft("eventOptionsReady",{slots:kn})})}function rn(){var C;Zn={};for(const $ of kn){if(!((C=$[0])===null||C===void 0?void 0:C.start_time))continue;const Se=new Date(new Date($[0].start_time).setHours(0,0,0,0)).getTime();Zn[Se]?Zn[Se].push($):Zn[Se]=[$]}}function pa(C,$,Se,me){if(C.length===0)return;const Le=$[$.length-1],ft=C.reduce((Qt,on)=>(Qt.push(on.participantEmails),Qt),[]);return{duration_minutes:C[0].slot_size,interval_minutes:J.slot_size,start_time:Math.floor(new Date().getTime()/1e3),end_time:aa(new Date(new Date(Le).setHours(Se))).getTime()/1e3,free_busy:[],open_hours:me,emails:ft,events:C,round_robin:"max-fairness"}}let It=[];function Mn(C){var $,Se;if(!C.fallsWithinAllowedTimeRange)return null;const me=new Date(new Date(C.start_time).setHours(0,0,0,0)).getTime(),Le=(Se=($=Zn[me])===null||$===void 0?void 0:$.filter(ft=>C.start_time>=ft[0].start_time&&C.end_time<=ft[ft.length-1].end_time))!==null&&Se!==void 0?Se:[];return Le[Le.length-1]}function gn(C){ua[C?"unshift":"push"](()=>{Yt=C,n(12,Yt)})}const ja=C=>{Yn(C)},Ha=C=>{xa(C)},Va=C=>Ra(C);function Ua(C,$){ua[C?"unshift":"push"](()=>{Tt[$]=C,n(5,Tt),n(2,J),n(122,e),n(73,pt),n(3,Qe)})}function Wa(C){ua[C?"unshift":"push"](()=>{At=C,n(13,At)})}function Ka(){Ut=this.clientWidth,n(6,Ut)}function yt(C){ua[C?"unshift":"push"](()=>{gt=C,n(11,gt)})}function hi(){Dt=this.clientHeight,n(7,Dt)}const _i=()=>n(0,L=null);return t.$$set=C=>{n(122,e=je(je({},e),Mt(C))),"id"in C&&n(1,z=C.id),"access_token"in C&&n(28,V=C.access_token),"event_to_hover"in C&&n(0,L=C.event_to_hover),"event_to_select"in C&&n(27,re=C.event_to_select),"allow_booking"in C&&n(29,K=C.allow_booking),"allow_date_change"in C&&n(30,H=C.allow_date_change),"attendees_to_show"in C&&n(31,Z=C.attendees_to_show),"availability"in C&&n(32,de=C.availability),"booking_options"in C&&n(33,ke=C.booking_options),"booking_user_email"in C&&n(34,oe=C.booking_user_email),"booking_user_token"in C&&n(35,j=C.booking_user_token),"busy_color"in C&&n(36,q=C.busy_color),"capacity"in C&&n(37,ce=C.capacity),"closed_color"in C&&n(38,Ge=C.closed_color),"date_format"in C&&n(39,Pe=C.date_format),"dates_to_show"in C&&n(40,_e=C.dates_to_show),"end_hour"in C&&n(41,ze=C.end_hour),"event_buffer"in C&&n(42,Be=C.event_buffer),"free_color"in C&&n(43,F=C.free_color),"mandate_top_of_hour"in C&&n(44,le=C.mandate_top_of_hour),"max_book_ahead_days"in C&&n(45,se=C.max_book_ahead_days),"min_book_ahead_days"in C&&n(46,ye=C.min_book_ahead_days),"open_hours"in C&&n(47,ue=C.open_hours),"overbooked_threshold"in C&&n(48,ie=C.overbooked_threshold),"partial_bookable_ratio"in C&&n(49,be=C.partial_bookable_ratio),"partial_color"in C&&n(50,Ce=C.partial_color),"required_participants"in C&&n(51,Q=C.required_participants),"selected_color"in C&&n(52,P=C.selected_color),"show_as_week"in C&&n(53,fe=C.show_as_week),"show_header"in C&&n(54,pe=C.show_header),"show_hosts"in C&&n(55,Me=C.show_hosts),"show_ticks"in C&&n(56,Ze=C.show_ticks),"show_weekends"in C&&n(57,Je=C.show_weekends),"slot_size"in C&&n(58,it=C.slot_size),"start_date"in C&&n(59,Ue=C.start_date),"start_hour"in C&&n(60,lt=C.start_hour),"timezone"in C&&n(61,dt=C.timezone),"view_as"in C&&n(62,Te=C.view_as),"unavailable_color"in C&&n(63,Ke=C.unavailable_color),"events"in C&&n(64,Fe=C.events)},t.$$.update=()=>{if(t.$$.dirty[2]&134217728&&n(19,a=!!Object.keys(k).length),(e.event_to_hover===void 0||pt.event_to_hover===e.event_to_hover)&&JSON.stringify(pt)!==JSON.stringify(e)&&(n(2,J=Un(e,Qe,We)),n(73,pt=e),wt()),t.$$.dirty[0]&36&&(J.dates_to_show||J.show_ticks||J.show_as_week||J.show_weekends)&&n(5,Tt=Tt.filter(C=>!!C)),t.$$.dirty[0]&64&&n(88,r=Math.floor(Ut/dd)||1),t.$$.dirty[0]&4|t.$$.dirty[2]&67108864&&n(87,o=J.show_as_week&&r<7),t.$$.dirty[0]&4|t.$$.dirty[2]&33554432&&n(75,Xe=J.show_as_week&&!o?Oa.floor(J.start_date):Gt.floor(J.start_date)),t.$$.dirty[0]&4|t.$$.dirty[2]&67108864&&n(74,Nt=r<J.dates_to_show||J.show_as_week?r:J.dates_to_show),t.$$.dirty[0]&4|t.$$.dirty[2]&33566720&&n(86,s=(()=>(J.show_weekends||!J.show_weekends)&&Bt(Xe,J.show_as_week?Gt.offset(Xe,o?Nt-1:6):Gt.offset(Xe,Nt-1)))()),t.$$.dirty[0]&22|t.$$.dirty[2]&16777216&&(()=>S(void 0,void 0,void 0,function*(){J.booking_options?n(84,kn=J.booking_options):!Ve&&z&&Array.isArray(J.events)&&s.length>0&&(yield ra()),rn()}))(),t.$$.dirty[2]&134217728&&Object.keys(k).length&&Ft("onError",k),t.$$.dirty[2]&16777216&&(Wt=s[s.length-1]),t.$$.dirty[0]&4&&n(14,fn=Gt.offset(new Date,J.max_book_ahead_days).toLocaleDateString()),t.$$.dirty[0]&4&&n(15,nn=Gt.offset(new Date,J.min_book_ahead_days).toLocaleDateString()),t.$$.dirty[0]&4|t.$$.dirty[2]&1984&&((n(68,M=J.events)===null||M===void 0?void 0:M.length)&&(n(69,G=J.events)===null||G===void 0?void 0:G.length)>1?(n(79,xt=n(70,I=J.events)===null||I===void 0?void 0:I.flatMap(C=>C.participantEmails)),n(80,ht=[]),n(81,bt=[])):(n(71,U=J.events)===null||U===void 0?void 0:U.length)===1&&(n(80,ht=n(72,B=J.events)===null||B===void 0?void 0:B.flatMap(C=>C.participantEmails)),n(79,xt=[]),Ft("eventOptionsReady",{slots:[]}))),t.$$.dirty[2]&655360&&n(9,h=[...bt,...xt.map(C=>({emailAddress:C,availability:Ye.FREE,timeslots:[]}))]),t.$$.dirty[0]&4|t.$$.dirty[1]&8&&n(82,Ae=[...new Set([...J.required_participants,oe])]),t.$$.dirty[0]&516|t.$$.dirty[2]&22151168&&n(8,tt=s.map(C=>{const $=Nn(td(C,h,Ae,kn,xt,J));return{epochs:hn($,J.partial_bookable_ratio),slots:$,timestamp:C}})),t.$$.dirty[0]&257&&L&&(tt.flatMap(C=>C.slots).forEach(C=>{C.selectionPending=C.start_time>=L[0].start_time&&C.end_time<=L[L.length-1].end_time}),n(8,tt=[...tt])),t.$$.dirty[0]&134217984&&re&&(n(85,It=re),tt.flatMap(C=>C.slots).filter(C=>re&&C.start_time>=re[0].start_time&&C.end_time<=re[re.length-1].end_time).forEach(C=>{C.selectionPending=!1,C.selectionStatus=cn.SELECTED}),n(8,tt=[...tt])),t.$$.dirty[0]&384|t.$$.dirty[2]&48&&n(16,dn=Dn(Dt,n(67,w=(n(66,N=tt[0])!==null&&N!==void 0?N:{}).slots)===null||w===void 0?void 0:w.map(C=>C.start_time))),t.$$.dirty[0]&256&&n(76,_n=(tt!=null?tt:[]).map(C=>C.slots.filter($=>$.selectionStatus===cn.SELECTED)).flat()),t.$$.dirty[2]&16384&&n(77,Rt=_n.sort((C,$)=>C.start_time.getTime()-$.start_time.getTime()).reduce((C,$)=>{const Se=C[C.length-1];return Se&&$.start_time.getTime()===Se.end_time.getTime()?Se.end_time=$.end_time:C.push(Object.assign({},$)),C},[])),t.$$.dirty[0]&4|t.$$.dirty[2]&8486912&&JSON.stringify(Rt)!==JSON.stringify(In)){let C=Rt;Rt.length===1&&(It.length?C=It.map($=>($.available_calendars=$.emails,Object.assign(Object.assign({},Rt[0]),$))):C=C.map($=>Object.assign(Object.assign({},J.events[0]),$))),Ft("timeSlotChosen",{timeSlots:C.map($=>Object.assign({},$))}),n(78,In=Rt)}if(t.$$.dirty[0]&6|t.$$.dirty[2]&262144&&(()=>S(void 0,void 0,void 0,function*(){var C;J.availability?setTimeout(()=>De(J.availability)):z&&(Array.isArray(ht)&&ht.length>0||J.booking_user_email&&J.booking_user_token)&&((C=J.events)===null||C===void 0?void 0:C.length)===1&&(yield rt())}))(),t.$$.dirty[0]&256|t.$$.dirty[2]&2097152&&JSON.stringify(qn)!==JSON.stringify(tt.map(C=>C.timestamp))&&(n(83,qn=tt.map(C=>C.timestamp)),Ft("dateChange",{dates:qn})),t.$$.dirty[0]&6|t.$$.dirty[2]&131072){if(z&&xt.length&&J.capacity)try{Tn(z,{name:"IncompatibleProperties",message:"Setting `capacity` currently does not work when fetching availability directly from Nylas. Please pass `calendars` data directly to use `capacity`."})}catch(C){console.error(C)}else if(J.capacity&&J.capacity<1)try{Tn(z,{name:"IncompatibleProperties",message:"`capacity` must be an integer of 1 or more"})}catch(C){console.error(C)}}t.$$.dirty[0]&516&&n(18,c=sl().domain([0,h.length/2,h.length]).range([J.busy_color,J.partial_color,J.free_color]))},n(17,_=C=>C.slots.filter($=>Mn($))),e=Mt(e),[L,z,J,Qe,Ve,Tt,Ut,Dt,tt,h,Ot,gt,Yt,At,fn,nn,dn,_,c,a,kt,Ln,ya,Ra,Yn,xa,mi,re,V,K,H,Z,de,ke,oe,j,q,ce,Ge,Pe,_e,ze,Be,F,le,se,ye,ue,ie,be,Ce,Q,P,fe,pe,Me,Ze,Je,it,Ue,lt,dt,Te,Ke,Fe,ct,N,w,M,G,I,U,B,pt,Nt,Xe,_n,Rt,In,xt,ht,bt,Ae,qn,kn,It,s,o,r,k,gn,ja,Ha,Va,Ua,Wa,Ka,yt,hi,_i]}class gd extends Vn{constructor(e){super();this.shadowRoot.innerHTML='<style>*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}.sr-only{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}main{--black:#161717;--grey-dark:#636671;--grey:#bdc0cb;--grey-lighter:#dfe1e8;--grey-dark-warm:#9fa4b5;--grey-lightest:#f7f7f8;--grey-background:#f0f1f5;--white:#ffffff;--blue:#314fa9;--blue-lighter:#f0f3ff;--red:#ee3248;--red-lighter:#ffeef0;--fs-12:0.75rem;--fs-14:0.875rem;--fs-16:1rem;--black-90:#2c2e2e;--grey-light:#f7f7f8;--grey-warm:#cbcbcb}main{height:100%;overflow:hidden;display:grid;font-family:Arial, Helvetica, sans-serif;position:relative;z-index:1;grid-template-rows:auto 1fr;gap:1rem}main.ticked{grid-template-columns:70px 1fr}main.ticked.timezone{grid-template-columns:70px 70px 1fr}main.hide-header{grid-template-rows:auto}main.hide-header>header{display:none}main>header{grid-column:-1/1;display:grid;grid-template-columns:1fr;align-items:baseline}main>header.dated{grid-template-columns:1fr auto}main>header h2{font-size:1.5rem;font-weight:700}main>header .change-dates{display:grid;grid-template-columns:1fr 1fr;gap:1rem}main>header .change-dates button{background-color:#f7f7f8;border:1px solid #e3e8ee;cursor:pointer;display:flex}main>header .change-dates button:hover{background-color:#e3e8ee}main>header .legend{padding:0.5rem 0 0;color:#636671}main>header .legend span{display:inline-block;margin-right:1rem}main>header .legend span::before{content:"";border-radius:8px;height:12px;width:12px;margin-right:0.25rem;display:inline-block;background-color:black}main>header .legend span.available::before{background-color:var(--free-color, #36d2addf)}main>header .legend span.not-available::before{background-color:var(--busy-color, #36d2addf)}main>header .legend span.closed::before{background-color:var(--closed-color, #999)}main>header .legend span.partially-available::before{background-color:var(--partial-color, #ffff7566)}main .timezone-ticks{position:relative}main .timezone-ticks .timezone{font-size:0.8rem;left:25%;position:absolute;top:5px}main .days{position:relative;display:grid;gap:0rem;grid-auto-flow:column;grid-auto-columns:1fr;height:100%;overflow:auto}@keyframes progress{0%{width:0}100%{width:100%}}main .days.loading::after{background-color:var(--blue-lighter);z-index:-1}main .days.loading::before{animation:progress 2s ease-in-out infinite;background-color:var(--blue)}main .days.loading::before,main .days.loading::after{top:36px;left:0;content:"";display:block;height:4px;position:absolute}main .days.loading::before{z-index:3}main .days.timezone.loading::before,main .days.timezone.loading::after{left:180px}main .days.loading.error{animation:none}@keyframes progress{0%{width:0}100%{width:100%}}main .days.loading.error::after{background-color:var(--red);z-index:-1}main .days.loading.error::before{animation:progress 2s ease-in-out infinite;background-color:var(--red)}main .days.loading.error::before,main .days.loading.error::after{top:36px;left:0;content:"";display:block;height:4px;position:absolute}main .days.loading.error::before{z-index:3}main .days.schedule{overflow:hidden}main .days.list .day{display:block}main .days.list .day header{position:sticky;top:0;margin-top:0;background-color:white;height:40px;z-index:2}main .ticks{display:grid;grid-auto-flow:row;grid-auto-rows:auto;height:calc(100% - 40px);list-style-type:none;margin:0;padding:40px 0 0 0;overflow:hidden;font-size:0.8rem;font-family:sans-serif}main .ticks li{display:block;position:relative;height:auto;overflow:hidden;padding:0 0.25rem;display:grid;justify-content:right}main .day{display:grid;grid-template-rows:40px 1fr;position:relative}main .day header{width:100%;overflow:hidden}main .day header h2{margin:0;padding:0;display:grid;grid-template-columns:auto 1fr;gap:0.5rem;height:30px;line-height:1.875;font-size:1rem;font-weight:200}main .day header h2 .date{border-radius:15px;background:var(--blue);color:white;font-weight:bold;display:block;width:30px;height:30px;line-height:1.875;text-align:center}main .day .epochs{position:absolute;top:40px;width:100%;height:calc(100% - 40px)}main .day .epochs .epoch{position:absolute;width:100%}main .day .epochs .epoch .inner{margin:0rem;height:calc(100% - 0.5rem);padding:0.25rem 0;width:8px;margin:0}main .day .epochs .epoch.busy{background-image:linear-gradient(45deg, var(--busy-color-lightened) 12.5%, white 12.5%, white 50%, var(--busy-color-lightened) 50%, var(--busy-color-lightened) 62.5%, white 62.5%, white 100%);background-size:5.66px 5.66px}main .day .epochs .epoch.closed{background-image:linear-gradient(45deg, var(--closed-color-lightened) 12.5%, white 12.5%, white 50%, var(--closed-color-lightened) 50%, var(--closed-color-lightened) 62.5%, white 62.5%, white 100%);background-size:5.66px 5.66px}main .day .epochs .epoch.busy .inner{background-color:var(--busy-color, #ff647566)}main .day .epochs .epoch.closed .inner{background-color:var(--closed-color, #ff647566)}main .day .epochs .epoch.partial .inner{background-color:var(--partial-color, #ffff7566)}main .day .epochs .epoch.free .inner{background-color:var(--free-color, #36d2addf)}main .day .epochs .epoch .available-calendars{display:none;position:absolute;z-index:2;left:10px}main .day .epochs .epoch .available-calendars span{background:rgba(0, 0, 0, 0.5);display:inline-block;margin:0;padding:0.25rem;color:white;border-radius:4px;font-size:0.6rem}main .day:hover .epoch.partial .available-calendars{display:block}main .day .slots{display:grid;grid-auto-flow:row;grid-auto-rows:auto;height:100%;list-style-type:none;margin:0;padding:0}main .day .slots .slot{border:none;border-bottom:1px solid rgba(0, 0, 0, 0.05);background:transparent;position:relative;align-items:center;justify-content:center;align-content:center;font-family:sans-serif;touch-action:none}main .day .slots .slot.selected{background-color:var(--selected-color, var(--blue));box-shadow:none;border-bottom:1px solid transparent;z-index:3;margin-left:9px;margin-right:1px}main .day .slots .slot.pending{background-color:var(--selected-color-lightened);z-index:3;margin-left:9px;margin-right:1px}main .day .slots .slot.selected+.selected,main .day .slots .slot.pending+.pending{z-index:2}main .day .slots .slot.busy:not(.pending),main .day .slots .slot.closed:not(.pending){cursor:not-allowed}main .day .slots .slot.outside-of-time-range{background-color:var(--unavailable-color, #ddd)}main .day .slots .slot.outside-of-time-range:hover{cursor:not-allowed}main .day .slots .slot .selected-heading{position:absolute;top:3px;left:0;color:white;text-shadow:1px 1px 2px #002db4ff;font-weight:300;padding:0 3px;font-size:0.8rem;z-index:3;text-align:left;font-family:system-ui, sans-serif}main .day .slots .slot.pending .selected-heading{width:auto}main .day .slot-list{display:grid;grid-auto-rows:50px;grid-auto-flow:row;overflow:auto;gap:0.25rem;list-style-type:none;margin:0;padding:0}main .day .slot-list .slot{border-radius:4px;background:transparent;position:relative;align-items:center;justify-content:center;align-content:center;font-family:sans-serif;border:1px solid rgba(0, 0, 0, 0.1);box-shadow:none !important}@media(hover: hover) and (pointer: fine){main .day .slot-list .slot:hover{box-shadow:none;background-color:rgba(0, 0, 0, 0.1)}}main .day .slot-list .slot.selected{background:var(--blue);color:white}main .day .slot-list .slot .partial{display:block;font-size:0.6rem}main button.confirm{grid-column:-1/1}main.allow_booking .slot:not(.busy):hover,main.allow_booking .slot:not(.busy):focus,main.allow_booking .slot:not(.closed):hover,main.allow_booking .slot:not(.closed):focus{box-shadow:0 0 1px 0 var(--selected-color);cursor:pointer}main .attendee-overlay{background-color:white;border-radius:4px;box-shadow:0 4px 14px 0 black;display:none;font-size:14px;max-width:12rem;padding:1.2rem 1rem;position:absolute;z-index:3}main .attendee-overlay::before{content:"";width:0;height:0;border-left:10px solid transparent;border-right:10px solid transparent;border-bottom:10px solid white;position:absolute;left:5.5rem;top:-10px}main .attendee-overlay.invert-y::before{display:none}main .attendee-overlay.invert-y::after{content:"";width:0;height:0;border-left:10px solid transparent;border-right:10px solid transparent;border-top:10px solid white;position:absolute;left:5.5rem;bottom:-10px}main .attendee-overlay .attendee-list .contact{display:grid;grid-template-columns:40px auto;padding:0.6rem 0}main .attendee-overlay .attendee-list .contact.divider{border-bottom:1px solid #979797}main .attendee-overlay .attendee-list .contact.unavailable{filter:grayscale(80%);opacity:50%}main .attendee-overlay .attendee-list .contact .default-avatar{background:#002db4;border-radius:50%;color:#fff;font-family:sans-serif;font-size:1rem;font-weight:bold;height:32px;line-height:35px;text-align:center;text-transform:uppercase;width:32px}main .attendee-overlay .attendee-list .contact .contact-details{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}main .attendee-overlay .attendee-list .contact .contact-details .name{font-weight:bold;display:block}main .attendee-overlay .attendee-list .icon{position:relative;top:-1.3rem;left:1.2rem;height:0;width:0}main .attendee-overlay .more-attendees{font-weight:bold;display:inline-block;padding-top:1rem}</style>',Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},_d,fd,Zt,{id:1,access_token:28,event_to_hover:0,event_to_select:27,allow_booking:29,allow_date_change:30,attendees_to_show:31,availability:32,booking_options:33,booking_user_email:34,booking_user_token:35,busy_color:36,capacity:37,closed_color:38,date_format:39,dates_to_show:40,end_hour:41,event_buffer:42,free_color:43,mandate_top_of_hour:44,max_book_ahead_days:45,min_book_ahead_days:46,open_hours:47,overbooked_threshold:48,partial_bookable_ratio:49,partial_color:50,required_participants:51,selected_color:52,show_as_week:53,show_header:54,show_hosts:55,show_ticks:56,show_weekends:57,slot_size:58,start_date:59,start_hour:60,timezone:61,view_as:62,unavailable_color:63,events:64,reload:65},null,[-1,-1,-1,-1,-1]),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["id","access_token","event_to_hover","event_to_select","allow_booking","allow_date_change","attendees_to_show","availability","booking_options","booking_user_email","booking_user_token","busy_color","capacity","closed_color","date_format","dates_to_show","end_hour","event_buffer","free_color","mandate_top_of_hour","max_book_ahead_days","min_book_ahead_days","open_hours","overbooked_threshold","partial_bookable_ratio","partial_color","required_participants","selected_color","show_as_week","show_header","show_hosts","show_ticks","show_weekends","slot_size","start_date","start_hour","timezone","view_as","unavailable_color","events","reload"]}get id(){return this.$$.ctx[1]}set id(e){this.$$set({id:e}),X()}get access_token(){return this.$$.ctx[28]}set access_token(e){this.$$set({access_token:e}),X()}get event_to_hover(){return this.$$.ctx[0]}set event_to_hover(e){this.$$set({event_to_hover:e}),X()}get event_to_select(){return this.$$.ctx[27]}set event_to_select(e){this.$$set({event_to_select:e}),X()}get allow_booking(){return this.$$.ctx[29]}set allow_booking(e){this.$$set({allow_booking:e}),X()}get allow_date_change(){return this.$$.ctx[30]}set allow_date_change(e){this.$$set({allow_date_change:e}),X()}get attendees_to_show(){return this.$$.ctx[31]}set attendees_to_show(e){this.$$set({attendees_to_show:e}),X()}get availability(){return this.$$.ctx[32]}set availability(e){this.$$set({availability:e}),X()}get booking_options(){return this.$$.ctx[33]}set booking_options(e){this.$$set({booking_options:e}),X()}get booking_user_email(){return this.$$.ctx[34]}set booking_user_email(e){this.$$set({booking_user_email:e}),X()}get booking_user_token(){return this.$$.ctx[35]}set booking_user_token(e){this.$$set({booking_user_token:e}),X()}get busy_color(){return this.$$.ctx[36]}set busy_color(e){this.$$set({busy_color:e}),X()}get capacity(){return this.$$.ctx[37]}set capacity(e){this.$$set({capacity:e}),X()}get closed_color(){return this.$$.ctx[38]}set closed_color(e){this.$$set({closed_color:e}),X()}get date_format(){return this.$$.ctx[39]}set date_format(e){this.$$set({date_format:e}),X()}get dates_to_show(){return this.$$.ctx[40]}set dates_to_show(e){this.$$set({dates_to_show:e}),X()}get end_hour(){return this.$$.ctx[41]}set end_hour(e){this.$$set({end_hour:e}),X()}get event_buffer(){return this.$$.ctx[42]}set event_buffer(e){this.$$set({event_buffer:e}),X()}get free_color(){return this.$$.ctx[43]}set free_color(e){this.$$set({free_color:e}),X()}get mandate_top_of_hour(){return this.$$.ctx[44]}set mandate_top_of_hour(e){this.$$set({mandate_top_of_hour:e}),X()}get max_book_ahead_days(){return this.$$.ctx[45]}set max_book_ahead_days(e){this.$$set({max_book_ahead_days:e}),X()}get min_book_ahead_days(){return this.$$.ctx[46]}set min_book_ahead_days(e){this.$$set({min_book_ahead_days:e}),X()}get open_hours(){return this.$$.ctx[47]}set open_hours(e){this.$$set({open_hours:e}),X()}get overbooked_threshold(){return this.$$.ctx[48]}set overbooked_threshold(e){this.$$set({overbooked_threshold:e}),X()}get partial_bookable_ratio(){return this.$$.ctx[49]}set partial_bookable_ratio(e){this.$$set({partial_bookable_ratio:e}),X()}get partial_color(){return this.$$.ctx[50]}set partial_color(e){this.$$set({partial_color:e}),X()}get required_participants(){return this.$$.ctx[51]}set required_participants(e){this.$$set({required_participants:e}),X()}get selected_color(){return this.$$.ctx[52]}set selected_color(e){this.$$set({selected_color:e}),X()}get show_as_week(){return this.$$.ctx[53]}set show_as_week(e){this.$$set({show_as_week:e}),X()}get show_header(){return this.$$.ctx[54]}set show_header(e){this.$$set({show_header:e}),X()}get show_hosts(){return this.$$.ctx[55]}set show_hosts(e){this.$$set({show_hosts:e}),X()}get show_ticks(){return this.$$.ctx[56]}set show_ticks(e){this.$$set({show_ticks:e}),X()}get show_weekends(){return this.$$.ctx[57]}set show_weekends(e){this.$$set({show_weekends:e}),X()}get slot_size(){return this.$$.ctx[58]}set slot_size(e){this.$$set({slot_size:e}),X()}get start_date(){return this.$$.ctx[59]}set start_date(e){this.$$set({start_date:e}),X()}get start_hour(){return this.$$.ctx[60]}set start_hour(e){this.$$set({start_hour:e}),X()}get timezone(){return this.$$.ctx[61]}set timezone(e){this.$$set({timezone:e}),X()}get view_as(){return this.$$.ctx[62]}set view_as(e){this.$$set({view_as:e}),X()}get unavailable_color(){return this.$$.ctx[63]}set unavailable_color(e){this.$$set({unavailable_color:e}),X()}get events(){return this.$$.ctx[64]}set events(e){this.$$set({events:e}),X()}get reload(){return this.$$.ctx[65]}}customElements.define("nylas-availability",gd);function Yl(t,e,n){const a=t.slice();return a[56]=e[n],a}function Zl(t,e,n){const a=t.slice();return a[59]=e[n],a[61]=n,a}function Jl(t,e,n){const a=t.slice();return a[47]=e[n],a[48]=e,a[49]=n,a}function Ql(t,e,n){const a=t.slice();return a[50]=e[n],a[51]=e,a[52]=n,a}function Xl(t,e,n){const a=t.slice();return a[53]=e[n],a}function bd(t){let e;return{c(){e=b("p"),e.textContent=`Select timeslots to view event information (You'll be able to review
        before you book)`},m(n,a){Y(n,e,a)},p:he,d(n){n&&W(e)}}}function yd(t){let e,n,a,r=t[1].event_options,o=[];for(let s=0;s<r.length;s+=1)o[s]=es(Yl(t,r,s));return{c(){e=b("h2"),e.textContent="Select an option",n=O(),a=b("ul");for(let s=0;s<o.length;s+=1)o[s].c();p(a,"class","timeslots timeslot-options")},m(s,h){Y(s,e,h),Y(s,n,h),Y(s,a,h);for(let c=0;c<o.length;c+=1)o[c].m(a,null)},p(s,h){if(h[0]&898){r=s[1].event_options;let c;for(c=0;c<r.length;c+=1){const _=Yl(s,r,c);o[c]?o[c].p(_,h):(o[c]=es(_),o[c].c(),o[c].m(a,null))}for(;c<o.length;c+=1)o[c].d(1);o.length=r.length}},d(s){s&&W(e),s&&W(n),s&&W(a),en(o,s)}}}function pd(t){let e,n,a,r,o,s,h,c,_=t[1].booking_label+"",y,v,k,E,S,N=t[3],w=[];for(let G=0;G<N.length;G+=1)w[G]=os(Ql(t,N,G));let M=t[1].custom_fields.length&&ls(t);return{c(){e=b("h2"),e.textContent="Your Appointment Bookings",n=O(),a=b("p"),a.textContent="Do you want to book the following?",r=O(),o=b("ul");for(let G=0;G<w.length;G+=1)w[G].c();s=O(),M&&M.c(),h=O(),c=b("button"),y=ge(_),p(o,"class","timeslots"),c.disabled=v=!t[5],p(c,"title",k=t[5]?void 0:"Please complete all required fields"),p(c,"class","book")},m(G,I){Y(G,e,I),Y(G,n,I),Y(G,a,I),Y(G,r,I),Y(G,o,I);for(let U=0;U<w.length;U+=1)w[U].m(o,null);Y(G,s,I),M&&M.m(G,I),Y(G,h,I),Y(G,c,I),m(c,y),E||(S=te(c,"click",t[38]),E=!0)},p(G,I){if(I[0]&10){N=G[3];let U;for(U=0;U<N.length;U+=1){const B=Ql(G,N,U);w[U]?w[U].p(B,I):(w[U]=os(B),w[U].c(),w[U].m(o,null))}for(;U<w.length;U+=1)w[U].d(1);w.length=N.length}G[1].custom_fields.length?M?M.p(G,I):(M=ls(G),M.c(),M.m(h.parentNode,h)):M&&(M.d(1),M=null),I[0]&2&&_!==(_=G[1].booking_label+"")&&He(y,_),I[0]&32&&v!==(v=!G[5])&&(c.disabled=v),I[0]&32&&k!==(k=G[5]?void 0:"Please complete all required fields")&&p(c,"title",k)},d(G){G&&W(e),G&&W(n),G&&W(a),G&&W(r),G&&W(o),en(w,G),G&&W(s),M&&M.d(G),G&&W(h),G&&W(c),E=!1,S()}}}function $l(t){let e,n,a=t[59].event_title+"",r,o,s=t[59].event_description+"",h,c,_=t[59].start_time.toLocaleTimeString([],{timeStyle:"short"})+"",y,v,k=t[59].end_time.toLocaleTimeString([],{timeStyle:"short"})+"",E,S,N=t[59].emails.join(", ")+"",w,M;return{c(){e=b("span"),n=b("h4"),r=ge(a),o=ge(`:
                    `),h=ge(s),c=O(),y=ge(_),v=ge(" - "),E=ge(k),S=ge(`
                  with `),w=ge(N),M=O(),p(e,"class","sub-event")},m(G,I){Y(G,e,I),m(e,n),m(n,r),m(n,o),m(n,h),m(e,c),m(e,y),m(e,v),m(e,E),m(e,S),m(e,w),m(e,M)},p(G,I){I[0]&2&&a!==(a=G[59].event_title+"")&&He(r,a),I[0]&2&&s!==(s=G[59].event_description+"")&&He(h,s),I[0]&2&&_!==(_=G[59].start_time.toLocaleTimeString([],{timeStyle:"short"})+"")&&He(y,_),I[0]&2&&k!==(k=G[59].end_time.toLocaleTimeString([],{timeStyle:"short"})+"")&&He(E,k),I[0]&2&&N!==(N=G[59].emails.join(", ")+"")&&He(w,N)},d(G){G&&W(e)}}}function es(t){let e,n,a=t[56][0].start_time.toLocaleString([],{dateStyle:"medium",timeStyle:"short"})+"",r,o,s=t[56][t[56].length-1].end_time.toLocaleString([],{dateStyle:"medium",timeStyle:"short"})+"",h,c,_,y,v,k,E=t[56],S=[];for(let M=0;M<E.length;M+=1)S[M]=$l(Zl(t,E,M));function N(){return t[39](t[56])}function w(){return t[41](t[56])}return{c(){e=b("li"),n=b("span"),r=ge(a),o=ge(`
              -
              `),h=ge(s),c=O(),_=b("div");for(let M=0;M<S.length;M+=1)S[M].c();y=O(),p(n,"class","time"),p(_,"class","sub-events"),p(e,"aria-role","button")},m(M,G){Y(M,e,G),m(e,n),m(n,r),m(n,o),m(n,h),m(e,c),m(e,_);for(let I=0;I<S.length;I+=1)S[I].m(_,null);m(e,y),v||(k=[te(e,"mouseenter",N),te(e,"mouseleave",t[40]),te(e,"click",w)],v=!0)},p(M,G){if(t=M,G[0]&2&&a!==(a=t[56][0].start_time.toLocaleString([],{dateStyle:"medium",timeStyle:"short"})+"")&&He(r,a),G[0]&2&&s!==(s=t[56][t[56].length-1].end_time.toLocaleString([],{dateStyle:"medium",timeStyle:"short"})+"")&&He(h,s),G[0]&2){E=t[56];let I;for(I=0;I<E.length;I+=1){const U=Zl(t,E,I);S[I]?S[I].p(U,G):(S[I]=$l(U),S[I].c(),S[I].m(_,null))}for(;I<S.length;I+=1)S[I].d(1);S.length=E.length}},d(M){M&&W(e),en(S,M),v=!1,vt(k)}}}function ts(t){let e,n;function a(h,c){if(h[1].recurrence==="optional")return Td;if(h[1].recurrence==="required")return vd}let r=a(t),o=r&&r(t),s=t[50].recurrence_cadence!=="none"&&!t[1].recurrence_expiry&&as(t);return{c(){e=b("footer"),o&&o.c(),n=O(),s&&s.c()},m(h,c){Y(h,e,c),o&&o.m(e,null),m(e,n),s&&s.m(e,null)},p(h,c){r===(r=a(h))&&o?o.p(h,c):(o&&o.d(1),o=r&&r(h),o&&(o.c(),o.m(e,n))),h[50].recurrence_cadence!=="none"&&!h[1].recurrence_expiry?s?s.p(h,c):(s=as(h),s.c(),s.m(e,null)):s&&(s.d(1),s=null)},d(h){h&&W(e),o&&o.d(),s&&s.d()}}}function vd(t){let e,n,a=t[50].recurrence_cadence+"",r;return{c(){e=b("strong"),n=ge("Repeating "),r=ge(a)},m(o,s){Y(o,e,s),m(e,n),m(e,r)},p(o,s){s[0]&8&&a!==(a=o[50].recurrence_cadence+"")&&He(r,a)},d(o){o&&W(e)}}}function Td(t){let e,n,a,r,o,s,h,c,_,y;t[29][0][t[52]]=[];function v(){t[28].call(o,t[51],t[52])}let k=t[1].recurrence_cadence,E=[];for(let S=0;S<k.length;S+=1)E[S]=ns(Xl(t,k,S));return{c(){e=b("strong"),e.textContent="How often should this event repeat?",n=O(),a=b("div"),r=b("label"),o=b("input"),s=O(),h=b("span"),h.textContent="never",c=O();for(let S=0;S<E.length;S+=1)E[S].c();p(o,"type","radio"),o.__value="none",o.value=o.__value,t[29][0][t[52]].push(o),xe(r,"checked",t[50].recurrence_cadence==="none"),p(a,"class","cadences")},m(S,N){Y(S,e,N),Y(S,n,N),Y(S,a,N),m(a,r),m(r,o),o.checked=o.__value===t[50].recurrence_cadence,m(r,s),m(r,h),m(a,c);for(let w=0;w<E.length;w+=1)E[w].m(a,null);_||(y=te(o,"change",v),_=!0)},p(S,N){if(t=S,N[0]&8&&(o.checked=o.__value===t[50].recurrence_cadence),N[0]&8&&xe(r,"checked",t[50].recurrence_cadence==="none"),N[0]&10){k=t[1].recurrence_cadence;let w;for(w=0;w<k.length;w+=1){const M=Xl(t,k,w);E[w]?E[w].p(M,N):(E[w]=ns(M),E[w].c(),E[w].m(a,null))}for(;w<E.length;w+=1)E[w].d(1);E.length=k.length}},d(S){S&&W(e),S&&W(n),S&&W(a),t[29][0][t[52]].splice(t[29][0][t[52]].indexOf(o),1),en(E,S),_=!1,y()}}}function ns(t){let e,n,a,r,o,s=t[53]+"",h,c,_,y;t[29][0][t[52]]=[];function v(){t[30].call(n,t[51],t[52])}return{c(){e=b("label"),n=b("input"),r=O(),o=b("span"),h=ge(s),c=O(),p(n,"type","radio"),n.__value=a=t[53],n.value=n.__value,t[29][0][t[52]].push(n),xe(e,"checked",t[50].recurrence_cadence===t[53])},m(k,E){Y(k,e,E),m(e,n),n.checked=n.__value===t[50].recurrence_cadence,m(e,r),m(e,o),m(o,h),m(e,c),_||(y=te(n,"change",v),_=!0)},p(k,E){t=k,E[0]&2&&a!==(a=t[53])&&(n.__value=a,n.value=n.__value),E[0]&8&&(n.checked=n.__value===t[50].recurrence_cadence),E[0]&2&&s!==(s=t[53]+"")&&He(h,s),E[0]&10&&xe(e,"checked",t[50].recurrence_cadence===t[53])},d(k){k&&W(e),t[29][0][t[52]].splice(t[29][0][t[52]].indexOf(n),1),_=!1,y()}}}function as(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B;t[29][1][t[52]]=[];function z(){t[31].call(o,t[51],t[52])}function V(){t[32].call(y,t[51],t[52])}let L=t[50].expirySelection==="after"&&is(t);function re(){t[34].call(w,t[51],t[52])}let K=t[50].expirySelection==="on"&&rs(t);return{c(){e=b("strong"),e.textContent="Ends",n=O(),a=b("div"),r=b("label"),o=b("input"),s=O(),h=b("span"),h.textContent="never",c=O(),_=b("label"),y=b("input"),v=O(),k=b("span"),k.textContent="After",E=O(),L&&L.c(),S=O(),N=b("label"),w=b("input"),M=O(),G=b("span"),G.textContent="On",I=O(),K&&K.c(),p(o,"type","radio"),o.__value="none",o.value=o.__value,t[29][1][t[52]].push(o),xe(r,"checked",t[50].expirySelection==="none"),p(y,"type","radio"),y.__value="after",y.value=y.__value,t[29][1][t[52]].push(y),xe(_,"checked",t[50].expirySelection==="after"),p(w,"type","radio"),w.__value="on",w.value=w.__value,t[29][1][t[52]].push(w),xe(N,"checked",t[50].expirySelection==="on"),p(a,"class","expiry")},m(H,Z){Y(H,e,Z),Y(H,n,Z),Y(H,a,Z),m(a,r),m(r,o),o.checked=o.__value===t[50].expirySelection,m(r,s),m(r,h),m(a,c),m(a,_),m(_,y),y.checked=y.__value===t[50].expirySelection,m(_,v),m(_,k),m(_,E),L&&L.m(_,null),m(a,S),m(a,N),m(N,w),w.checked=w.__value===t[50].expirySelection,m(N,M),m(N,G),m(N,I),K&&K.m(N,null),U||(B=[te(o,"change",z),te(y,"change",V),te(w,"change",re)],U=!0)},p(H,Z){t=H,Z[0]&8&&(o.checked=o.__value===t[50].expirySelection),Z[0]&8&&xe(r,"checked",t[50].expirySelection==="none"),Z[0]&8&&(y.checked=y.__value===t[50].expirySelection),t[50].expirySelection==="after"?L?L.p(t,Z):(L=is(t),L.c(),L.m(_,null)):L&&(L.d(1),L=null),Z[0]&8&&xe(_,"checked",t[50].expirySelection==="after"),Z[0]&8&&(w.checked=w.__value===t[50].expirySelection),t[50].expirySelection==="on"?K?K.p(t,Z):(K=rs(t),K.c(),K.m(N,null)):K&&(K.d(1),K=null),Z[0]&8&&xe(N,"checked",t[50].expirySelection==="on")},d(H){H&&W(e),H&&W(n),H&&W(a),t[29][1][t[52]].splice(t[29][1][t[52]].indexOf(o),1),t[29][1][t[52]].splice(t[29][1][t[52]].indexOf(y),1),L&&L.d(),t[29][1][t[52]].splice(t[29][1][t[52]].indexOf(w),1),K&&K.d(),U=!1,vt(B)}}}function is(t){let e,n,a,r,o;function s(){t[33].call(e,t[51],t[52])}return{c(){e=b("input"),n=O(),a=b("span"),a.textContent="occurrences",p(e,"class","after"),p(e,"type","number"),p(e,"min","1")},m(h,c){Y(h,e,c),Re(e,t[50].recurrence_expiry),Y(h,n,c),Y(h,a,c),r||(o=te(e,"input",s),r=!0)},p(h,c){t=h,c[0]&8&&Cn(e.value)!==t[50].recurrence_expiry&&Re(e,t[50].recurrence_expiry)},d(h){h&&W(e),h&&W(n),h&&W(a),r=!1,o()}}}function rs(t){let e,n,a,r;function o(){t[35].call(e,t[51],t[52])}return{c(){e=b("input"),p(e,"type","date"),p(e,"min",n=t[50].start_time.toISOString().substring(0,10))},m(s,h){Y(s,e,h),Re(e,t[50].recurrence_expiry),a||(r=te(e,"input",o),a=!0)},p(s,h){t=s,h[0]&8&&n!==(n=t[50].start_time.toISOString().substring(0,10))&&p(e,"min",n),h[0]&8&&Re(e,t[50].recurrence_expiry)},d(s){s&&W(e),a=!1,r()}}}function os(t){let e,n,a=(t[50].event_title||t[1].event_title)+"",r,o,s=(t[50].event_description||t[1].event_description)+"",h,c,_,y=t[50].start_time.toLocaleTimeString([],{timeStyle:"short"})+"",v,k,E=t[50].end_time.toLocaleTimeString([],{timeStyle:"short"})+"",S,N,w,M=t[50].start_time.toLocaleDateString("default",{dateStyle:"full"})+"",G,I,U,B=t[1].recurrence!=="none"&&ts(t);return{c(){e=b("li"),n=b("h3"),r=ge(a),o=ge(": "),h=ge(s),c=O(),_=b("span"),v=ge(y),k=ge(`
              -
              `),S=ge(E),N=O(),w=b("span"),G=ge(M),I=O(),B&&B.c(),U=O(),p(_,"class","time"),p(w,"class","date")},m(z,V){Y(z,e,V),m(e,n),m(n,r),m(n,o),m(n,h),m(e,c),m(e,_),m(_,v),m(_,k),m(_,S),m(e,N),m(e,w),m(w,G),m(e,I),B&&B.m(e,null),m(e,U)},p(z,V){V[0]&10&&a!==(a=(z[50].event_title||z[1].event_title)+"")&&He(r,a),V[0]&10&&s!==(s=(z[50].event_description||z[1].event_description)+"")&&He(h,s),V[0]&8&&y!==(y=z[50].start_time.toLocaleTimeString([],{timeStyle:"short"})+"")&&He(v,y),V[0]&8&&E!==(E=z[50].end_time.toLocaleTimeString([],{timeStyle:"short"})+"")&&He(S,E),V[0]&8&&M!==(M=z[50].start_time.toLocaleDateString("default",{dateStyle:"full"})+"")&&He(G,M),z[1].recurrence!=="none"?B?B.p(z,V):(B=ts(z),B.c(),B.m(e,U)):B&&(B.d(1),B=null)},d(z){z&&W(e),B&&B.d()}}}function ls(t){let e,n=t[1].custom_fields,a=[];for(let r=0;r<n.length;r+=1)a[r]=ss(Jl(t,n,r));return{c(){e=b("div");for(let r=0;r<a.length;r+=1)a[r].c();p(e,"id","custom-fields")},m(r,o){Y(r,e,o);for(let s=0;s<a.length;s+=1)a[s].m(e,null)},p(r,o){if(o[0]&6){n=r[1].custom_fields;let s;for(s=0;s<n.length;s+=1){const h=Jl(r,n,s);a[s]?a[s].p(h,o):(a[s]=ss(h),a[s].c(),a[s].m(e,null))}for(;s<a.length;s+=1)a[s].d(1);a.length=n.length}},d(r){r&&W(e),en(a,r)}}}function kd(t){let e,n,a=t[47].title+"",r,o,s,h,c,_,y;function v(){t[37].call(s,t[47])}return{c(){e=b("label"),n=b("strong"),r=ge(a),o=O(),s=b("input"),h=O(),p(s,"type","text"),p(e,"data-required",c=t[47].required)},m(k,E){Y(k,e,E),m(e,n),m(n,r),m(e,o),m(e,s),Re(s,t[2][t[47].title]),m(e,h),_||(y=te(s,"input",v),_=!0)},p(k,E){t=k,E[0]&2&&a!==(a=t[47].title+"")&&He(r,a),E[0]&6&&s.value!==t[2][t[47].title]&&Re(s,t[2][t[47].title]),E[0]&2&&c!==(c=t[47].required)&&p(e,"data-required",c)},d(k){k&&W(e),_=!1,y()}}}function Md(t){let e,n,a=t[47].title+"",r,o,s,h,c,_,y;function v(){t[36].call(s,t[47])}return{c(){e=b("label"),n=b("strong"),r=ge(a),o=O(),s=b("input"),h=O(),p(s,"type","email"),p(e,"data-required",c=t[47].required)},m(k,E){Y(k,e,E),m(e,n),m(n,r),m(e,o),m(e,s),Re(s,t[2][t[47].title]),m(e,h),_||(y=te(s,"input",v),_=!0)},p(k,E){t=k,E[0]&2&&a!==(a=t[47].title+"")&&He(r,a),E[0]&6&&s.value!==t[2][t[47].title]&&Re(s,t[2][t[47].title]),E[0]&2&&c!==(c=t[47].required)&&p(e,"data-required",c)},d(k){k&&W(e),_=!1,y()}}}function ss(t){let e;function n(o,s){return o[47].type==="email"?Md:kd}let a=n(t),r=a(t);return{c(){r.c(),e=Aa()},m(o,s){r.m(o,s),Y(o,e,s)},p(o,s){a===(a=n(o))&&r?r.p(o,s):(r.d(1),r=a(o),r&&(r.c(),r.m(e.parentNode,e)))},d(o){r.d(o),o&&W(e)}}}function us(t){let e,n=t[1].notification_message+"",a;return{c(){e=b("p"),a=ge(n)},m(r,o){Y(r,e,o),m(e,a)},p(r,o){o[0]&2&&n!==(n=r[1].notification_message+"")&&He(a,n)},d(r){r&&W(e)}}}function wd(t){let e,n,a,r,o;function s(y,v){return y[3].length?pd:y[1].event_options.length?yd:bd}let h=s(t),c=h(t),_=t[4]&&us(t);return{c(){e=b("nylas-error"),n=O(),a=b("main"),r=b("section"),c.c(),o=O(),_&&_.c(),this.c=he,Ee(e,"id",t[0]),p(r,"class","booker")},m(y,v){Y(y,e,v),Y(y,n,v),Y(y,a,v),m(a,r),c.m(r,null),m(r,o),_&&_.m(r,null)},p(y,v){v[0]&1&&Ee(e,"id",y[0]),h===(h=s(y))&&c?c.p(y,v):(c.d(1),c=h(y),c&&(c.c(),c.m(r,o))),y[4]?_?_.p(y,v):(_=us(y),_.c(),_.m(r,null)):_&&(_.d(1),_=null)},i:he,o:he,d(y){y&&W(e),y&&W(n),y&&W(a),c.d(),_&&_.d()}}}function Ad(t,e,n){let a,r,o,s;Fn(t,ir,P=>n(42,o=P)),Fn(t,ni,P=>n(27,s=P));var h=this&&this.__awaiter||function(P,fe,pe,Me){function Ze(Je){return Je instanceof pe?Je:new pe(function(it){it(Je)})}return new(pe||(pe=Promise))(function(Je,it){function Ue(Te){try{dt(Me.next(Te))}catch(Ke){it(Ke)}}function lt(Te){try{dt(Me.throw(Te))}catch(Ke){it(Ke)}}function dt(Te){Te.done?Je(Te.value):Ze(Te.value).then(Ue,lt)}dt((Me=Me.apply(P,fe||[])).next())})};let{id:c=""}=e,{access_token:_=""}=e,{booking_label:y}=e,{custom_fields:v}=e,{event_title:k}=e,{event_description:E}=e,{event_location:S}=e,{event_conferencing:N}=e,{slots_to_book:w}=e,{notification_mode:M}=e,{notification_message:G}=e,{notification_subject:I}=e,{recurrence:U}=e,{recurrence_cadence:B}=e,{recurrence_expiry:z}=e,{event_options:V}=e;const L=nr(Ca()),re={booking_label:"Schedule time slots",custom_fields:oo,event_title:"Meeting",event_description:"",event_conferencing:"",event_location:"",slots_to_book:[],notification_mode:ta.SHOW_MESSAGE,notification_message:"Thank you for scheduling!",notification_subject:"Invitation",recurrence:"none",recurrence_cadence:["none"],event_options:[]};let K=Un({},{},re),H={};Xi(()=>h(void 0,void 0,void 0,function*(){yield Oi();const P=JSON.stringify({component_id:c,access_token:_});n(25,H=(yield o[P])||{}),n(1,K=Un(e,H,re))}));let Z=e,de=!1;function ke(P){return h(this,void 0,void 0,function*(){const fe=P.map(Me=>h(this,void 0,void 0,function*(){var Ze,Je;const it={title:Me.event_title,description:Me.event_description,location:Me.event_location,conferencing:Me.event_conferencing?{provider:"Zoom Meeting",details:{url:Me.event_conferencing}}:void 0,participants:Array.from(new Set([...Me.available_calendars,...(Ze=Me.participantEmails)!==null&&Ze!==void 0?Ze:[]])).map(Ue=>({email:Ue})),calendar_id:Me.calendar_id,when:{start_time:Me.start_time.getTime()/1e3,end_time:Me.end_time.getTime()/1e3}};if(oe["Email Address"]&&((Je=it.participants)===null||Je===void 0||Je.push({email:oe["Email Address"],name:oe["Your Name"]})),Object.keys(oe).length&&(it.metadata=oe),Me.recurrence_cadence&&Me.recurrence_cadence!=="none"){let Ue="";Me.recurrence_cadence==="daily"?Ue="RRULE:FREQ=DAILY":Me.recurrence_cadence==="weekdays"?Ue="RRULE:FREQ=DAILY;BYDAY=MO,TU,WE,TH,FR":Me.recurrence_cadence==="weekly"?Ue="RRULE:FREQ=WEEKLY":Me.recurrence_cadence==="biweekly"?Ue="RRULE:FREQ=WEEKLY;INTERVAL=2":Me.recurrence_cadence==="monthly"&&(Ue="RRULE:FREQ=MONTHLY"),typeof Me.recurrence_expiry=="string"&&(Me.recurrence_expiry=new Date(Me.recurrence_expiry));const lt=K.recurrence_expiry||Me.recurrence_expiry,dt=Number.parseInt(lt);isNaN(dt)?lt instanceof Date&&(Ue+=`;UNTIL=${lt.toISOString().substring(0,19).replace(/[^0-9]/g,"")}Z`):Ue+=`;COUNT=${dt}`,it.recurrence={rrule:[Ue],timezone:Intl.DateTimeFormat().resolvedOptions().timeZone}}return ec(it,{component_id:c,access_token:_})})),pe=yield Promise.all(fe);L("bookedEvents",{}),K.notification_mode===ta.SEND_MESSAGE?pe.map((Me,Ze)=>{var Je;const it=(Je=Me.participants)===null||Je===void 0?void 0:Je.map(Ue=>{const{email:lt,name:dt}=Ue,Te={email:lt};return dt&&(Te.name=dt),Te});it&&fc(c,{to:it,body:`${K.notification_message}`,subject:`${K.notification_subject}`})}):K.notification_mode===ta.SHOW_MESSAGE&&n(4,de=!0)})}let oe={};function j(P){L("hoverOptionChange",{event:P})}function q(){L("hoverOptionChange",{event:null})}function ce(P){L("eventOptionSelected",{event:P})}const Ge=[[],[]];function Pe(P,fe){P[fe].recurrence_cadence=this.__value,n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function _e(P,fe){P[fe].recurrence_cadence=this.__value,n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function ze(P,fe){P[fe].expirySelection=this.__value,n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function Be(P,fe){P[fe].expirySelection=this.__value,n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function F(P,fe){P[fe].recurrence_expiry=Cn(this.value),n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function le(P,fe){P[fe].expirySelection=this.__value,n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function se(P,fe){P[fe].recurrence_expiry=this.value,n(3,a),n(1,K),n(26,Z),n(46,e),n(25,H)}function ye(P){oe[P.title]=this.value,n(2,oe),n(1,K),n(26,Z),n(46,e),n(25,H)}function ue(P){oe[P.title]=this.value,n(2,oe),n(1,K),n(26,Z),n(46,e),n(25,H)}const ie=()=>ke(a),be=P=>j(P),Ce=()=>q(),Q=P=>ce(P);return t.$$set=P=>{n(46,e=je(je({},e),Mt(P))),"id"in P&&n(0,c=P.id),"access_token"in P&&n(10,_=P.access_token),"booking_label"in P&&n(11,y=P.booking_label),"custom_fields"in P&&n(12,v=P.custom_fields),"event_title"in P&&n(13,k=P.event_title),"event_description"in P&&n(14,E=P.event_description),"event_location"in P&&n(15,S=P.event_location),"event_conferencing"in P&&n(16,N=P.event_conferencing),"slots_to_book"in P&&n(17,w=P.slots_to_book),"notification_mode"in P&&n(18,M=P.notification_mode),"notification_message"in P&&n(19,G=P.notification_message),"notification_subject"in P&&n(20,I=P.notification_subject),"recurrence"in P&&n(21,U=P.recurrence),"recurrence_cadence"in P&&n(22,B=P.recurrence_cadence),"recurrence_expiry"in P&&n(23,z=P.recurrence_expiry),"event_options"in P&&n(24,V=P.event_options)},t.$$.update=()=>{t.$$.dirty[0]&134217728&&Object.keys(s).length&&L("onError",s),JSON.stringify(Z)!==JSON.stringify(e)&&(n(1,K=Un(e,H,re)),n(26,Z=e)),t.$$.dirty[0]&2&&n(3,a=K.slots_to_book.map(P=>(P.recurrence_cadence||(K.recurrence==="required"?P.recurrence_cadence=K.recurrence_cadence[0]:P.recurrence_cadence="none"),P.expirySelection||(P.expirySelection="none"),P))),t.$$.dirty[0]&8&&a.length&&n(4,de=!1),t.$$.dirty[0]&6&&(K.custom_fields.find(P=>oe.hasOwnProperty(P.title))||n(2,oe=K.custom_fields.reduce((P,fe)=>Object.assign(Object.assign({},P),{[fe.title]:""}),{}))),t.$$.dirty[0]&6&&n(5,r=K.custom_fields.filter(P=>P.required).every(P=>oe[P.title]!==void 0&&oe[P.title]!==""))},e=Mt(e),[c,K,oe,a,de,r,ke,j,q,ce,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,H,Z,s,Pe,Ge,_e,ze,Be,F,le,se,ye,ue,ie,be,Ce,Q]}class Sd extends Vn{constructor(e){super();this.shadowRoot.innerHTML='<style>*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}main{--black:#161717;--grey-dark:#636671;--grey:#bdc0cb;--grey-lighter:#dfe1e8;--grey-dark-warm:#9fa4b5;--grey-lightest:#f7f7f8;--grey-background:#f0f1f5;--white:#ffffff;--blue:#314fa9;--blue-lighter:#f0f3ff;--red:#ee3248;--red-lighter:#ffeef0;--fs-12:0.75rem;--fs-14:0.875rem;--fs-16:1rem;--black-90:#2c2e2e;--grey-light:#f7f7f8;--grey-warm:#cbcbcb}main{height:100%;overflow:hidden;display:grid;font-family:Arial, Helvetica, sans-serif;position:relative;z-index:1}main .booker{height:calc(100% - 2rem);overflow:auto;background:rgba(0, 0, 0, 0.03);padding:1rem}main .booker h2{font-size:1.3rem;font-weight:bold;margin-bottom:0.5rem}main .booker>p{opacity:0.8;font-size:0.9rem;line-height:1.3rem;margin-bottom:1rem}main .booker .timeslots{display:grid;grid-auto-flow:row;gap:1rem;margin-bottom:1rem}main .booker .timeslots li{background:rgba(255, 255, 255, 0.8);list-style-type:none;margin:0;padding:1rem;border:1px solid #ebebeb;display:grid;gap:0.5rem;grid-auto-flow:row}main .booker .timeslots li h3{font-size:0.8rem;opacity:0.8}main .booker .timeslots li .time{color:var(--blue)}main .booker .timeslots li .date{font-size:0.8rem}main .booker .timeslots li .sub-events{display:grid;gap:1rem;font-size:0.8rem}main .booker .timeslots li .sub-event{background-color:var(--grey-light);padding:0.5rem}main .booker .timeslots li footer{display:grid;grid-auto-flow:row;gap:0.5rem;padding:1rem;margin:1rem -1rem -1rem;font-size:0.8rem;background:#eeeef5}main .booker .timeslots li footer strong{display:block}main .booker .timeslots li footer .cadences,main .booker .timeslots li footer .expiry{display:flex;flex-wrap:wrap;gap:0.5rem}main .booker .timeslots li footer .cadences label,main .booker .timeslots li footer .expiry label{padding:0.25rem 0.5rem;transition:0.1s;background-color:#fff;align-items:center;display:flex;gap:0.5rem;cursor:pointer}main .booker .timeslots li footer .cadences label.checked,main .booker .timeslots li footer .expiry label.checked{background-color:var(--blue);color:white}main .booker .timeslots li footer .cadences label input,main .booker .timeslots li footer .expiry label input{padding-left:5px}main .booker .timeslots li footer .cadences label input.after,main .booker .timeslots li footer .expiry label input.after{width:15%}main .booker .timeslots li footer .cadences label span,main .booker .timeslots li footer .expiry label span{text-transform:capitalize}main .booker #custom-fields{display:grid;grid-auto-flow:row;gap:1rem;margin-bottom:1rem}main .booker #custom-fields label{display:grid;grid-auto-flow:row;gap:0.5rem}main .booker #custom-fields label strong{font-weight:bold;font-size:0.8rem}main .booker #custom-fields label[data-required=true] strong:after{content:" (required)";font-weight:normal;opacity:0.75;font-style:italic}main .booker #custom-fields label input[type=text],main .booker #custom-fields label input[type=email]{padding:0.5rem;font-size:0.9rem}main .booker button.book{background:var(--blue);color:white;padding:0.5rem 2rem;cursor:pointer}main .booker button.book:disabled{background:var(--grey-dark);opacity:0.5;cursor:not-allowed}</style>',Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},Ad,wd,Zt,{id:0,access_token:10,booking_label:11,custom_fields:12,event_title:13,event_description:14,event_location:15,event_conferencing:16,slots_to_book:17,notification_mode:18,notification_message:19,notification_subject:20,recurrence:21,recurrence_cadence:22,recurrence_expiry:23,event_options:24},null,[-1,-1]),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["id","access_token","booking_label","custom_fields","event_title","event_description","event_location","event_conferencing","slots_to_book","notification_mode","notification_message","notification_subject","recurrence","recurrence_cadence","recurrence_expiry","event_options"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),X()}get access_token(){return this.$$.ctx[10]}set access_token(e){this.$$set({access_token:e}),X()}get booking_label(){return this.$$.ctx[11]}set booking_label(e){this.$$set({booking_label:e}),X()}get custom_fields(){return this.$$.ctx[12]}set custom_fields(e){this.$$set({custom_fields:e}),X()}get event_title(){return this.$$.ctx[13]}set event_title(e){this.$$set({event_title:e}),X()}get event_description(){return this.$$.ctx[14]}set event_description(e){this.$$set({event_description:e}),X()}get event_location(){return this.$$.ctx[15]}set event_location(e){this.$$set({event_location:e}),X()}get event_conferencing(){return this.$$.ctx[16]}set event_conferencing(e){this.$$set({event_conferencing:e}),X()}get slots_to_book(){return this.$$.ctx[17]}set slots_to_book(e){this.$$set({slots_to_book:e}),X()}get notification_mode(){return this.$$.ctx[18]}set notification_mode(e){this.$$set({notification_mode:e}),X()}get notification_message(){return this.$$.ctx[19]}set notification_message(e){this.$$set({notification_message:e}),X()}get notification_subject(){return this.$$.ctx[20]}set notification_subject(e){this.$$set({notification_subject:e}),X()}get recurrence(){return this.$$.ctx[21]}set recurrence(e){this.$$set({recurrence:e}),X()}get recurrence_cadence(){return this.$$.ctx[22]}set recurrence_cadence(e){this.$$set({recurrence_cadence:e}),X()}get recurrence_expiry(){return this.$$.ctx[23]}set recurrence_expiry(e){this.$$set({recurrence_expiry:e}),X()}get event_options(){return this.$$.ctx[24]}set event_options(e){this.$$set({event_options:e}),X()}}customElements.define("nylas-booking",Sd);function Cd(t){let e,n,a=[{width:"18"},{height:"13"},{viewBox:"0 0 18 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],r={};for(let o=0;o<a.length;o+=1)r=je(r,a[o]);return{c(){e=Lt("svg"),n=Lt("path"),this.h()},l(o){e=Vt(o,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=Pt(e);n=Vt(s,"path",{d:!0,fill:!0}),Pt(n).forEach(W),s.forEach(W),this.h()},h(){p(n,"d","M2.03033 7.05071C1.73744 6.75782 1.26256 6.75782 0.96967 7.05071C0.676777 7.3436 0.676777 7.81848 0.96967 8.11137L5.46967 12.6114C5.76256 12.9043 6.23744 12.9043 6.53033 12.6114L17.5303 1.61137C17.8232 1.31848 17.8232 0.843603 17.5303 0.550709C17.2374 0.257816 16.7626 0.257816 16.4697 0.550709L6 11.0204L2.03033 7.05071Z"),p(n,"fill","#161717"),Jt(e,r)},m(o,s){Rn(o,e,s),Bn(e,n)},p(o,[s]){Jt(e,r=jn(a,[{width:"18"},{height:"13"},{viewBox:"0 0 18 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&o[0]]))},i:he,o:he,d(o){o&&W(e)}}}function Gd(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class zd extends fa{constructor(e){super();Kt(this,e,Gd,Cd,Zt,{})}}function Ed(t){let e,n,a,r,o,s=[{width:"4"},{height:"14"},{viewBox:"0 0 4 14"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],h={};for(let c=0;c<s.length;c+=1)h=je(h,s[c]);return{c(){e=Lt("svg"),n=Lt("path"),a=O(),r=Lt("svg"),o=Lt("path"),this.h()},l(c){e=Vt(c,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var _=Pt(e);n=Vt(_,"path",{d:!0,fill:!0}),Pt(n).forEach(W),_.forEach(W),a=zu(c),r=Vt(c,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0,style:!0});var y=Pt(r);o=Vt(y,"path",{d:!0,fill:!0}),Pt(o).forEach(W),y.forEach(W),this.h()},h(){p(n,"d","M2 3.5C1.0335 3.5 0.25 2.7165 0.25 1.75C0.25 0.783502 1.0335 -1.18742e-07 2 -7.64949e-08C2.9665 -3.42479e-08 3.75 0.783502 3.75 1.75C3.75 2.7165 2.9665 3.5 2 3.5ZM2 14C1.0335 14 0.249999 13.2165 0.249999 12.25C0.25 11.2835 1.0335 10.5 2 10.5C2.9665 10.5 3.75 11.2835 3.75 12.25C3.75 13.2165 2.9665 14 2 14ZM0.25 7C0.25 7.9665 1.0335 8.75 2 8.75C2.9665 8.75 3.75 7.9665 3.75 7C3.75 6.0335 2.9665 5.25 2 5.25C1.0335 5.25 0.25 6.0335 0.25 7Z"),p(n,"fill","#636671"),Jt(e,h),p(o,"d","M2 3.5C1.0335 3.5 0.25 2.7165 0.25 1.75C0.25 0.783502 1.0335 -1.18742e-07 2 -7.64949e-08C2.9665 -3.42479e-08 3.75 0.783502 3.75 1.75C3.75 2.7165 2.9665 3.5 2 3.5ZM2 14C1.0335 14 0.249999 13.2165 0.249999 12.25C0.25 11.2835 1.0335 10.5 2 10.5C2.9665 10.5 3.75 11.2835 3.75 12.25C3.75 13.2165 2.9665 14 2 14ZM0.25 7C0.25 7.9665 1.0335 8.75 2 8.75C2.9665 8.75 3.75 7.9665 3.75 7C3.75 6.0335 2.9665 5.25 2 5.25C1.0335 5.25 0.25 6.0335 0.25 7Z"),p(o,"fill","#636671"),p(r,"width","4"),p(r,"height","14"),p(r,"viewBox","0 0 4 14"),p(r,"fill","none"),p(r,"xmlns","http://www.w3.org/2000/svg"),Ie(r,"margin-left","2px")},m(c,_){Rn(c,e,_),Bn(e,n),Rn(c,a,_),Rn(c,r,_),Bn(r,o)},p(c,[_]){Jt(e,h=jn(s,[{width:"4"},{height:"14"},{viewBox:"0 0 4 14"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},_&1&&c[0]]))},i:he,o:he,d(c){c&&W(e),c&&W(a),c&&W(r)}}}function Od(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class cs extends fa{constructor(e){super();Kt(this,e,Od,Ed,Zt,{})}}function Dd(t){let e,n,a=[{width:"13"},{height:"13"},{viewBox:"0 0 13 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],r={};for(let o=0;o<a.length;o+=1)r=je(r,a[o]);return{c(){e=Lt("svg"),n=Lt("path"),this.h()},l(o){e=Vt(o,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=Pt(e);n=Vt(s,"path",{d:!0,fill:!0}),Pt(n).forEach(W),s.forEach(W),this.h()},h(){p(n,"d","M11.6569 1.4242C12.4379 2.20524 12.4379 3.47157 11.6569 4.25262L4.27039 11.6391C3.95 11.9595 3.54855 12.1868 3.10897 12.2967L0.817966 12.8694C0.451776 12.961 0.12008 12.6293 0.211627 12.2631L0.784377 9.97208C0.894272 9.5325 1.12157 9.13105 1.44197 8.81066L8.82843 1.4242C9.60948 0.643147 10.8758 0.643147 11.6569 1.4242ZM8.12124 3.54541L2.14907 9.51776C1.95683 9.71 1.82046 9.95087 1.75452 10.2146L1.38388 11.6972L2.86643 11.3265C3.13018 11.2606 3.37105 11.1242 3.56329 10.932L9.53524 4.95941L8.12124 3.54541ZM9.53553 2.1313L8.82824 2.83841L10.2422 4.25241L10.9497 3.54552C11.3403 3.15499 11.3403 2.52183 10.9497 2.1313C10.5592 1.74078 9.92606 1.74078 9.53553 2.1313Z"),p(n,"fill","#002DB4"),Jt(e,r)},m(o,s){Rn(o,e,s),Bn(e,n)},p(o,[s]){Jt(e,r=jn(a,[{width:"13"},{height:"13"},{viewBox:"0 0 13 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&o[0]]))},i:he,o:he,d(o){o&&W(e)}}}function Nd(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class Id extends fa{constructor(e){super();Kt(this,e,Nd,Dd,Zt,{})}}function Ld(t){let e,n,a=[{width:"11"},{height:"12"},{viewBox:"0 0 11 12"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],r={};for(let o=0;o<a.length;o+=1)r=je(r,a[o]);return{c(){e=Lt("svg"),n=Lt("path"),this.h()},l(o){e=Vt(o,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=Pt(e);n=Vt(s,"path",{d:!0,fill:!0}),Pt(n).forEach(W),s.forEach(W),this.h()},h(){p(n,"d","M6 1.08105C6 0.804912 5.77614 0.581055 5.5 0.581055C5.22386 0.581055 5 0.804912 5 1.08105V5.58105H0.5C0.223858 5.58105 0 5.80491 0 6.08105C0 6.3572 0.223858 6.58105 0.5 6.58105H5V11.0811C5 11.3572 5.22386 11.5811 5.5 11.5811C5.77614 11.5811 6 11.3572 6 11.0811V6.58105H10.5C10.7761 6.58105 11 6.3572 11 6.08105C11 5.80491 10.7761 5.58105 10.5 5.58105H6V1.08105Z"),p(n,"fill","#002DB4"),Jt(e,r)},m(o,s){Rn(o,e,s),Bn(e,n)},p(o,[s]){Jt(e,r=jn(a,[{width:"11"},{height:"12"},{viewBox:"0 0 11 12"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&o[0]]))},i:he,o:he,d(o){o&&W(e)}}}function Pd(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class Fd extends fa{constructor(e){super();Kt(this,e,Pd,Ld,Zt,{})}}function Bd(t){let e,n,a=[{width:"12"},{height:"13"},{viewBox:"0 0 12 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},t[0]],r={};for(let o=0;o<a.length;o+=1)r=je(r,a[o]);return{c(){e=Lt("svg"),n=Lt("path"),this.h()},l(o){e=Vt(o,"svg",{width:!0,height:!0,viewBox:!0,fill:!0,xmlns:!0});var s=Pt(e);n=Vt(s,"path",{d:!0,fill:!0}),Pt(n).forEach(W),s.forEach(W),this.h()},h(){p(n,"d","M4.5 5.08105L4.5 9.08105C4.5 9.3572 4.72386 9.58105 5 9.58105C5.27614 9.58105 5.5 9.3572 5.5 9.08105L5.5 5.08105C5.5 4.80491 5.27614 4.58105 5 4.58105C4.72386 4.58105 4.5 4.80491 4.5 5.08105ZM7 4.58105C7.27614 4.58105 7.5 4.80491 7.5 5.08105V9.08105C7.5 9.3572 7.27614 9.58105 7 9.58105C6.72386 9.58105 6.5 9.3572 6.5 9.08105V5.08105C6.5 4.80491 6.72386 4.58105 7 4.58105ZM8 2.08105H11C11.2761 2.08105 11.5 2.30491 11.5 2.58105C11.5 2.8572 11.2761 3.08105 11 3.08105H10.4475L9.69462 9.85713C9.55394 11.1232 8.48378 12.0811 7.20991 12.0811H4.79008C3.51621 12.0811 2.44605 11.1232 2.30537 9.85713L1.55247 3.08105H1C0.723858 3.08105 0.5 2.8572 0.5 2.58105C0.5 2.30491 0.723858 2.08105 1 2.08105H4C4 0.976485 4.89543 0.0810547 6 0.0810547C7.10457 0.0810547 8 0.976485 8 2.08105ZM6 1.08105C5.44772 1.08105 5 1.52877 5 2.08105H7C7 1.52877 6.55229 1.08105 6 1.08105ZM2.55863 3.08105L3.29925 9.7467C3.38366 10.5064 4.02575 11.0811 4.79008 11.0811H7.20991C7.97423 11.0811 8.61633 10.5064 8.70073 9.7467L9.44136 3.08105H2.55863Z"),p(n,"fill","#EE3248"),Jt(e,r)},m(o,s){Rn(o,e,s),Bn(e,n)},p(o,[s]){Jt(e,r=jn(a,[{width:"12"},{height:"13"},{viewBox:"0 0 12 13"},{fill:"none"},{xmlns:"http://www.w3.org/2000/svg"},s&1&&o[0]]))},i:he,o:he,d(o){o&&W(e)}}}function Rd(t,e,n){return t.$$set=a=>{n(0,e=je(je({},e),Mt(a)))},e=Mt(e),[e]}class xd extends fa{constructor(e){super();Kt(this,e,Rd,Bd,Zt,{})}}function jd(t){let e,n,a,r,o,s,h;return r=new cs({}),{c(){e=b("div"),n=b("div"),a=b("button"),ea(r.$$.fragment),o=O(),s=b("slot"),this.c=he,p(a,"class","drag"),p(n,"class","drag-preview-cell"),p(e,"class","drag-preview"),Ie(e,"top",t[1]+"px"),Ie(e,"left",t[0]+"px"),Ie(e,"height",t[2]+"px"),Ie(e,"width",t[3]+"px"),Ie(e,"visibility",t[4]?"visible":"hidden")},m(c,_){Y(c,e,_),m(e,n),m(n,a),Hn(r,a,null),m(e,o),m(e,s),h=!0},p(c,[_]){(!h||_&2)&&Ie(e,"top",c[1]+"px"),(!h||_&1)&&Ie(e,"left",c[0]+"px"),(!h||_&4)&&Ie(e,"height",c[2]+"px"),(!h||_&8)&&Ie(e,"width",c[3]+"px"),(!h||_&16)&&Ie(e,"visibility",c[4]?"visible":"hidden")},i(c){h||(qe(r.$$.fragment,c),h=!0)},o(c){ut(r.$$.fragment,c),h=!1},d(c){c&&W(e),Gn(r)}}}function Hd(t,e,n){let{left:a=0}=e,{top:r=0}=e,{height:o=0}=e,{width:s=0}=e,{visible:h}=e;return t.$$set=c=>{"left"in c&&n(0,a=c.left),"top"in c&&n(1,r=c.top),"height"in c&&n(2,o=c.height),"width"in c&&n(3,s=c.width),"visible"in c&&n(4,h=c.visible)},[a,r,o,s,h]}class Vd extends Vn{constructor(e){super();this.shadowRoot.innerHTML="<style>*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}.drag-preview{display:flex;align-items:center;position:absolute;justify-content:space-between;z-index:5;border-radius:4px;background-color:white;box-shadow:0 2px 8px #00000040;pointer-events:none}.drag-preview .drag-preview-cell{display:flex;justify-content:flex-start;align-items:center;padding:0.25rem;box-sizing:border-box}button.drag{display:inline-flex;align-items:left;padding:0.5rem;background-color:transparent}button.drag:hover{cursor:pointer}</style>",Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},Hd,jd,Qr,{left:0,top:1,height:2,width:3,visible:4},null),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["left","top","height","width","visible"]}get left(){return this.$$.ctx[0]}set left(e){this.$$set({left:e}),X()}get top(){return this.$$.ctx[1]}set top(e){this.$$set({top:e}),X()}get height(){return this.$$.ctx[2]}set height(e){this.$$set({height:e}),X()}get width(){return this.$$.ctx[3]}set width(e){this.$$set({width:e}),X()}get visible(){return this.$$.ctx[4]}set visible(e){this.$$set({visible:e}),X()}}customElements.define("nylas-schedule-editor-drag-item-placeholder",Vd);function Ud(t){let e,n,a,r,o,s,h,c,_;return{c(){e=b("section"),n=b("details"),a=b("summary"),a.innerHTML=`<slot name="title"></slot> 
      <img src="./assets/expand.svg" class="expand-icon" alt="expand"/> 
      <slot name="intro"></slot>`,r=O(),o=b("slot"),s=O(),h=b("slot"),c=O(),_=b("p"),_.innerHTML='<slot name="intro"></slot>',this.c=he,p(o,"name","contents"),p(h,"name","footer"),n.open=t[1],p(_,"class","intro"),p(e,"class",t[0])},m(y,v){Y(y,e,v),m(e,n),m(n,a),m(n,r),m(n,o),m(n,s),m(n,h),m(e,c),m(e,_)},p(y,[v]){v&2&&(n.open=y[1]),v&1&&p(e,"class",y[0])},i:he,o:he,d(y){y&&W(e)}}}function Wd(t,e,n){let{propname:a="bar"}=e,{section_title:r}=e,{expanded:o=!1}=e;return t.$$set=s=>{"propname"in s&&n(2,a=s.propname),"section_title"in s&&n(0,r=s.section_title),"expanded"in s&&n(1,o=s.expanded)},[r,o,a]}class Kd extends Vn{constructor(e){super();this.shadowRoot.innerHTML="<style>*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}.sr-only{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}details{display:grid;background-color:white;box-shadow:0px 2px 8px rgba(0, 0, 0, 0.15);padding:1rem;max-width:640px;width:calc(100% - 2rem)}details summary{display:grid;grid-template-columns:auto 16px;gap:0.5rem;cursor:pointer}details summary .expand-icon{width:16px;height:16px;transform:scaleY(-1)}details[open] summary{margin-bottom:1rem;cursor:default}details[open] summary .expand-icon{transform:none}</style>",Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},Wd,Ud,Zt,{propname:2,section_title:0,expanded:1},null),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["propname","section_title","expanded"]}get propname(){return this.$$.ctx[2]}set propname(e){this.$$set({propname:e}),X()}get section_title(){return this.$$.ctx[0]}set section_title(e){this.$$set({section_title:e}),X()}get expanded(){return this.$$.ctx[1]}set expanded(e){this.$$set({expanded:e}),X()}}customElements.define("nylas-schedule-editor-section",Kd);function fs(t){return Object.values(t).reduce((e,n)=>{const a=n.getBoundingClientRect();return e.concat([a])},[])}function ds(t,e){const n=t.getBoundingClientRect(),a=[...t.querySelectorAll(e)].map(r=>r.getBoundingClientRect());return{parentRect:n,childRects:a}}function ms(t,e,n){const a=t.slice();return a[149]=e[n],a[151]=n,a}function hs(t,e,n){const a=t.slice();return a[152]=e[n],a[153]=e,a[151]=n,a}function _s(t,e,n){const a=t.slice();return a[154]=e[n],a}function gs(t,e,n){const a=t.slice();return a[1]=e[n],a}function bs(t,e,n){const a=t.slice();return a[159]=e[n],a[160]=e,a[161]=n,a}function qd(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S=t[9].sections[et.BASIC_DETAILS].editable&&ys(t),N=t[9].sections[et.TIME_DATE_DETAILS].editable&&ks(t),w=t[9].sections[et.STYLE_DETAILS].editable&&As(t),M=t[9].sections[et.BOOKING_DETAILS].editable&&Ss(t),G=t[9].sections[et.CUSTOM_FIELDS].editable&&zs(t),I=t[9].sections[et.NOTIFICATION_DETAILS].editable&&Ls(t),U=t[8]&&Ps(t),B=t[7]&&t[20].length&&Fs(t);return{c(){e=b("main"),n=b("div"),S&&S.c(),a=O(),N&&N.c(),r=O(),w&&w.c(),o=O(),M&&M.c(),s=O(),G&&G.c(),h=O(),I&&I.c(),c=O(),U&&U.c(),_=O(),B&&B.c(),p(n,"class","settings"),Ie(e,"grid-template-columns",t[11]+" 5px auto"),xn(()=>t[129].call(e))},m(z,V){Y(z,e,V),m(e,n),S&&S.m(n,null),m(n,a),N&&N.m(n,null),m(n,r),w&&w.m(n,null),m(n,o),M&&M.m(n,null),m(n,s),G&&G.m(n,null),m(n,h),I&&I.m(n,null),m(e,c),U&&U.m(e,null),m(e,_),B&&B.m(e,null),y=Qi(e,t[129].bind(e)),t[130](e),v=!0,k||(E=[te(e,"mousemove",t[25]),te(e,"mouseup",t[128])],k=!0)},p(z,V){z[9].sections[et.BASIC_DETAILS].editable?S?S.p(z,V):(S=ys(z),S.c(),S.m(n,a)):S&&(S.d(1),S=null),z[9].sections[et.TIME_DATE_DETAILS].editable?N?N.p(z,V):(N=ks(z),N.c(),N.m(n,r)):N&&(N.d(1),N=null),z[9].sections[et.STYLE_DETAILS].editable?w?w.p(z,V):(w=As(z),w.c(),w.m(n,o)):w&&(w.d(1),w=null),z[9].sections[et.BOOKING_DETAILS].editable?M?M.p(z,V):(M=Ss(z),M.c(),M.m(n,s)):M&&(M.d(1),M=null),z[9].sections[et.CUSTOM_FIELDS].editable?G?(G.p(z,V),V[0]&512&&qe(G,1)):(G=zs(z),G.c(),qe(G,1),G.m(n,h)):G&&(pn(),ut(G,1,1,()=>{G=null}),vn()),z[9].sections[et.NOTIFICATION_DETAILS].editable?I?I.p(z,V):(I=Ls(z),I.c(),I.m(n,null)):I&&(I.d(1),I=null),z[8]?U?U.p(z,V):(U=Ps(z),U.c(),U.m(e,_)):U&&(U.d(1),U=null),z[7]&&z[20].length?B?B.p(z,V):(B=Fs(z),B.c(),B.m(e,null)):B&&(B.d(1),B=null),(!v||V[0]&2048)&&Ie(e,"grid-template-columns",z[11]+" 5px auto")},i(z){v||(qe(G),v=!0)},o(z){ut(G),v=!1},d(z){z&&W(e),S&&S.d(),N&&N.d(),w&&w.d(),M&&M.d(),G&&G.d(),I&&I.d(),U&&U.d(),B&&B.d(),y(),t[130](null),k=!1,vt(E)}}}function Yd(t){let e;return{c(){e=b("nylas-domain-error"),Ee(e,"id",t[0])},m(n,a){Y(n,e,a)},p(n,a){a[0]&1&&Ee(e,"id",n[0])},i:he,o:he,d(n){n&&W(e)}}}function ys(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N=t[9].events,w=[];for(let M=0;M<N.length;M+=1)w[M]=Ts(bs(t,N,M));return{c(){e=b("nylas-schedule-editor-section"),n=b("h1"),n.textContent="Event Details",a=O(),r=b("p"),r.textContent=`Edit the details for your meeting. You can add consecutive meetings
            to allow users to book back-to-back events.`,o=O(),s=b("div");for(let M=0;M<w.length;M+=1)w[M].c();h=O(),c=b("footer"),_=b("button"),_.textContent="Add a follow-up event",y=O(),v=b("button"),v.textContent="Save Editor Options",p(n,"slot","title"),p(r,"slot","intro"),p(r,"class","intro"),p(s,"slot","contents"),p(s,"class","contents basic-details"),p(_,"class","add-event"),p(c,"slot","footer"),Ee(e,"section_title",et.BASIC_DETAILS),Ee(e,"expanded",k=t[9].sections[et.BASIC_DETAILS].expanded)},m(M,G){Y(M,e,G),m(e,n),m(e,a),m(e,r),m(e,o),m(e,s);for(let I=0;I<w.length;I+=1)w[I].m(s,null);m(e,h),m(e,c),m(c,_),m(c,y),m(c,v),E||(S=[te(_,"click",t[35]),te(v,"click",t[22])],E=!0)},p(M,G){if(G[0]&67109376|G[1]&32){N=M[9].events;let I;for(I=0;I<N.length;I+=1){const U=bs(M,N,I);w[I]?w[I].p(U,G):(w[I]=Ts(U),w[I].c(),w[I].m(s,null))}for(;I<w.length;I+=1)w[I].d(1);w.length=N.length}G[0]&512&&k!==(k=M[9].sections[et.BASIC_DETAILS].expanded)&&Ee(e,"expanded",k)},d(M){M&&W(e),en(w,M),E=!1,vt(S)}}}function ps(t){let e,n,a;function r(){return t[67](t[159])}return{c(){e=b("button"),e.textContent="Remove this event",p(e,"class","remove-event")},m(o,s){Y(o,e,s),n||(a=te(e,"click",r),n=!0)},p(o,s){t=o},d(o){o&&W(e),n=!1,a()}}}function vs(t){let e,n,a=t[9].events[0].slot_size+"",r,o;return{c(){e=b("p"),n=ge(`Note: different meeting lengths in a conecutive chain are
                      not currently supported; all meetings in this chain will
                      fall back to `),r=ge(a),o=ge(" minutes."),p(e,"class","warning")},m(s,h){Y(s,e,h),m(e,n),m(e,r),m(e,o)},p(s,h){h[0]&512&&a!==(a=s[9].events[0].slot_size+"")&&He(r,a)},d(s){s&&W(e)}}}function Ts(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j,q,ce,Ge,Pe,_e,ze,Be,F,le,se,ye,ue,ie,be,Ce,Q,P,fe,pe=t[9].events.length>1&&ps(t);function Me(){t[68].call(s,t[160],t[161])}function Ze(){t[69].call(v,t[160],t[161])}function Je(){t[70].call(w,t[160],t[161])}function it(){t[71].call(B,t[160],t[161])}t[73][1][t[161]]=[];function Ue(){t[72].call(H,t[160],t[161])}function lt(){t[74].call(j,t[160],t[161])}function dt(){t[75].call(_e,t[160],t[161])}let Te=t[161]!==0&&t[159].slot_size!==t[9].events[0].slot_size&&vs(t);function Ke(...Fe){return t[76](t[159],...Fe)}return{c(){e=b("fieldset"),pe&&pe.c(),n=O(),a=b("label"),r=b("strong"),r.textContent="Event Title!",o=O(),s=b("input"),h=O(),c=b("label"),_=b("strong"),_.textContent="Event Description",y=O(),v=b("input"),k=O(),E=b("label"),S=b("strong"),S.textContent="Event Location",N=O(),w=b("input"),M=O(),G=b("label"),I=b("strong"),I.textContent="Conferencing Link (Zoom, Teams, or Meet URL)",U=O(),B=b("input"),z=O(),V=b("div"),L=b("strong"),L.textContent="Meeting Length",re=O(),K=b("label"),H=b("input"),Z=O(),de=b("span"),de.textContent="15 minutes",ke=O(),oe=b("label"),j=b("input"),q=O(),ce=b("span"),ce.textContent="30 minutes",Ge=O(),Pe=b("label"),_e=b("input"),ze=O(),Be=b("span"),Be.textContent="60 minutes",F=O(),Te&&Te.c(),le=O(),se=b("div"),ye=b("strong"),ye.textContent="Email Ids to include for scheduling",ue=O(),ie=b("label"),be=b("textarea"),Q=O(),p(s,"type","text"),p(v,"type","text"),p(w,"type","text"),p(B,"type","url"),p(L,"id","slot_size"),p(H,"type","radio"),H.__value=15,H.value=H.__value,t[73][1][t[161]].push(H),p(j,"type","radio"),j.__value=30,j.value=j.__value,t[73][1][t[161]].push(j),p(_e,"type","radio"),_e.__value=60,_e.value=_e.__value,t[73][1][t[161]].push(_e),p(V,"role","radiogroup"),p(V,"aria-labelledby","slot_size"),p(ye,"id","participants"),p(be,"name","participants"),be.value=Ce=t[159].participantEmails},m(Fe,We){Y(Fe,e,We),pe&&pe.m(e,null),m(e,n),m(e,a),m(a,r),m(a,o),m(a,s),Re(s,t[159].event_title),m(e,h),m(e,c),m(c,_),m(c,y),m(c,v),Re(v,t[159].event_description),m(e,k),m(e,E),m(E,S),m(E,N),m(E,w),Re(w,t[159].event_location),m(e,M),m(e,G),m(G,I),m(G,U),m(G,B),Re(B,t[159].event_conferencing),m(e,z),m(e,V),m(V,L),m(V,re),m(V,K),m(K,H),H.checked=H.__value===t[159].slot_size,m(K,Z),m(K,de),m(V,ke),m(V,oe),m(oe,j),j.checked=j.__value===t[159].slot_size,m(oe,q),m(oe,ce),m(V,Ge),m(V,Pe),m(Pe,_e),_e.checked=_e.__value===t[159].slot_size,m(Pe,ze),m(Pe,Be),m(V,F),Te&&Te.m(V,null),m(e,le),m(e,se),m(se,ye),m(se,ue),m(se,ie),m(ie,be),m(e,Q),P||(fe=[te(s,"input",Me),te(v,"input",Ze),te(w,"input",Je),te(B,"input",it),te(H,"change",Ue),te(j,"change",lt),te(_e,"change",dt),te(be,"input",Ke)],P=!0)},p(Fe,We){t=Fe,t[9].events.length>1?pe?pe.p(t,We):(pe=ps(t),pe.c(),pe.m(e,n)):pe&&(pe.d(1),pe=null),We[0]&512&&s.value!==t[159].event_title&&Re(s,t[159].event_title),We[0]&512&&v.value!==t[159].event_description&&Re(v,t[159].event_description),We[0]&512&&w.value!==t[159].event_location&&Re(w,t[159].event_location),We[0]&512&&Re(B,t[159].event_conferencing),We[0]&512&&(H.checked=H.__value===t[159].slot_size),We[0]&512&&(j.checked=j.__value===t[159].slot_size),We[0]&512&&(_e.checked=_e.__value===t[159].slot_size),t[161]!==0&&t[159].slot_size!==t[9].events[0].slot_size?Te?Te.p(t,We):(Te=vs(t),Te.c(),Te.m(V,null)):Te&&(Te.d(1),Te=null),We[0]&512&&Ce!==(Ce=t[159].participantEmails)&&(be.value=Ce)},d(Fe){Fe&&W(e),pe&&pe.d(),t[73][1][t[161]].splice(t[73][1][t[161]].indexOf(H),1),t[73][1][t[161]].splice(t[73][1][t[161]].indexOf(j),1),t[73][1][t[161]].splice(t[73][1][t[161]].indexOf(_e),1),Te&&Te.d(),P=!1,vt(fe)}}}function ks(t){let e,n,a,r,o,s,h,c,_,y,v=t[9].start_hour+"",k,E,S,N,w,M,G,I,U,B=t[9].end_hour+"",z,V,L,re,K,H,Z,de,ke,oe,j,q,ce,Ge,Pe,_e,ze,Be,F,le,se,ye,ue,ie,be=t[9].dates_to_show+"",Ce,Q,P,fe,pe,Me,Ze,Je,it,Ue,lt,dt,Te,Ke,Fe,We,ct,J,Qe,Ve,Tt,mt,Ot,pt,wt,Ft,gt,Yt,At,Ut,Dt,Nt,Xe,Wt,fn,nn,dn,mn,Dn,hn,Bt,Nn,tt,_n,Rt,In,xt=mo.default,ht=[];for(let Ae=0;Ae<xt.length;Ae+=1)ht[Ae]=Ms(gs(t,xt,Ae));let an=t[9].open_hours||[],bt=[];for(let Ae=0;Ae<an.length;Ae+=1)bt[Ae]=ws(_s(t,an,Ae));return{c(){e=b("nylas-schedule-editor-section"),n=b("h1"),n.textContent="Date/Time Details",a=O(),r=b("div"),o=b("div"),s=b("label"),h=b("strong"),h.textContent="Start Hour",c=O(),_=b("input"),y=O(),k=ge(v),E=ge(":00"),S=O(),N=b("div"),w=b("label"),M=b("strong"),M.textContent="End Hour",G=O(),I=b("input"),U=O(),z=ge(B),V=ge(":00"),L=O(),re=b("label"),K=b("strong"),K.textContent="Start Date",H=O(),Z=b("strong"),de=b("input"),ke=ge(`
                Show a specific date`),oe=O(),j=b("input"),ce=O(),Ge=b("label"),Pe=b("strong"),Pe.textContent="Time Zone",_e=O(),ze=b("select");for(let Ae=0;Ae<ht.length;Ae+=1)ht[Ae].c();Be=O(),F=b("div"),le=b("label"),se=b("strong"),se.textContent="Days to show",ye=O(),ue=b("input"),ie=O(),Ce=ge(be),Q=O(),P=b("div"),fe=b("strong"),fe.textContent="Show as week",pe=O(),Me=b("label"),Ze=b("input"),Je=ge(`
                Show whole week`),it=O(),Ue=b("div"),lt=b("strong"),lt.textContent="Show weekends",dt=O(),Te=b("label"),Ke=b("input"),Fe=ge(`
                Keep weekends on`),We=O(),ct=b("div"),J=b("strong"),J.textContent="Available Hours",Qe=O(),Ve=b("p"),Ve.textContent=`Drag over the hours want to be availble for booking. All other
                hours will always show up as "busy" to your users.`,Tt=O(),mt=b("div"),Ot=b("label"),pt=b("input"),wt=ge(`
                  Customize each weekday`),Ft=O(),gt=b("div"),Yt=b("label"),At=b("input"),Ut=ge(`
                  Allow booking on weekends`),Dt=O(),Nt=b("div"),Xe=b("nylas-availability"),Dn=O(),hn=b("ul");for(let Ae=0;Ae<bt.length;Ae+=1)bt[Ae].c();Bt=O(),Nn=b("footer"),tt=b("button"),tt.textContent="Save Editor Options",p(n,"slot","title"),p(_,"type","range"),p(_,"min",0),p(_,"max",24),p(_,"step",1),p(I,"type","range"),p(I,"min",0),p(I,"max",24),p(I,"step",1),p(de,"type","checkbox"),p(de,"name","custom_start_date"),p(j,"type","date"),j.disabled=q=!t[10],t[9].timezone===void 0&&xn(()=>t[82].call(ze)),p(ue,"type","range"),p(ue,"min",1),p(ue,"max",7),p(ue,"step",1),p(fe,"id","show_as_week"),p(Ze,"type","checkbox"),p(Ze,"name","show_as_week"),p(P,"role","checkbox"),p(P,"aria-labelledby","show_as_week"),p(lt,"id","show_weekends"),p(Ke,"type","checkbox"),p(Ke,"name","show_weekends"),p(Ue,"role","checkbox"),p(Ue,"aria-labelledby","show_weekends"),p(pt,"type","checkbox"),p(pt,"name","_this.show_as_week"),p(mt,"role","checkbox"),p(mt,"aria-labelledby","show_as_week"),p(At,"type","checkbox"),p(At,"name"," _this.show_weekends"),p(gt,"role","checkbox"),p(gt,"aria-labelledby","show_as_week"),Ee(Xe,"allow_booking",!0),Ee(Xe,"show_as_week",Wt=t[9].show_as_week||t[9].show_weekends),Ee(Xe,"show_weekends",fn=t[9].show_weekends),Ee(Xe,"start_hour",nn=t[9].start_hour),Ee(Xe,"end_hour",dn=t[9].end_hour),Ee(Xe,"allow_date_change",!1),Ee(Xe,"partial_bookable_ratio","0"),Ee(Xe,"show_header",!1),Ee(Xe,"date_format",mn=t[9].show_as_week||t[9].show_weekends?"weekday":"none"),Ee(Xe,"busy_color","#000"),Ee(Xe,"closed_color","#999"),Ee(Xe,"selected_color","#095"),Ee(Xe,"slot_size","15"),p(Nt,"class","availability-container"),p(hn,"class","availability"),p(ct,"class","available-hours"),p(r,"slot","contents"),p(r,"class","contents"),p(Nn,"slot","footer"),Ee(e,"section_title",et.TIME_DATE_DETAILS),Ee(e,"expanded",_n=t[9].sections[et.TIME_DATE_DETAILS].expanded)},m(Ae,rt){Y(Ae,e,rt),m(e,n),m(e,a),m(e,r),m(r,o),m(o,s),m(s,h),m(s,c),m(s,_),Re(_,t[9].start_hour),m(o,y),m(o,k),m(o,E),m(r,S),m(r,N),m(N,w),m(w,M),m(w,G),m(w,I),Re(I,t[9].end_hour),m(N,U),m(N,z),m(N,V),m(r,L),m(r,re),m(re,K),m(re,H),m(re,Z),m(Z,de),de.checked=t[10],m(Z,ke),m(re,oe),m(re,j),Re(j,t[5]),m(r,ce),m(r,Ge),m(Ge,Pe),m(Ge,_e),m(Ge,ze);for(let De=0;De<ht.length;De+=1)ht[De].m(ze,null);Sa(ze,t[9].timezone),m(r,Be),m(r,F),m(F,le),m(le,se),m(le,ye),m(le,ue),Re(ue,t[9].dates_to_show),m(F,ie),m(F,Ce),m(r,Q),m(r,P),m(P,fe),m(P,pe),m(P,Me),m(Me,Ze),Ze.checked=t[9].show_as_week,m(Me,Je),m(r,it),m(r,Ue),m(Ue,lt),m(Ue,dt),m(Ue,Te),m(Te,Ke),Ke.checked=t[9].show_weekends,m(Te,Fe),m(r,We),m(r,ct),m(ct,J),m(ct,Qe),m(ct,Ve),m(ct,Tt),m(ct,mt),m(mt,Ot),m(Ot,pt),pt.checked=t[9].show_as_week,m(Ot,wt),m(ct,Ft),m(ct,gt),m(gt,Yt),m(Yt,At),At.checked=t[9].show_weekends,m(Yt,Ut),m(ct,Dt),m(ct,Nt),m(Nt,Xe),m(ct,Dn),m(ct,hn);for(let De=0;De<bt.length;De+=1)bt[De].m(hn,null);m(e,Bt),m(e,Nn),m(Nn,tt),Rt||(In=[te(_,"change",t[77]),te(_,"input",t[77]),te(I,"change",t[78]),te(I,"input",t[78]),te(de,"change",t[79]),te(de,"change",t[80]),te(j,"input",t[81]),te(ze,"change",t[82]),te(ue,"change",t[83]),te(ue,"input",t[83]),te(Ze,"change",t[84]),te(Ke,"change",t[85]),te(pt,"change",t[86]),te(At,"change",t[87]),te(Xe,"timeSlotChosen",t[23]),te(tt,"click",t[22])],Rt=!0)},p(Ae,rt){if(rt[0]&512&&Re(_,Ae[9].start_hour),rt[0]&512&&v!==(v=Ae[9].start_hour+"")&&He(k,v),rt[0]&512&&Re(I,Ae[9].end_hour),rt[0]&512&&B!==(B=Ae[9].end_hour+"")&&He(z,B),rt[0]&1024&&(de.checked=Ae[10]),rt[0]&1024&&q!==(q=!Ae[10])&&(j.disabled=q),rt[0]&32&&Re(j,Ae[5]),rt&0){xt=mo.default;let De;for(De=0;De<xt.length;De+=1){const kt=gs(Ae,xt,De);ht[De]?ht[De].p(kt,rt):(ht[De]=Ms(kt),ht[De].c(),ht[De].m(ze,null))}for(;De<ht.length;De+=1)ht[De].d(1);ht.length=xt.length}if(rt[0]&512&&Sa(ze,Ae[9].timezone),rt[0]&512&&Re(ue,Ae[9].dates_to_show),rt[0]&512&&be!==(be=Ae[9].dates_to_show+"")&&He(Ce,be),rt[0]&512&&(Ze.checked=Ae[9].show_as_week),rt[0]&512&&(Ke.checked=Ae[9].show_weekends),rt[0]&512&&(pt.checked=Ae[9].show_as_week),rt[0]&512&&(At.checked=Ae[9].show_weekends),rt[0]&512&&Wt!==(Wt=Ae[9].show_as_week||Ae[9].show_weekends)&&Ee(Xe,"show_as_week",Wt),rt[0]&512&&fn!==(fn=Ae[9].show_weekends)&&Ee(Xe,"show_weekends",fn),rt[0]&512&&nn!==(nn=Ae[9].start_hour)&&Ee(Xe,"start_hour",nn),rt[0]&512&&dn!==(dn=Ae[9].end_hour)&&Ee(Xe,"end_hour",dn),rt[0]&512&&mn!==(mn=Ae[9].show_as_week||Ae[9].show_weekends?"weekday":"none")&&Ee(Xe,"date_format",mn),rt[0]&16777728){an=Ae[9].open_hours||[];let De;for(De=0;De<an.length;De+=1){const kt=_s(Ae,an,De);bt[De]?bt[De].p(kt,rt):(bt[De]=ws(kt),bt[De].c(),bt[De].m(hn,null))}for(;De<bt.length;De+=1)bt[De].d(1);bt.length=an.length}rt[0]&512&&_n!==(_n=Ae[9].sections[et.TIME_DATE_DETAILS].expanded)&&Ee(e,"expanded",_n)},d(Ae){Ae&&W(e),en(ht,Ae),en(bt,Ae),Rt=!1,vt(In)}}}function Ms(t){let e,n=t[1].name+"",a;return{c(){e=b("option"),a=ge(n),e.__value=t[1].tzCode,e.value=e.__value},m(r,o){Y(r,e,o),m(e,a)},p:he,d(r){r&&W(e)}}}function ws(t){let e,n,a=t[24](t[154])+"",r,o;return{c(){e=b("li"),n=b("span"),r=ge(a),o=O(),p(n,"class","date")},m(s,h){Y(s,e,h),m(e,n),m(n,r),m(e,o)},p(s,h){h[0]&512&&a!==(a=s[24](s[154])+"")&&He(r,a)},d(s){s&&W(e)}}}function As(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j,q,ce;return{c(){e=b("nylas-schedule-editor-section"),n=b("h1"),n.textContent="Style Details",a=O(),r=b("div"),o=b("div"),s=b("strong"),s.textContent="Show ticks",h=O(),c=b("label"),_=b("input"),y=ge(`
                Show tick marks on left side`),v=O(),k=b("div"),E=b("strong"),E.textContent="View as a Schedule, or as a List?",S=O(),N=b("label"),w=b("input"),M=O(),G=b("span"),G.textContent="Schedule",I=O(),U=b("label"),B=b("input"),z=O(),V=b("span"),V.textContent="List",L=O(),re=b("label"),K=b("strong"),K.textContent="Attendees to show",H=O(),Z=b("input"),de=O(),ke=b("footer"),oe=b("button"),oe.textContent="Save Editor Options",p(n,"slot","title"),p(s,"id","show_ticks"),p(_,"type","checkbox"),p(_,"name","show_ticks"),p(o,"role","checkbox"),p(o,"aria-labelledby","show_ticks"),p(E,"id","view_as"),p(w,"type","radio"),p(w,"name","view_as"),w.__value="schedule",w.value=w.__value,t[73][2].push(w),p(B,"type","radio"),p(B,"name","view_as"),B.__value="list",B.value=B.__value,t[73][2].push(B),p(k,"role","radiogroup"),p(k,"aria-labelledby","view_as"),p(Z,"type","number"),p(Z,"min",1),p(Z,"max",20),p(r,"slot","contents"),p(r,"class","contents"),p(ke,"slot","footer"),Ee(e,"section_title",et.STYLE_DETAILS),Ee(e,"expanded",j=t[9].sections[et.STYLE_DETAILS].expanded)},m(Ge,Pe){Y(Ge,e,Pe),m(e,n),m(e,a),m(e,r),m(r,o),m(o,s),m(o,h),m(o,c),m(c,_),_.checked=t[9].show_ticks,m(c,y),m(r,v),m(r,k),m(k,E),m(k,S),m(k,N),m(N,w),w.checked=w.__value===t[9].view_as,m(N,M),m(N,G),m(k,I),m(k,U),m(U,B),B.checked=B.__value===t[9].view_as,m(U,z),m(U,V),m(r,L),m(r,re),m(re,K),m(re,H),m(re,Z),Re(Z,t[9].attendees_to_show),m(e,de),m(e,ke),m(ke,oe),q||(ce=[te(_,"change",t[88]),te(w,"change",t[89]),te(B,"change",t[90]),te(Z,"input",t[91]),te(oe,"click",t[22])],q=!0)},p(Ge,Pe){Pe[0]&512&&(_.checked=Ge[9].show_ticks),Pe[0]&512&&(w.checked=w.__value===Ge[9].view_as),Pe[0]&512&&(B.checked=B.__value===Ge[9].view_as),Pe[0]&512&&Cn(Z.value)!==Ge[9].attendees_to_show&&Re(Z,Ge[9].attendees_to_show),Pe[0]&512&&j!==(j=Ge[9].sections[et.STYLE_DETAILS].expanded)&&Ee(e,"expanded",j)},d(Ge){Ge&&W(e),t[73][2].splice(t[73][2].indexOf(w),1),t[73][2].splice(t[73][2].indexOf(B),1),q=!1,vt(ce)}}}function Ss(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L=Math.floor(t[9].partial_bookable_ratio*100)+"",re,K,H,Z,de,ke,oe,j,q,ce,Ge,Pe,_e,ze,Be,F,le,se,ye,ue,ie,be,Ce,Q,P,fe,pe,Me,Ze,Je,it,Ue,lt,dt,Te,Ke,Fe,We,ct,J=(t[9].recurrence==="required"||t[9].recurrence==="optional")&&Cs(t);return{c(){e=b("nylas-schedule-editor-section"),n=b("h1"),n.textContent="Booking Details",a=O(),r=b("div"),o=b("div"),s=b("strong"),s.textContent="Allow booking",h=O(),c=b("label"),_=b("input"),y=ge(`
                Allow bookings to be made`),v=O(),k=b("div"),E=b("strong"),E.textContent="Scheduling on this calendar requires manual confirmation",S=O(),N=b("label"),w=b("input"),M=ge(`
                Let the meeting host screen bookings before they're made official`),G=O(),I=b("label"),U=b("strong"),U.textContent="Participant Threshold / Partial bookable ratio",B=O(),z=b("input"),V=O(),re=ge(L),K=ge("%"),H=O(),Z=b("div"),de=b("strong"),de.textContent="Allow, Disallow, or Mandate events to repeat?",ke=O(),oe=b("label"),j=b("input"),q=O(),ce=b("span"),ce.textContent="Don't Repeat Events",Ge=O(),Pe=b("label"),_e=b("input"),ze=O(),Be=b("span"),Be.textContent="Users May Repeat Events",F=O(),le=b("label"),se=b("input"),ye=O(),ue=b("span"),ue.textContent="Events Always Repeat",ie=O(),be=b("label"),Ce=b("strong"),Ce.textContent="Capacity",Q=O(),P=b("input"),fe=O(),pe=b("div"),Me=b("strong"),Me.textContent="Top of the Hour Events",Ze=O(),Je=b("label"),it=b("input"),Ue=ge(`
                Only allow events to be booked at the Top of the Hour`),lt=O(),J&&J.c(),dt=O(),Te=b("footer"),Ke=b("button"),Ke.textContent="Save Editor Options",p(n,"slot","title"),p(s,"id","allow_booking"),p(_,"type","checkbox"),p(_,"name","allow_booking"),p(o,"role","checkbox"),p(o,"aria-labelledby","allow_booking"),p(E,"id","screen_bookings"),p(w,"type","checkbox"),p(w,"name","screen_bookings"),p(k,"role","checkbox"),p(k,"aria-labelledby","screen_bookings"),p(z,"type","range"),p(z,"min",0),p(z,"max",1),p(z,"step",.01),p(de,"id","recurrence"),p(j,"type","radio"),p(j,"name","recurrence"),j.__value="none",j.value=j.__value,t[73][3].push(j),p(_e,"type","radio"),p(_e,"name","recurrence"),_e.__value="optional",_e.value=_e.__value,t[73][3].push(_e),p(se,"type","radio"),p(se,"name","recurrence"),se.__value="required",se.value=se.__value,t[73][3].push(se),p(Z,"role","radiogroup"),p(Z,"aria-labelledby","recurrence"),p(P,"type","number"),p(P,"min",1),p(it,"type","checkbox"),p(it,"name","mandate_top_of_hour"),p(pe,"role","checkbox"),p(pe,"aria-labelledby","allow_booking"),p(r,"slot","contents"),p(r,"class","contents"),p(Te,"slot","footer"),Ee(e,"section_title",et.BOOKING_DETAILS),Ee(e,"expanded",Fe=t[9].sections[et.BOOKING_DETAILS].expanded)},m(Qe,Ve){Y(Qe,e,Ve),m(e,n),m(e,a),m(e,r),m(r,o),m(o,s),m(o,h),m(o,c),m(c,_),_.checked=t[9].allow_booking,m(c,y),m(r,v),m(r,k),m(k,E),m(k,S),m(k,N),m(N,w),w.checked=t[9].screen_bookings,m(N,M),m(r,G),m(r,I),m(I,U),m(I,B),m(I,z),Re(z,t[9].partial_bookable_ratio),m(I,V),m(I,re),m(I,K),m(r,H),m(r,Z),m(Z,de),m(Z,ke),m(Z,oe),m(oe,j),j.checked=j.__value===t[9].recurrence,m(oe,q),m(oe,ce),m(Z,Ge),m(Z,Pe),m(Pe,_e),_e.checked=_e.__value===t[9].recurrence,m(Pe,ze),m(Pe,Be),m(Z,F),m(Z,le),m(le,se),se.checked=se.__value===t[9].recurrence,m(le,ye),m(le,ue),m(r,ie),m(r,be),m(be,Ce),m(be,Q),m(be,P),Re(P,t[9].capacity),m(r,fe),m(r,pe),m(pe,Me),m(pe,Ze),m(pe,Je),m(Je,it),it.checked=t[9].mandate_top_of_hour,m(Je,Ue),m(r,lt),J&&J.m(r,null),m(e,dt),m(e,Te),m(Te,Ke),We||(ct=[te(_,"change",t[92]),te(w,"change",t[93]),te(z,"change",t[94]),te(z,"input",t[94]),te(j,"change",t[95]),te(_e,"change",t[96]),te(se,"change",t[97]),te(P,"input",t[98]),te(it,"change",t[99]),te(Ke,"click",t[22])],We=!0)},p(Qe,Ve){Ve[0]&512&&(_.checked=Qe[9].allow_booking),Ve[0]&512&&(w.checked=Qe[9].screen_bookings),Ve[0]&512&&Re(z,Qe[9].partial_bookable_ratio),Ve[0]&512&&L!==(L=Math.floor(Qe[9].partial_bookable_ratio*100)+"")&&He(re,L),Ve[0]&512&&(j.checked=j.__value===Qe[9].recurrence),Ve[0]&512&&(_e.checked=_e.__value===Qe[9].recurrence),Ve[0]&512&&(se.checked=se.__value===Qe[9].recurrence),Ve[0]&512&&Cn(P.value)!==Qe[9].capacity&&Re(P,Qe[9].capacity),Ve[0]&512&&(it.checked=Qe[9].mandate_top_of_hour),Qe[9].recurrence==="required"||Qe[9].recurrence==="optional"?J?J.p(Qe,Ve):(J=Cs(Qe),J.c(),J.m(r,null)):J&&(J.d(1),J=null),Ve[0]&512&&Fe!==(Fe=Qe[9].sections[et.BOOKING_DETAILS].expanded)&&Ee(e,"expanded",Fe)},d(Qe){Qe&&W(e),t[73][3].splice(t[73][3].indexOf(j),1),t[73][3].splice(t[73][3].indexOf(_e),1),t[73][3].splice(t[73][3].indexOf(se),1),J&&J.d(),We=!1,vt(ct)}}}function Cs(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j=t[9].recurrence==="optional"&&Gs();return{c(){e=b("div"),n=b("strong"),a=ge("How often should events repeat"),j&&j.c(),r=ge("?"),o=O(),s=b("label"),h=b("input"),c=O(),_=b("span"),_.textContent="Daily",y=O(),v=b("label"),k=b("input"),E=O(),S=b("span"),S.textContent="Daily, only on weekdays",N=O(),w=b("label"),M=b("input"),G=O(),I=b("span"),I.textContent="Weekly",U=O(),B=b("label"),z=b("input"),V=O(),L=b("span"),L.textContent="Biweekly",re=O(),K=b("label"),H=b("input"),Z=O(),de=b("span"),de.textContent="Monthly",p(n,"id","recurrence_cadence"),p(h,"type","checkbox"),p(h,"name","recurrence_cadence"),h.__value="daily",h.value=h.__value,t[73][0].push(h),p(k,"type","checkbox"),p(k,"name","recurrence_cadence"),k.__value="weekdays",k.value=k.__value,t[73][0].push(k),p(M,"type","checkbox"),p(M,"name","recurrence_cadence"),M.__value="weekly",M.value=M.__value,t[73][0].push(M),p(z,"type","checkbox"),p(z,"name","recurrence_cadence"),z.__value="biweekly",z.value=z.__value,t[73][0].push(z),p(H,"type","checkbox"),p(H,"name","recurrence_cadence"),H.__value="monthly",H.value=H.__value,t[73][0].push(H),p(e,"role","radiogroup"),p(e,"aria-labelledby","recurrence_cadence")},m(q,ce){Y(q,e,ce),m(e,n),m(n,a),j&&j.m(n,null),m(n,r),m(e,o),m(e,s),m(s,h),h.checked=~t[9].recurrence_cadence.indexOf(h.__value),m(s,c),m(s,_),m(e,y),m(e,v),m(v,k),k.checked=~t[9].recurrence_cadence.indexOf(k.__value),m(v,E),m(v,S),m(e,N),m(e,w),m(w,M),M.checked=~t[9].recurrence_cadence.indexOf(M.__value),m(w,G),m(w,I),m(e,U),m(e,B),m(B,z),z.checked=~t[9].recurrence_cadence.indexOf(z.__value),m(B,V),m(B,L),m(e,re),m(e,K),m(K,H),H.checked=~t[9].recurrence_cadence.indexOf(H.__value),m(K,Z),m(K,de),ke||(oe=[te(h,"change",t[100]),te(k,"change",t[101]),te(M,"change",t[102]),te(z,"change",t[103]),te(H,"change",t[104])],ke=!0)},p(q,ce){q[9].recurrence==="optional"?j||(j=Gs(),j.c(),j.m(n,r)):j&&(j.d(1),j=null),ce[0]&512&&(h.checked=~q[9].recurrence_cadence.indexOf(h.__value)),ce[0]&512&&(k.checked=~q[9].recurrence_cadence.indexOf(k.__value)),ce[0]&512&&(M.checked=~q[9].recurrence_cadence.indexOf(M.__value)),ce[0]&512&&(z.checked=~q[9].recurrence_cadence.indexOf(z.__value)),ce[0]&512&&(H.checked=~q[9].recurrence_cadence.indexOf(H.__value))},d(q){q&&W(e),j&&j.d(),t[73][0].splice(t[73][0].indexOf(h),1),t[73][0].splice(t[73][0].indexOf(k),1),t[73][0].splice(t[73][0].indexOf(M),1),t[73][0].splice(t[73][0].indexOf(z),1),t[73][0].splice(t[73][0].indexOf(H),1),ke=!1,vt(oe)}}}function Gs(t){let e;return{c(){e=ge(`,
                    if a user chooses to do so`)},m(n,a){Y(n,e,a)},d(n){n&&W(e)}}}function zs(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S=t[9].custom_fields&&Es(t);return{c(){e=b("nylas-schedule-editor-section"),n=b("h1"),n.textContent="Custom Fields",a=O(),r=b("p"),r.textContent=`Users will fill out these fields when booking an event with your
            team. By default, they'll be asked for their name and email address.`,o=O(),s=b("div"),S&&S.c(),h=O(),c=b("footer"),_=b("button"),_.textContent="Save Editor Options",p(n,"slot","title"),p(r,"slot","intro"),p(r,"class","intro"),p(s,"slot","contents"),p(s,"class","contents"),p(c,"slot","footer"),Ee(e,"section_title",et.CUSTOM_FIELDS),Ee(e,"expanded",y=t[9].sections[et.CUSTOM_FIELDS].expanded)},m(N,w){Y(N,e,w),m(e,n),m(e,a),m(e,r),m(e,o),m(e,s),S&&S.m(s,null),m(e,h),m(e,c),m(c,_),v=!0,k||(E=te(_,"click",t[22]),k=!0)},p(N,w){N[9].custom_fields?S?(S.p(N,w),w[0]&512&&qe(S,1)):(S=Es(N),S.c(),qe(S,1),S.m(s,null)):S&&(pn(),ut(S,1,1,()=>{S=null}),vn()),(!v||w[0]&512&&y!==(y=N[9].sections[et.CUSTOM_FIELDS].expanded))&&Ee(e,"expanded",y)},i(N){v||(qe(S),v=!0)},o(N){ut(S),v=!1},d(N){N&&W(e),S&&S.d(),k=!1,E()}}}function Es(t){let e,n,a,r,o=[],s=new Map,h,c,_,y,v,k=t[9].custom_fields;const E=M=>M[152].id;for(let M=0;M<k.length;M+=1){let G=hs(t,k,M),I=E(G);s.set(I,o[M]=Is(I,G))}const S=[Jd,Zd],N=[];function w(M,G){return M[17]?1:0}return _=w(t),y=N[_]=S[_](t),{c(){e=b("table"),n=b("thead"),n.innerHTML=`<th></th> 
                  <th>Title and description</th> 
                  <th>Type</th> 
                  <th>Required</th> 
                  <th></th>`,a=O(),r=b("tbody");for(let M=0;M<o.length;M+=1)o[M].c();h=O(),c=b("div"),y.c(),p(e,"cellspacing","0"),p(e,"cellpadding","0"),p(c,"class","add-custom-field")},m(M,G){Y(M,e,G),m(e,n),m(e,a),m(e,r);for(let I=0;I<o.length;I+=1)o[I].m(r,null);Y(M,h,G),Y(M,c,G),N[_].m(c,null),v=!0},p(M,G){G[0]&672104960|G[1]&7&&(k=M[9].custom_fields,pn(),o=tr(o,G,E,1,M,k,s,r,Iu,Is,null,hs),vn());let I=_;_=w(M),_===I?N[_].p(M,G):(pn(),ut(N[I],1,1,()=>{N[I]=null}),vn(),y=N[_],y?y.p(M,G):(y=N[_]=S[_](M),y.c()),qe(y,1),y.m(c,null))},i(M){if(!v){for(let G=0;G<k.length;G+=1)qe(o[G]);qe(y),v=!0}},o(M){for(let G=0;G<o.length;G+=1)ut(o[G]);ut(y),v=!1},d(M){M&&W(e);for(let G=0;G<o.length;G+=1)o[G].d();M&&W(h),M&&W(c),N[_].d()}}}function Os(t){let e,n=t[152].description+"",a;return{c(){e=b("span"),a=ge(n),p(e,"class","description")},m(r,o){Y(r,e,o),m(e,a)},p(r,o){o[0]&512&&n!==(n=r[152].description+"")&&He(a,n)},d(r){r&&W(e)}}}function Ds(t){let e,n;return e=new zd({}),{c(){ea(e.$$.fragment)},m(a,r){Hn(e,a,r),n=!0},i(a){n||(qe(e.$$.fragment,a),n=!0)},o(a){ut(e.$$.fragment,a),n=!1},d(a){Gn(e,a)}}}function Ns(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j,q,ce,Ge,Pe,_e,ze,Be,F,le,se,ye,ue,ie,be;h=new xd({});function Ce(){return t[108](t[152])}function Q(){return t[114](t[152],t[153],t[151])}return{c(){var P;e=b("tr"),n=b("td"),a=b("div"),r=b("h3"),r.textContent="Edit field",o=O(),s=b("button"),ea(h.$$.fragment),c=O(),_=b("span"),_.textContent="Delete",y=O(),v=b("div"),k=b("label"),E=b("div"),E.textContent="Title *",S=O(),N=b("input"),w=O(),M=b("div"),G=b("label"),I=b("div"),I.textContent="Description",U=O(),B=b("input"),z=O(),V=b("div"),L=b("label"),re=b("div"),re.textContent="Type *",K=O(),H=b("select"),Z=b("option"),Z.textContent="Text",de=b("option"),de.textContent="Checkbox",ke=O(),oe=b("div"),j=b("label"),q=b("input"),ce=O(),Ge=b("span"),Ge.textContent="Required",Pe=O(),_e=b("div"),ze=b("button"),ze.innerHTML="<span>Cancel</span>",Be=O(),F=b("button"),le=b("span"),le.textContent="Save changes",ye=O(),p(s,"class","delete"),p(s,"aria-label","Delete"),p(a,"class","header"),p(N,"type","text"),p(N,"aria-label","Title"),p(v,"class","input-field"),p(B,"type","text"),p(B,"aria-label","Description"),p(M,"class","input-field"),Z.__value="text",Z.value=Z.__value,de.__value="checkbox",de.value=de.__value,p(H,"aria-label","Input Type"),t[15].type===void 0&&xn(()=>t[111].call(H)),p(L,"class","select"),p(V,"class","input-field"),p(q,"type","checkbox"),p(q,"aria-label","Required field?"),p(j,"class","checkbox"),p(oe,"class","input-field"),p(ze,"class","cancel"),p(F,"class","save"),F.disabled=se=((P=t[15].title)==null?void 0:P.length)===0||!t[15].type,p(_e,"class","footer"),p(n,"colspan","5"),p(e,"class","edit-custom-field")},m(P,fe){Y(P,e,fe),m(e,n),m(n,a),m(a,r),m(a,o),m(a,s),Hn(h,s,null),m(s,c),m(s,_),m(n,y),m(n,v),m(v,k),m(k,E),m(k,S),m(k,N),Re(N,t[15].title),m(n,w),m(n,M),m(M,G),m(G,I),m(G,U),m(G,B),Re(B,t[15].description),m(n,z),m(n,V),m(V,L),m(L,re),m(L,K),m(L,H),m(H,Z),m(H,de),Sa(H,t[15].type),m(n,ke),m(n,oe),m(oe,j),m(j,q),q.checked=t[15].required,m(j,ce),m(j,Ge),m(n,Pe),m(n,_e),m(_e,ze),m(_e,Be),m(_e,F),m(F,le),m(e,ye),ue=!0,ie||(be=[te(s,"click",Ce),te(N,"input",t[109]),te(B,"input",t[110]),te(H,"change",t[111]),te(q,"change",t[112]),te(ze,"click",t[113]),te(F,"click",Q)],ie=!0)},p(P,fe){var pe;t=P,fe[0]&32768&&N.value!==t[15].title&&Re(N,t[15].title),fe[0]&32768&&B.value!==t[15].description&&Re(B,t[15].description),fe[0]&32768&&Sa(H,t[15].type),fe[0]&32768&&(q.checked=t[15].required),(!ue||fe[0]&32768&&se!==(se=((pe=t[15].title)==null?void 0:pe.length)===0||!t[15].type))&&(F.disabled=se)},i(P){ue||(qe(h.$$.fragment,P),ue=!0)},o(P){ut(h.$$.fragment,P),ue=!1},d(P){P&&W(e),Gn(h),ie=!1,vt(be)}}}function Is(t,e){var ze,Be;let n,a,r,o,s,h,c,_,y,v=((ze=e[152].title)!=null?ze:"\u2014")+"",k,E,S,N,w=((Be=e[152].type)!=null?Be:"\u2014")+"",M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe;h=new cs({});function j(...F){return e[105](e[152],e[151],...F)}let q=e[152].description&&Os(e),ce=e[152].required&&Ds();V=new Id({});function Ge(){return e[106](e[152])}function Pe(){return e[107](e[151])}let _e=e[16]===e[152].id&&Ns(e);return{key:t,first:null,c(){var F;n=b("tr"),a=b("td"),r=b("button"),o=b("span"),o.textContent="Reorder custom field",s=O(),ea(h.$$.fragment),c=O(),_=b("td"),y=b("span"),k=ge(v),E=O(),q&&q.c(),S=O(),N=b("td"),M=ge(w),G=O(),I=b("td"),ce&&ce.c(),U=O(),B=b("td"),z=b("button"),ea(V.$$.fragment),L=O(),re=b("span"),re.textContent="Edit",H=O(),_e&&_e.c(),Z=Aa(),p(o,"class","sr-only"),p(r,"class","drag"),p(a,"class","cta"),p(_,"class","title-and-description"),xe(_,"multi-line",e[152].description),p(N,"class","type"),p(I,"class","required"),p(z,"class","edit"),p(z,"aria-label","Edit"),xe(n,"disabled",e[16]||e[17]),xe(n,"drag-active",e[152].id===((F=e[18])==null?void 0:F.id)),this.first=n},m(F,le){Y(F,n,le),m(n,a),m(a,r),m(r,o),m(r,s),Hn(h,r,null),m(n,c),m(n,_),m(_,y),m(y,k),m(_,E),q&&q.m(_,null),m(n,S),m(n,N),m(N,M),m(n,G),m(n,I),ce&&ce.m(I,null),m(n,U),m(n,B),m(B,z),Hn(V,z,null),m(z,L),m(z,re),Y(F,H,le),_e&&_e.m(F,le),Y(F,Z,le),de=!0,ke||(oe=[te(r,"mousedown",j),te(z,"click",Ge),te(n,"mouseenter",Pe),eo(K=e[34].call(null,n,{id:e[152].id}))],ke=!0)},p(F,le){var se,ye,ue;e=F,(!de||le[0]&512)&&v!==(v=((se=e[152].title)!=null?se:"\u2014")+"")&&He(k,v),e[152].description?q?q.p(e,le):(q=Os(e),q.c(),q.m(_,null)):q&&(q.d(1),q=null),le[0]&512&&xe(_,"multi-line",e[152].description),(!de||le[0]&512)&&w!==(w=((ye=e[152].type)!=null?ye:"\u2014")+"")&&He(M,w),e[152].required?ce?le[0]&512&&qe(ce,1):(ce=Ds(),ce.c(),qe(ce,1),ce.m(I,null)):ce&&(pn(),ut(ce,1,1,()=>{ce=null}),vn()),K&&wa(K.update)&&le[0]&512&&K.update.call(null,{id:e[152].id}),le[0]&196608&&xe(n,"disabled",e[16]||e[17]),le[0]&262656&&xe(n,"drag-active",e[152].id===((ue=e[18])==null?void 0:ue.id)),e[16]===e[152].id?_e?(_e.p(e,le),le[0]&66048&&qe(_e,1)):(_e=Ns(e),_e.c(),qe(_e,1),_e.m(Z.parentNode,Z)):_e&&(pn(),ut(_e,1,1,()=>{_e=null}),vn())},i(F){de||(qe(h.$$.fragment,F),qe(ce),qe(V.$$.fragment,F),qe(_e),de=!0)},o(F){ut(h.$$.fragment,F),ut(ce),ut(V.$$.fragment,F),ut(_e),de=!1},d(F){F&&W(n),Gn(h),q&&q.d(),ce&&ce.d(),Gn(V),F&&W(H),_e&&_e.d(F),F&&W(Z),ke=!1,vt(oe)}}}function Zd(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j,q,ce,Ge,Pe,_e;return{c(){var ze;e=b("div"),n=b("div"),n.innerHTML="<h3>Add a custom field</h3>",a=O(),r=b("div"),o=b("label"),s=b("div"),s.textContent="Title",h=O(),c=b("input"),_=O(),y=b("div"),v=b("label"),k=b("div"),k.textContent="Description",E=O(),S=b("input"),N=O(),w=b("div"),M=b("label"),G=b("div"),G.textContent="Type",I=O(),U=b("select"),B=b("option"),B.textContent="Text",z=b("option"),z.textContent="Checkbox",V=O(),L=b("div"),re=b("label"),K=b("input"),H=O(),Z=b("span"),Z.textContent="Required",de=O(),ke=b("div"),oe=b("button"),oe.innerHTML="<span>Cancel</span>",j=O(),q=b("button"),ce=b("span"),ce.textContent="Add field",p(n,"class","header"),p(c,"type","text"),p(c,"aria-label","Title"),p(r,"class","input-field"),p(S,"type","text"),p(S,"aria-label","Description"),p(y,"class","input-field"),B.__value="text",B.value=B.__value,z.__value="checkbox",z.value=z.__value,p(U,"aria-label","Input Type"),t[14].type===void 0&&xn(()=>t[118].call(U)),p(M,"class","select"),p(w,"class","input-field"),p(K,"type","checkbox"),p(K,"aria-label","Required Field?"),p(re,"class","checkbox"),p(L,"class","input-field"),p(oe,"class","cancel"),p(q,"class","save"),q.disabled=Ge=((ze=t[14].title)==null?void 0:ze.length)===0||!t[14].type,p(ke,"class","footer"),p(e,"class","edit-custom-field")},m(ze,Be){Y(ze,e,Be),m(e,n),m(e,a),m(e,r),m(r,o),m(o,s),m(o,h),m(o,c),Re(c,t[14].title),m(e,_),m(e,y),m(y,v),m(v,k),m(v,E),m(v,S),Re(S,t[14].description),m(e,N),m(e,w),m(w,M),m(M,G),m(M,I),m(M,U),m(U,B),m(U,z),Sa(U,t[14].type),m(e,V),m(e,L),m(L,re),m(re,K),K.checked=t[14].required,m(re,H),m(re,Z),m(e,de),m(e,ke),m(ke,oe),m(ke,j),m(ke,q),m(q,ce),Pe||(_e=[te(c,"input",t[116]),te(S,"input",t[117]),te(U,"change",t[118]),te(K,"change",t[119]),te(oe,"click",t[120]),te(q,"click",t[121])],Pe=!0)},p(ze,Be){var F;Be[0]&16384&&c.value!==ze[14].title&&Re(c,ze[14].title),Be[0]&16384&&S.value!==ze[14].description&&Re(S,ze[14].description),Be[0]&16384&&Sa(U,ze[14].type),Be[0]&16384&&(K.checked=ze[14].required),Be[0]&16384&&Ge!==(Ge=((F=ze[14].title)==null?void 0:F.length)===0||!ze[14].type)&&(q.disabled=Ge)},i:he,o:he,d(ze){ze&&W(e),Pe=!1,vt(_e)}}}function Jd(t){let e,n,a,r,o,s,h;return n=new Fd({}),{c(){e=b("button"),ea(n.$$.fragment),a=O(),r=b("span"),r.textContent="Add a custom field",p(e,"aria-label","Add a custom field")},m(c,_){Y(c,e,_),Hn(n,e,null),m(e,a),m(e,r),o=!0,s||(h=te(e,"click",t[115]),s=!0)},p:he,i(c){o||(qe(n.$$.fragment,c),o=!0)},o(c){ut(n.$$.fragment,c),o=!1},d(c){c&&W(e),Gn(n),s=!1,h()}}}function Ls(t){let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j;return{c(){e=b("nylas-schedule-editor-section"),n=b("h1"),n.textContent="Notification Details",a=O(),r=b("div"),o=b("div"),s=b("strong"),s.textContent="How would you like to notify the customer on event creation?",h=O(),c=b("label"),_=b("input"),y=O(),v=b("span"),v.textContent="Show Message on UI",k=O(),E=b("label"),S=b("input"),N=O(),w=b("span"),w.textContent="Send message via email",M=O(),G=b("label"),I=b("strong"),I.textContent="Notification message",U=O(),B=b("input"),z=O(),V=b("label"),L=b("strong"),L.textContent="Notification Subject",re=O(),K=b("input"),H=O(),Z=b("footer"),de=b("button"),de.textContent="Save Editor Options",p(n,"slot","title"),p(s,"id","notification_mode"),p(_,"type","radio"),p(_,"name","notification_mode"),_.__value=ta.SHOW_MESSAGE,_.value=_.__value,t[73][4].push(_),p(S,"type","radio"),p(S,"name","notification_mode"),S.__value=ta.SEND_MESSAGE,S.value=S.__value,t[73][4].push(S),p(o,"role","radiogroup"),p(o,"aria-labelledby","notification_mode"),p(B,"type","text"),p(K,"type","text"),p(r,"slot","contents"),p(r,"class","contents"),p(Z,"slot","footer"),Ee(e,"section_title",et.NOTIFICATION_DETAILS),Ee(e,"expanded",ke=t[9].sections[et.NOTIFICATION_DETAILS].expanded)},m(q,ce){Y(q,e,ce),m(e,n),m(e,a),m(e,r),m(r,o),m(o,s),m(o,h),m(o,c),m(c,_),_.checked=_.__value===t[9].notification_mode,m(c,y),m(c,v),m(o,k),m(o,E),m(E,S),S.checked=S.__value===t[9].notification_mode,m(E,N),m(E,w),m(r,M),m(r,G),m(G,I),m(G,U),m(G,B),Re(B,t[9].notification_message),m(r,z),m(r,V),m(V,L),m(V,re),m(V,K),Re(K,t[9].notification_subject),m(e,H),m(e,Z),m(Z,de),oe||(j=[te(_,"change",t[122]),te(S,"change",t[123]),te(B,"input",t[124]),te(K,"input",t[125]),te(de,"click",t[22])],oe=!0)},p(q,ce){ce[0]&512&&(_.checked=_.__value===q[9].notification_mode),ce[0]&512&&(S.checked=S.__value===q[9].notification_mode),ce[0]&512&&B.value!==q[9].notification_message&&Re(B,q[9].notification_message),ce[0]&512&&K.value!==q[9].notification_subject&&Re(K,q[9].notification_subject),ce[0]&512&&ke!==(ke=q[9].sections[et.NOTIFICATION_DETAILS].expanded)&&Ee(e,"expanded",ke)},d(q){q&&W(e),t[73][4].splice(t[73][4].indexOf(_),1),t[73][4].splice(t[73][4].indexOf(S),1),oe=!1,vt(j)}}}function Ps(t){var I,U;let e,n,a,r,o,s,h,c,_,y,v,k,E,S,N=[t[9],t[9].events[0],{capacity:h=null},{calendars:c=((I=t[9].events[0])==null?void 0:I.participantEmails)?[]:[{availability:"busy",timeslots:[]}]},{id:t[0]}],w={};for(let B=0;B<N.length;B+=1)w=je(w,N[B]);let M=[{slots_to_book:t[13]},t[9],{capacity:v=null},{calendars:k=((U=t[9].events[0])==null?void 0:U.participantEmails)?[]:[{availability:"busy",timeslots:[]}]},{id:t[0]}],G={};for(let B=0;B<M.length;B+=1)G=je(G,M[B]);return{c(){e=b("span"),n=O(),a=b("aside"),r=b("h1"),r.textContent="Preview",o=O(),s=b("nylas-availability"),_=O(),y=b("nylas-booking"),p(e,"class","gutter"),Gi(s,w),Gi(y,G),p(a,"id","preview")},m(B,z){Y(B,e,z),Y(B,n,z),Y(B,a,z),m(a,r),m(a,o),m(a,s),m(a,_),m(a,y),E||(S=[te(e,"mousedown",t[126]),te(s,"timeSlotChosen",t[127])],E=!0)},p(B,z){var V,L;Gi(s,w=jn(N,[z[0]&512&&B[9],z[0]&512&&B[9].events[0],{capacity:h},z[0]&512&&c!==(c=((V=B[9].events[0])==null?void 0:V.participantEmails)?[]:[{availability:"busy",timeslots:[]}])&&{calendars:c},z[0]&1&&{id:B[0]}])),Gi(y,G=jn(M,[z[0]&8192&&{slots_to_book:B[13]},z[0]&512&&B[9],{capacity:v},z[0]&512&&k!==(k=((L=B[9].events[0])==null?void 0:L.participantEmails)?[]:[{availability:"busy",timeslots:[]}])&&{calendars:k},z[0]&1&&{id:B[0]}]))},d(B){B&&W(e),B&&W(n),B&&W(a),E=!1,vt(S)}}}function Fs(t){let e,n,a,r,o,s,h=t[28],c=[];for(let _=0;_<h.length;_+=1)c[_]=Bs(ms(t,h,_));return{c(){e=b("nylas-schedule-editor-drag-item-placeholder");for(let _=0;_<c.length;_+=1)c[_].c();Ee(e,"left",n=t[21].left),Ee(e,"top",a=t[21].top),Ee(e,"height",r=t[7].height),Ee(e,"width",o=t[7].width),Ee(e,"visible",s=!!t[18])},m(_,y){Y(_,e,y);for(let v=0;v<c.length;v+=1)c[v].m(e,null)},p(_,y){if(y[0]&269746176){h=_[28];let v;for(v=0;v<h.length;v+=1){const k=ms(_,h,v);c[v]?c[v].p(k,y):(c[v]=Bs(k),c[v].c(),c[v].m(e,null))}for(;v<c.length;v+=1)c[v].d(1);c.length=h.length}y[0]&2097152&&n!==(n=_[21].left)&&Ee(e,"left",n),y[0]&2097152&&a!==(a=_[21].top)&&Ee(e,"top",a),y[0]&128&&r!==(r=_[7].height)&&Ee(e,"height",r),y[0]&128&&o!==(o=_[7].width)&&Ee(e,"width",o),y[0]&262144&&s!==(s=!!_[18])&&Ee(e,"visible",s)},d(_){_&&W(e),en(c,_)}}}function Bs(t){let e,n=(t[18]&&t[18][t[149]]||"\u2014")+"",a,r;return{c(){e=b("div"),a=ge(n),r=O(),p(e,"class","drag-preview-cell"),Ie(e,"width",t[20][t[151]].width+"px"),Ie(e,"height",t[20][t[151]].height+"px")},m(o,s){Y(o,e,s),m(e,a),m(e,r)},p(o,s){s[0]&262144&&n!==(n=(o[18]&&o[18][o[149]]||"\u2014")+"")&&He(a,n),s[0]&1048576&&Ie(e,"width",o[20][o[151]].width+"px"),s[0]&1048576&&Ie(e,"height",o[20][o[151]].height+"px")},d(o){o&&W(e)}}}function Qd(t){let e,n,a,r;const o=[Yd,qd],s=[];function h(c,_){return c[4]&&c[4].error?0:c[3]?1:-1}return~(e=h(t))&&(n=s[e]=o[e](t)),{c(){n&&n.c(),a=Aa(),this.c=he},m(c,_){~e&&s[e].m(c,_),Y(c,a,_),r=!0},p(c,_){let y=e;e=h(c),e===y?~e&&s[e].p(c,_):(n&&(pn(),ut(s[y],1,1,()=>{s[y]=null}),vn()),~e?(n=s[e],n?n.p(c,_):(n=s[e]=o[e](c),n.c()),qe(n,1),n.m(a.parentNode,a)):n=null)},i(c){r||(qe(n),r=!0)},o(c){ut(n),r=!1},d(c){~e&&s[e].d(c),c&&W(a)}}}let Xd=35;function $d(t,e,n){let a,r,o;Fn(t,ir,R=>n(138,r=R)),Fn(t,ni,R=>n(66,o=R));var s=this&&this.__awaiter||function(R,we,nt,_t){function Qn(Xn){return Xn instanceof nt?Xn:new nt(function(sa){sa(Xn)})}return new(nt||(nt=Promise))(function(Xn,sa){function Fr(Xt){try{bi(_t.next(Xt))}catch(Ya){sa(Ya)}}function Ui(Xt){try{bi(_t.throw(Xt))}catch(Ya){sa(Ya)}}function bi(Xt){Xt.done?Xn(Xt.value):Qn(Xt.value).then(Fr,Ui)}bi((_t=_t.apply(R,we||[])).next())})};let{id:h=""}=e,{access_token:c=""}=e,{allow_booking:_}=e,{attendees_to_show:y}=e,{capacity:v}=e,{custom_fields:k}=e,{dates_to_show:E}=e,{end_hour:S}=e,{mandate_top_of_hour:N}=e,{max_book_ahead_days:w}=e,{min_book_ahead_days:M}=e,{notification_message:G}=e,{notification_mode:I}=e,{notification_subject:U}=e,{open_hours:B}=e,{partial_bookable_ratio:z}=e,{recurrence:V}=e,{recurrence_cadence:L}=e,{show_as_week:re}=e,{show_preview:K}=e,{show_ticks:H}=e,{show_weekends:Z}=e,{start_date:de}=e,{start_hour:ke}=e,{view_as:oe}=e,{screen_bookings:j}=e,{timezone:q}=e,{events:ce}=e,{sections:Ge}=e;const Pe=nr(Ca()),_e={event_title:"",event_description:"",slot_size:15,event_location:"",event_conferencing:"",participantEmails:[],host_rules:{method:"all"}},ze={allow_booking:!1,attendees_to_show:5,capacity:null,custom_fields:oo,dates_to_show:1,end_hour:17,mandate_top_of_hour:!1,max_book_ahead_days:30,min_book_ahead_days:0,notification_message:"Thank you for scheduling!",notification_mode:ta.SHOW_MESSAGE,notification_subject:"Invitation",open_hours:[],partial_bookable_ratio:.01,recurrence_cadence:["none"],recurrence:"none",show_as_week:!1,show_ticks:!0,show_weekends:!0,start_date:new Date,start_hour:9,view_as:"schedule",screen_bookings:!1,timezone:"",events:[Object.assign({},_e)],sections:{}};let Be,F=Un({},{},ze),le=!1,se={};Xi(()=>s(void 0,void 0,void 0,function*(){yield Oi();const R=JSON.stringify({component_id:h,access_token:c});n(4,se=(yield r[R])||{}),n(9,F=Un(e,se,ze)),be(),hn(),n(3,le=!0),n(9,F.custom_fields=F.custom_fields.map((we,nt)=>(Ft=Ft.concat(String(nt)),Object.assign(Object.assign({},we),{id:String(nt)}))),F)})),Du(()=>{Be.removeEventListener("mousemove",nn),Be.removeEventListener("mouseup",Xe),Dt&&Dt.disconnect()});let ye=e,ue=new Date().toLocaleDateString("en-CA"),ie=!1;function be(){var R;n(5,ue=(R=F.start_date)===null||R===void 0?void 0:R.toLocaleDateString("en-CA")),n(10,ie=!!F.start_date)}function Ce(){const R=Object.assign(Object.assign({},F),{custom_fields:F.custom_fields.map(we=>(delete we.id,we))});cc(h,R,c)}function Q(R){n(9,F.open_hours=R.detail.timeSlots.map(we=>{const{start_time:nt,end_time:_t}=we,Qn={startHour:nt.getHours(),startMinute:nt.getMinutes(),endHour:_t.getHours(),endMinute:_t.getMinutes(),timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone};return(F.show_as_week||F.show_weekends)&&(Qn.startWeekday=nt.getDay(),Qn.endWeekday=_t.getDay()),Qn}),F)}function P(R){const we=new Date(0,0,0,R.startHour,R.startMinute).toLocaleTimeString([],{hour:"numeric",minute:"2-digit",hour12:!0}),nt=new Date(0,0,0,R.endHour,R.endMinute).toLocaleTimeString([],{hour:"numeric",minute:"2-digit",hour12:!0});return(F.show_as_week||F.show_weekends)&&R.startWeekday?`${Bu[R.startWeekday]}: ${we} - ${nt}`:`${we} - ${nt}`}let fe="640px",pe=!1;function Me(R){pe&&n(11,fe=`${R.clientX-Xd}px`)}let Ze;function Je(R,we){var nt;const _t=(nt=R.target)===null||nt===void 0?void 0:nt.value;clearTimeout(Ze),Ze=setTimeout(()=>{we.participantEmails=Fu(_t),n(9,F.events=[...F.events],F)},1e3)}let it,Ue;const lt={title:"",description:"",type:"text",required:!1,id:""},dt=["title","type","required"];let Te=Object.assign({},lt),Ke=Object.assign({},lt),Fe=null,We=!1;function ct(R){n(9,F.custom_fields=F.custom_fields.filter(we=>we!==R),F),n(16,Fe=null)}function J(){const R=Object.assign(Object.assign({},Te),{id:String(F.custom_fields.length)});n(9,F.custom_fields=[...F.custom_fields,R],F),n(14,Te=Object.assign({},lt)),n(65,wt=fs(pt)),n(17,We=!1)}function Qe(R){n(15,Ke=Object.assign(Object.assign({},lt),R)),n(16,Fe=R.id)}let Ve=null,Tt,mt,Ot=[],pt={},wt=[],Ft=[],gt,Yt,At=!1,Ut={left:0,top:0},Dt;function Nt(R,we,nt){At||(n(65,wt=fs(pt)),At=!0),n(19,Tt=nt),n(18,Ve=we),fn(R)}function Xe(){n(18,Ve=null)}function Wt(R){let we=[...F.custom_fields],nt=we[R];we[R]=we[Tt],we[Tt]=nt,n(9,F.custom_fields=we,F),Ft=we.map(_t=>_t.id),n(19,Tt=we.findIndex(_t=>_t.id===(Ve==null?void 0:Ve.id)))}const fn=R=>{const we=mt.height/2,nt=R.pageY;let _t=null;nt<=gt?_t=gt-we:nt>=Yt&&(_t=Yt-we),n(21,Ut={left:mt.x,top:_t!=null?_t:nt-we})};function nn(R){Ve&&fn(R)}function dn(R,we){if(pt[we.id]=R,!mt){const{parentRect:nt,childRects:_t}=ds(R,"td");n(7,mt=nt),n(20,Ot=_t),Dt=new ResizeObserver(([Qn])=>{const{parentRect:Xn,childRects:sa}=ds(Qn.target,"td");n(7,mt=Xn),n(20,Ot=sa),At=!1}),Dt.observe(R)}return{destroy(){delete pt[we.id]}}}function mn(){n(9,F.events=[...F.events,Object.assign({},_e)],F)}function Dn(R){n(9,F.events=F.events.filter(we=>we!==R),F)}function hn(){Object.entries(F.sections).length?Object.values(et).forEach(R=>{F.sections[R]?Object.keys(F.sections[R]).includes("editable")||n(9,F.sections[R].editable=!0,F):n(9,F.sections[R]={expanded:!1,editable:!1},F)}):Object.values(et).forEach((R,we)=>{n(9,F.sections[R]={expanded:we===0,editable:!0},F)})}const Bt=[[],[],[],[],[]],Nn=R=>Dn(R);function tt(R,we){R[we].event_title=this.value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function _n(R,we){R[we].event_description=this.value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Rt(R,we){R[we].event_location=this.value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function In(R,we){R[we].event_conferencing=this.value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function xt(R,we){R[we].slot_size=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function ht(R,we){R[we].slot_size=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function an(R,we){R[we].slot_size=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}const bt=(R,we)=>Je(we,R);function Ae(){F.start_hour=Cn(this.value),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function rt(){F.end_hour=Cn(this.value),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function De(){ie=this.checked,n(10,ie)}const kt=async()=>{ie||(n(5,ue=new Date().toLocaleDateString("en-CA")),await Oi(),n(5,ue=null))};function Ln(){ue=this.value,n(5,ue)}function ya(){F.timezone=Ji(this),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function qn(){F.dates_to_show=Cn(this.value),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Ra(){F.show_as_week=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Yn(){F.show_weekends=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function xa(){F.show_as_week=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function mi(){F.show_weekends=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function kn(){F.show_ticks=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Zn(){F.view_as=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function ra(){F.view_as=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function rn(){F.attendees_to_show=Cn(this.value),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function pa(){F.allow_booking=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function It(){F.screen_bookings=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Mn(){F.partial_bookable_ratio=Cn(this.value),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function gn(){F.recurrence=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function ja(){F.recurrence=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Ha(){F.recurrence=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Va(){F.capacity=Cn(this.value),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Ua(){F.mandate_top_of_hour=this.checked,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Wa(){F.recurrence_cadence=Qa(Bt[0],this.__value,this.checked),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Ka(){F.recurrence_cadence=Qa(Bt[0],this.__value,this.checked),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function yt(){F.recurrence_cadence=Qa(Bt[0],this.__value,this.checked),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function hi(){F.recurrence_cadence=Qa(Bt[0],this.__value,this.checked),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function _i(){F.recurrence_cadence=Qa(Bt[0],this.__value,this.checked),n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}const C=(R,we,nt)=>{Nt(nt,R,we)},$=R=>Qe(R),Se=R=>{Ve&&R!==Tt&&Wt(R)},me=R=>ct(R);function Le(){Ke.title=this.value,n(15,Ke)}function ft(){Ke.description=this.value,n(15,Ke)}function zt(){Ke.type=Ji(this),n(15,Ke)}function Pn(){Ke.required=this.checked,n(15,Ke)}const Qt=()=>{n(16,Fe=null),n(15,Ke=Ai({},lt))},on=(R,we,nt)=>{n(16,Fe=null),n(9,we[nt]=Ai({},Ke),F),n(15,Ke=Ai({},lt))},wn=()=>n(17,We=!0);function va(){Te.title=this.value,n(14,Te)}function Or(){Te.description=this.value,n(14,Te)}function Dr(){Te.type=Ji(this),n(14,Te)}function qa(){Te.required=this.checked,n(14,Te)}const Nr=()=>{n(14,Te=Ai({},lt)),n(17,We=!1)},Ir=()=>J();function Lr(){F.notification_mode=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function Pr(){F.notification_mode=this.__value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function St(){F.notification_message=this.value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}function oa(){F.notification_subject=this.value,n(9,F),n(64,ye),n(148,e),n(4,se),n(3,le),n(5,ue)}const Jn=()=>n(12,pe=!0),la=R=>{n(13,it=R.detail.timeSlots)},Hi=()=>n(12,pe=!1);function Vi(){Ue=this.clientWidth,n(6,Ue)}function gi(R){ua[R?"unshift":"push"](()=>{Be=R,n(2,Be)})}return t.$$set=R=>{n(148,e=je(je({},e),Mt(R))),"id"in R&&n(0,h=R.id),"access_token"in R&&n(37,c=R.access_token),"allow_booking"in R&&n(38,_=R.allow_booking),"attendees_to_show"in R&&n(39,y=R.attendees_to_show),"capacity"in R&&n(40,v=R.capacity),"custom_fields"in R&&n(41,k=R.custom_fields),"dates_to_show"in R&&n(42,E=R.dates_to_show),"end_hour"in R&&n(43,S=R.end_hour),"mandate_top_of_hour"in R&&n(44,N=R.mandate_top_of_hour),"max_book_ahead_days"in R&&n(45,w=R.max_book_ahead_days),"min_book_ahead_days"in R&&n(46,M=R.min_book_ahead_days),"notification_message"in R&&n(47,G=R.notification_message),"notification_mode"in R&&n(48,I=R.notification_mode),"notification_subject"in R&&n(49,U=R.notification_subject),"open_hours"in R&&n(50,B=R.open_hours),"partial_bookable_ratio"in R&&n(51,z=R.partial_bookable_ratio),"recurrence"in R&&n(52,V=R.recurrence),"recurrence_cadence"in R&&n(53,L=R.recurrence_cadence),"show_as_week"in R&&n(54,re=R.show_as_week),"show_preview"in R&&n(55,K=R.show_preview),"show_ticks"in R&&n(56,H=R.show_ticks),"show_weekends"in R&&n(57,Z=R.show_weekends),"start_date"in R&&n(58,de=R.start_date),"start_hour"in R&&n(59,ke=R.start_hour),"view_as"in R&&n(60,oe=R.view_as),"screen_bookings"in R&&n(61,j=R.screen_bookings),"timezone"in R&&n(1,q=R.timezone),"events"in R&&n(62,ce=R.events),"sections"in R&&n(63,Ge=R.sections)},t.$$.update=()=>{t.$$.dirty[0]&16&&Pe("manifestLoaded",se),t.$$.dirty[2]&16&&Object.keys(o).length&&Pe("onError",o),t.$$.dirty[0]&4&&Be&&(Be.addEventListener("mouseup",Xe),Be.addEventListener("mousemove",nn)),JSON.stringify(ye)!==JSON.stringify(e)&&(n(9,F=Un(e,se,ze)),be(),n(64,ye=e)),t.$$.dirty[0]&40&&le&&(ue?n(9,F.start_date=new Date(new Date(ue).getTime()-new Date(ue).getTimezoneOffset()*-6e4),F):n(9,F.start_date=null,F)),t.$$.dirty[0]&64&&n(8,a=Ue>600),t.$$.dirty[0]&256&&n(11,fe=a?"640px":"100%"),t.$$.dirty[0]&128|t.$$.dirty[2]&8&&wt&&(wt[0]&&(gt=document.documentElement.scrollTop+wt[0].top+mt.height/2),wt[wt.length-1]&&(Yt=document.documentElement.scrollTop+wt[wt.length-1].top+mt.height/2))},e=Mt(e),[h,q,Be,le,se,ue,Ue,mt,a,F,ie,fe,pe,it,Te,Ke,Fe,We,Ve,Tt,Ot,Ut,Ce,Q,P,Me,Je,lt,dt,ct,J,Qe,Nt,Wt,dn,mn,Dn,c,_,y,v,k,E,S,N,w,M,G,I,U,B,z,V,L,re,K,H,Z,de,ke,oe,j,ce,Ge,ye,wt,o,Nn,tt,_n,Rt,In,xt,Bt,ht,an,bt,Ae,rt,De,kt,Ln,ya,qn,Ra,Yn,xa,mi,kn,Zn,ra,rn,pa,It,Mn,gn,ja,Ha,Va,Ua,Wa,Ka,yt,hi,_i,C,$,Se,me,Le,ft,zt,Pn,Qt,on,wn,va,Or,Dr,qa,Nr,Ir,Lr,Pr,St,oa,Jn,la,Hi,Vi,gi]}class Rs extends Vn{constructor(e){super();this.shadowRoot.innerHTML="<style>main{--black:#161717;--grey-dark:#636671;--grey:#bdc0cb;--grey-lighter:#dfe1e8;--grey-dark-warm:#9fa4b5;--grey-lightest:#f7f7f8;--grey-background:#f0f1f5;--white:#ffffff;--blue:#314fa9;--blue-lighter:#f0f3ff;--red:#ee3248;--red-lighter:#ffeef0;--fs-12:0.75rem;--fs-14:0.875rem;--fs-16:1rem;--black-90:#2c2e2e;--grey-light:#f7f7f8;--grey-warm:#cbcbcb}*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;list-style:none}.sr-only{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}.loader{width:calc(100% - 16px);height:100vh;display:flex;flex-direction:column;align-items:center;justify-content:center;box-shadow:none;position:absolute}main{font-family:system-ui, sans-serif;display:grid;gap:1rem;background:var(--grey-background)}main button{cursor:pointer}main .settings{resize:both;overflow:auto;display:grid;grid-auto-rows:min-content;gap:1rem;padding:1rem}main .settings nylas-schedule-editor-section{width:100%;overflow:auto}main .settings nylas-schedule-editor-section h1{font-weight:bold;font-size:1.5rem}main .settings nylas-schedule-editor-section .contents{display:grid;gap:24px;margin-bottom:24px;overflow:auto;width:100%}main .settings nylas-schedule-editor-section .contents input[type=text],main .settings nylas-schedule-editor-section .contents select{width:calc(100% - 24px)}main .settings nylas-schedule-editor-section .contents table{border-bottom:1px solid rgba(0, 0, 0, 0.25);grid-column:span 2}main .settings nylas-schedule-editor-section .contents table tr.disabled{opacity:0.6;pointer-events:none;cursor:not-allowed}main .settings nylas-schedule-editor-section .contents table th,main .settings nylas-schedule-editor-section .contents table td{border-bottom:1px solid rgba(0, 0, 0, 0.25);min-height:2rem;padding:0.25rem;text-align:left;vertical-align:middle}main .settings nylas-schedule-editor-section .contents table td.title-and-description.multi-line{max-width:0}main .settings nylas-schedule-editor-section .contents table th.title-and-description span,main .settings nylas-schedule-editor-section .contents table td.title-and-description span{display:block;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}main .settings nylas-schedule-editor-section .contents table th.title-and-description span.description,main .settings nylas-schedule-editor-section .contents table td.title-and-description span.description{color:#6a7285;font-size:14px;line-height:20px}main .settings nylas-schedule-editor-section .contents table td.type{text-transform:capitalize}main .settings nylas-schedule-editor-section .contents table th.required *,main .settings nylas-schedule-editor-section .contents table td.required *{margin-left:1rem}main .settings nylas-schedule-editor-section .contents table th input[type=text],main .settings nylas-schedule-editor-section .contents table th select,main .settings nylas-schedule-editor-section .contents table td input[type=text],main .settings nylas-schedule-editor-section .contents table td select{padding:0.25rem}main .settings nylas-schedule-editor-section .contents table th label,main .settings nylas-schedule-editor-section .contents table td label{display:block;white-space:nowrap}main .settings nylas-schedule-editor-section .contents table th button.drag,main .settings nylas-schedule-editor-section .contents table td button.drag{display:inline-flex;justify-content:space-between;align-items:center;padding:0.5rem;background-color:transparent}main .settings nylas-schedule-editor-section .contents table th button.drag:hover,main .settings nylas-schedule-editor-section .contents table td button.drag:hover{cursor:pointer}main .settings nylas-schedule-editor-section .contents table th button.edit,main .settings nylas-schedule-editor-section .contents table td button.edit{background-color:white;color:var(--blue);font-size:16px;font-weight:normal}main .settings nylas-schedule-editor-section .contents table th button.edit span,main .settings nylas-schedule-editor-section .contents table td button.edit span{margin-left:0.5rem}main .settings nylas-schedule-editor-section .contents table th{border-bottom:2px solid black}main .settings nylas-schedule-editor-section .contents .edit-custom-field{margin:0 1rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div{margin:0.5rem 2em;text-align:left}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.header{display:flex;justify-content:space-between}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.header h3{margin-top:8px}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.header .delete{background-color:white;color:var(--red);flex:0.25;font-size:16px;font-weight:normal;margin-bottom:0.8rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.header .delete span{margin-left:0.5rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.footer{display:flex;justify-content:space-between;border-top:1px solid #dfe1e8;padding-top:0.8rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.footer button{border-radius:4px;font-size:16px;font-weight:normal;padding:0.8rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.footer button.cancel{border:1px solid;background-color:white;color:var(--blue);padding:0.8rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.footer button.save{background-color:var(--blue);color:white}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.footer button:disabled{background-color:var(--grey-warm);cursor:not-allowed}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.footer button span{margin:0}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label{display:flex}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label div{color:#636671;font-size:14px;margin:0}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label input,main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label select{border-radius:4px;border:1px solid black;flex:1;font-size:16px;margin-bottom:0.5rem;padding:0.8rem}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label select{-moz-appearance:none;-webkit-appearance:none;background-image:linear-gradient(45deg, transparent 50%, black 50%), linear-gradient(135deg, black 50%, transparent 50%);background-position:calc(100% - 20px) calc(1em + 4px), calc(100% - 15px) calc(1em + 4px), calc(100% - 2.5em) 0.5em;background-size:5px 5px, 5px 5px, 1px 1.5em;background-repeat:no-repeat}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label select::-ms-expand{display:none}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label.select,main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label.checkbox{width:25%}main .settings nylas-schedule-editor-section .contents .edit-custom-field div.input-field label.checkbox{display:block;margin:1rem 0}main .settings nylas-schedule-editor-section .contents .add-custom-field{grid-column:span 2;text-align:center}main .settings nylas-schedule-editor-section .contents .add-custom-field button{background-color:white;color:var(--blue);font-size:16px;font-weight:normal}main .settings nylas-schedule-editor-section .contents .add-custom-field button span{margin-left:0.5rem}main .settings nylas-schedule-editor-section .contents .add-custom-field button:disabled{background-color:var(--grey-warm);cursor:not-allowed}main .settings nylas-schedule-editor-section .contents label{display:flex;flex-direction:column;gap:12px}main .settings nylas-schedule-editor-section .contents label input{padding:12px}main .settings nylas-schedule-editor-section .contents [role=radiogroup],main .settings nylas-schedule-editor-section .contents [role=checkbox]{display:flex;flex-direction:column;gap:12px}main .settings nylas-schedule-editor-section .contents [role=radiogroup] label,main .settings nylas-schedule-editor-section .contents [role=checkbox] label{flex-direction:row}main .settings nylas-schedule-editor-section .contents>.available-hours{grid-column:-1/1}main .settings nylas-schedule-editor-section .contents.basic-details{grid-template-columns:1fr}main .settings nylas-schedule-editor-section .contents.basic-details>fieldset{border:none;padding:0;display:grid;padding:1rem;gap:1rem;background-color:var(--grey-background)}main .settings nylas-schedule-editor-section .contents.basic-details>fieldset .remove-event{grid-column:-1/1;justify-self:end}main .settings nylas-schedule-editor-section footer{display:grid;grid-auto-flow:column;gap:1rem}main .settings nylas-schedule-editor-section footer button{align-self:flex-end;padding:8px 16px;border-radius:4px;background-color:var(--blue);color:white;border:none;font-weight:600}main aside#preview{height:calc(100vh - 1rem);padding-bottom:1rem;position:sticky;top:0;display:grid;grid-template-rows:auto 1fr 250px;gap:1rem}main aside#preview h1{font-size:1.5rem;font-weight:bold;padding:1rem 0}main .gutter{background:#999;cursor:col-resize}.warning{background-color:var(--red-lighter);border:1px solid var(--red);color:var(--black);padding:0.5rem;font-size:0.9rem}.availability-container{overflow:auto;height:300px}.drag-preview-cell{display:flex;justify-content:flex-start;align-items:center;padding:0.25rem;box-sizing:border-box}</style>",Kt(this,{target:this.shadowRoot,props:$n(this.attributes),customElement:!0},$d,Qd,Zt,{id:0,access_token:37,allow_booking:38,attendees_to_show:39,capacity:40,custom_fields:41,dates_to_show:42,end_hour:43,mandate_top_of_hour:44,max_book_ahead_days:45,min_book_ahead_days:46,notification_message:47,notification_mode:48,notification_subject:49,open_hours:50,partial_bookable_ratio:51,recurrence:52,recurrence_cadence:53,show_as_week:54,show_preview:55,show_ticks:56,show_weekends:57,start_date:58,start_hour:59,view_as:60,screen_bookings:61,timezone:1,events:62,sections:63},null,[-1,-1,-1,-1,-1,-1]),e&&(e.target&&Y(e.target,this,e.anchor),e.props&&(this.$set(e.props),X()))}static get observedAttributes(){return["id","access_token","allow_booking","attendees_to_show","capacity","custom_fields","dates_to_show","end_hour","mandate_top_of_hour","max_book_ahead_days","min_book_ahead_days","notification_message","notification_mode","notification_subject","open_hours","partial_bookable_ratio","recurrence","recurrence_cadence","show_as_week","show_preview","show_ticks","show_weekends","start_date","start_hour","view_as","screen_bookings","timezone","events","sections"]}get id(){return this.$$.ctx[0]}set id(e){this.$$set({id:e}),X()}get access_token(){return this.$$.ctx[37]}set access_token(e){this.$$set({access_token:e}),X()}get allow_booking(){return this.$$.ctx[38]}set allow_booking(e){this.$$set({allow_booking:e}),X()}get attendees_to_show(){return this.$$.ctx[39]}set attendees_to_show(e){this.$$set({attendees_to_show:e}),X()}get capacity(){return this.$$.ctx[40]}set capacity(e){this.$$set({capacity:e}),X()}get custom_fields(){return this.$$.ctx[41]}set custom_fields(e){this.$$set({custom_fields:e}),X()}get dates_to_show(){return this.$$.ctx[42]}set dates_to_show(e){this.$$set({dates_to_show:e}),X()}get end_hour(){return this.$$.ctx[43]}set end_hour(e){this.$$set({end_hour:e}),X()}get mandate_top_of_hour(){return this.$$.ctx[44]}set mandate_top_of_hour(e){this.$$set({mandate_top_of_hour:e}),X()}get max_book_ahead_days(){return this.$$.ctx[45]}set max_book_ahead_days(e){this.$$set({max_book_ahead_days:e}),X()}get min_book_ahead_days(){return this.$$.ctx[46]}set min_book_ahead_days(e){this.$$set({min_book_ahead_days:e}),X()}get notification_message(){return this.$$.ctx[47]}set notification_message(e){this.$$set({notification_message:e}),X()}get notification_mode(){return this.$$.ctx[48]}set notification_mode(e){this.$$set({notification_mode:e}),X()}get notification_subject(){return this.$$.ctx[49]}set notification_subject(e){this.$$set({notification_subject:e}),X()}get open_hours(){return this.$$.ctx[50]}set open_hours(e){this.$$set({open_hours:e}),X()}get partial_bookable_ratio(){return this.$$.ctx[51]}set partial_bookable_ratio(e){this.$$set({partial_bookable_ratio:e}),X()}get recurrence(){return this.$$.ctx[52]}set recurrence(e){this.$$set({recurrence:e}),X()}get recurrence_cadence(){return this.$$.ctx[53]}set recurrence_cadence(e){this.$$set({recurrence_cadence:e}),X()}get show_as_week(){return this.$$.ctx[54]}set show_as_week(e){this.$$set({show_as_week:e}),X()}get show_preview(){return this.$$.ctx[55]}set show_preview(e){this.$$set({show_preview:e}),X()}get show_ticks(){return this.$$.ctx[56]}set show_ticks(e){this.$$set({show_ticks:e}),X()}get show_weekends(){return this.$$.ctx[57]}set show_weekends(e){this.$$set({show_weekends:e}),X()}get start_date(){return this.$$.ctx[58]}set start_date(e){this.$$set({start_date:e}),X()}get start_hour(){return this.$$.ctx[59]}set start_hour(e){this.$$set({start_hour:e}),X()}get view_as(){return this.$$.ctx[60]}set view_as(e){this.$$set({view_as:e}),X()}get screen_bookings(){return this.$$.ctx[61]}set screen_bookings(e){this.$$set({screen_bookings:e}),X()}get timezone(){return this.$$.ctx[1]}set timezone(e){this.$$set({timezone:e}),X()}get events(){return this.$$.ctx[62]}set events(e){this.$$set({events:e}),X()}get sections(){return this.$$.ctx[63]}set sections(e){this.$$set({sections:e}),X()}}return customElements.define("nylas-schedule-editor",Rs),Rs});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
